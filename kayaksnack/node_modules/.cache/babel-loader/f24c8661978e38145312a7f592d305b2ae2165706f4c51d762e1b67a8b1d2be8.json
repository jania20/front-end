{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\980020889\\\\Documents\\\\GitHub\\\\Front-end\\\\kayaksnack\\\\src\\\\components\\\\RealizarPedido.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport emailjs from '@emailjs/browser';\nimport IngredienteInputs from '../IngredienteInputs/IngredienteInputs';\nimport CartModal from '../CartModal/CartModal';\nimport './RealizarPedido.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealizarPedido = () => {\n  _s();\n  // Estado para los datos del formulario de un solo producto\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [currentIngredienteInput, setCurrentIngredienteInput] = useState('');\n  const [selectedIngredients, setSelectedIngredients] = useState([]); // Ahora manejamos los ingredientes seleccionados aquí\n\n  // Estado para los errores de validación del formulario de producto\n  const [productSelectionErrors, setProductSelectionErrors] = useState({});\n\n  // Estado del carrito de compras\n  const [cartItems, setCartItems] = useState([]);\n\n  // Estado para el modal del carrito\n  const [isCartModalOpen, setIsCartModalOpen] = useState(false);\n\n  // Estado para el formulario de datos del cliente\n  const [formData, setFormData] = useState({\n    nombre: '',\n    telefono: '',\n    direccion: '',\n    notas: '',\n    metodoPago: '',\n    confirmacionPedido: false // Nuevo campo\n  });\n\n  // Estado para errores del formulario del cliente\n  const [clientFormErrors, setClientFormErrors] = useState({});\n\n  // Lista de productos disponibles (podría venir de una API en un futuro)\n  const productosDisponibles = ['Elote en vaso', 'Fruta Fresca'\n  // Agrega más productos si es necesario\n  ];\n\n  // Configuración de ingredientes por producto\n  const productosConfig = {\n    'Elote en vaso': ['Mayonesa', 'Chile (en polvo o salsa)', 'Crema', 'Queso (cotija, cheddar, etc.)'],\n    'Fruta Fresca': ['Chamoy', 'Tajín', 'Sal', 'Limón', 'Miel', 'Yogurt']\n  };\n\n  // Obtener los ingredientes para el producto actual\n  const ingredientesParaProductoActual = selectedProduct ? productosConfig[selectedProduct] || [] : [];\n\n  // Ref para EmailJS\n  const form = useRef();\n\n  // Manejador para el cambio de selección de producto\n  const handleProductSelectChange = e => {\n    const product = e.target.value;\n    setSelectedProduct(product);\n    setSelectedIngredients([]); // Resetear ingredientes al cambiar de producto\n    setCurrentIngredienteInput(''); // Limpiar el input de ingrediente\n    setProductSelectionErrors(prev => ({\n      ...prev,\n      selectedProduct: ''\n    })); // Limpiar error\n  };\n\n  // Manejador para añadir un ingrediente a la lista de seleccionados\n  const handleAddIngrediente = () => {\n    const trimmedIngrediente = currentIngredienteInput.trim();\n    if (trimmedIngrediente && !selectedIngredients.includes(trimmedIngrediente)) {\n      setSelectedIngredients(prev => [...prev, trimmedIngmediente]);\n      setCurrentIngredienteInput('');\n      setProductSelectionErrors(prev => ({\n        ...prev,\n        currentIngredienteInput: ''\n      }));\n    } else if (!trimmedIngrediente) {\n      setProductSelectionErrors(prev => ({\n        ...prev,\n        currentIngredienteInput: 'El ingrediente no puede estar vacío.'\n      }));\n    } else if (selectedIngredients.includes(trimmedIngrediente)) {\n      setProductSelectionErrors(prev => ({\n        ...prev,\n        currentIngredienteInput: 'Este ingrediente ya ha sido agregado.'\n      }));\n    }\n  };\n\n  // Manejador para eliminar un ingrediente de la lista de seleccionados\n  const handleRemoveIngrediente = ingredienteToRemove => {\n    setSelectedIngredients(prev => prev.filter(ing => ing !== ingredienteToRemove));\n  };\n\n  // Validar la selección de un solo producto\n  const validateProductSelection = () => {\n    const errors = {};\n    if (!selectedProduct) {\n      errors.selectedProduct = 'Debes seleccionar un producto.';\n    }\n    return errors;\n  };\n\n  // Añadir el producto seleccionado al carrito\n  const handleAddToCart = () => {\n    const errors = validateProductSelection();\n    if (Object.keys(errors).length > 0) {\n      setProductSelectionErrors(errors);\n      return;\n    }\n    const newItem = {\n      id: Date.now(),\n      // Un ID único para cada item en el carrito\n      nombre: selectedProduct,\n      ingredientes: [...selectedIngredients],\n      // Copia para no mutar el estado original\n      precio: 0,\n      // Puedes definir un precio base o calcularlo después\n      cantidad: 1 // Por ahora, siempre 1\n    };\n    setCartItems(prevItems => [...prevItems, newItem]);\n    setSelectedProduct(''); // Resetear selección de producto\n    setSelectedIngredients([]); // Resetear ingredientes\n    setCurrentIngredienteInput(''); // Limpiar input de ingrediente\n    setProductSelectionErrors({}); // Limpiar errores de producto\n  };\n\n  // Manejador para eliminar un item del carrito\n  const handleRemoveFromCart = id => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n\n  // Calculo del total del carrito (simplificado, puedes añadir lógica de precios)\n  const totalCarrito = cartItems.reduce((acc, item) => acc + item.precio * item.cantidad, 0);\n\n  // Estado para el formulario de datos del cliente\n  const handleFormChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    // Limpiar error al cambiar el campo\n    setClientFormErrors(prev => ({\n      ...prev,\n      [name]: ''\n    }));\n  };\n\n  // Validar el formulario del cliente\n  const validateClientForm = () => {\n    const errors = {};\n    if (!formData.nombre.trim()) {\n      errors.nombre = 'El nombre es obligatorio.';\n    }\n    if (!formData.telefono.trim()) {\n      errors.telefono = 'El teléfono es obligatorio.';\n    } else if (!/^\\d{10}$/.test(formData.telefono.trim())) {\n      // Ejemplo: 10 dígitos\n      errors.telefono = 'El teléfono debe contener 10 dígitos.';\n    }\n    if (!formData.direccion.trim()) {\n      errors.direccion = 'La dirección es obligatoria.';\n    }\n    if (!formData.metodoPago) {\n      errors.metodoPago = 'Debes seleccionar un método de pago.';\n    }\n    if (cartItems.length === 0) {\n      errors.cart = 'El carrito está vacío. Agrega al menos un producto para continuar.';\n    }\n    if (!formData.confirmacionPedido) {\n      // Validar el checkbox de confirmación\n      errors.confirmacionPedido = 'Debes confirmar los datos del pedido.';\n    }\n    return errors;\n  };\n\n  // Enviar el formulario completo (carrito + datos cliente)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const clientErrors = validateClientForm();\n    if (Object.keys(clientErrors).length > 0) {\n      setClientFormErrors(clientErrors);\n      return;\n    }\n\n    // Preparar los datos del pedido para EmailJS\n    const orderDetails = cartItems.map(item => `${item.nombre} ${item.ingredientes.length > 0 ? `(${item.ingredientes.join(', ')})` : ''}`).join('\\n');\n    const templateParams = {\n      from_name: formData.nombre,\n      from_phone: formData.telefono,\n      from_address: formData.direccion,\n      order_details: orderDetails,\n      notes: formData.notas || 'No se han proporcionado notas adicionales.',\n      payment_method: formData.metodoPago,\n      total_price: totalCarrito.toFixed(2) // Formatear el total\n    };\n    try {\n      const result = await emailjs.send('YOUR_SERVICE_ID',\n      // Reemplaza con tu Service ID\n      'YOUR_TEMPLATE_ID',\n      // Reemplaza con tu Template ID\n      templateParams, 'YOUR_PUBLIC_KEY' // Reemplaza con tu Public Key\n      );\n      console.log('Correo enviado con éxito!', result.text);\n      alert('¡Pedido enviado con éxito! Nos pondremos en contacto contigo pronto.');\n      // Resetear todo el formulario y carrito\n      setCartItems([]);\n      setFormData({\n        nombre: '',\n        telefono: '',\n        direccion: '',\n        notas: '',\n        metodoPago: '',\n        confirmacionPedido: false\n      });\n      setClientFormErrors({}); // Limpiar errores del cliente\n      // No resetear productSelectionErrors aquí, ya se resetea al añadir al carrito\n    } catch (error) {\n      console.error('Error al enviar el correo:', error.text || error);\n      alert('Hubo un error al enviar tu pedido. Por favor, inténtalo de nuevo.');\n    }\n  };\n  const isAddIngredienteDisabled = currentIngredienteInput.trim() === '' || selectedIngredients.includes(currentIngredienteInput.trim());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seccion-realizar-pedido\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo-seccion\",\n      children: \"Realiza tu Antojo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitulo-seccion\",\n      children: \"Personaliza tu pedido y te lo llevamos hasta tu puerta.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"formulario-contenedor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"producto-seleccion-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A\\xF1adir Producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"selectedProduct\",\n            className: \"etiqueta-campo\",\n            children: [\"Selecciona tu antojo \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"selectedProduct\",\n            name: \"selectedProduct\",\n            value: selectedProduct,\n            onChange: handleProductSelectChange,\n            className: `input-select ${productSelectionErrors.selectedProduct ? 'input-error' : ''}`,\n            \"aria-invalid\": productSelectionErrors.selectedProduct ? \"true\" : \"false\",\n            \"aria-describedby\": \"error-selectedProduct\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Elige un producto --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), productosDisponibles.map(producto => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: producto,\n              children: producto\n            }, producto, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), productSelectionErrors.selectedProduct && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-selectedProduct\",\n            className: \"mensaje-error\",\n            children: productSelectionErrors.selectedProduct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), selectedProduct && productosConfig[selectedProduct] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-details-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"product-title-detail\",\n            children: selectedProduct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"product-description-detail\",\n            children: [selectedProduct === 'Elote en vaso' && 'Un clásico con tu toque personal.', selectedProduct === 'Fruta Fresca' && 'Refrescante y deliciosa, personalízala a tu gusto.', ingredientesParaProductoActual.length > 0 && ' Con opciones para añadir:']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), ingredientesParaProductoActual.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredients-selection-grid\",\n            children: ingredientesParaProductoActual.map(ingrediente =>\n            /*#__PURE__*/\n            // Estos son solo para visualización, no interactivos para añadir/quitar aquí\n            _jsxDEV(\"div\", {\n              className: \"ingredient-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ingredient-name\",\n                children: ingrediente\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ingredient-status\",\n                children: \"(opcional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 45\n              }, this)]\n            }, ingrediente, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flavor-tip\",\n            children: [selectedProduct === 'Elote en vaso' && 'Elige tus aderezos para un elote perfecto.', selectedProduct === 'Fruta Fresca' && 'Crea la combinación ideal con tus aderezos favoritos.']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), selectedProduct && ingredientesParaProductoActual.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(IngredienteInputs, {\n            label: \"Personaliza tus ingredientes (opcional)\",\n            placeholder: \"Escribe para a\\xF1adir un ingrediente\",\n            suggestions: ingredientesParaProductoActual,\n            currentValue: currentIngredienteInput,\n            onValueChange: setCurrentIngredienteInput,\n            onAddClick: handleAddIngrediente,\n            isDisabled: isAddIngredienteDisabled,\n            errorMessage: productSelectionErrors.currentIngredienteInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), selectedIngredients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredientes-agregados\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"titulo-agregados\",\n              children: \"Agregados:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"lista-agregados\",\n              children: selectedIngredients.map(ingrediente => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [ingrediente, /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleRemoveIngrediente(ingrediente),\n                  className: \"boton-eliminar-ingrediente\",\n                  title: \"Eliminar ingrediente\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 49\n                }, this)]\n              }, ingrediente, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"acciones-producto\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddToCart,\n            className: \"boton-a\\xF1adir-carrito\",\n            disabled: !selectedProduct,\n            children: \"A\\xF1adir a mi Antojo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"seccion-carrito-compras\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tu Pedido Actual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"carrito-vacio\",\n          children: \"\\xA1Tu carrito est\\xE1 vac\\xEDo!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"lista-carrito\",\n          children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"item-carrito\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"item-nombre\",\n                children: item.nombre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 41\n              }, this), item.ingredientes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"item-ingredientes\",\n                children: [\"(\", item.ingredientes.join(', '), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-acciones\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleRemoveFromCart(item.id),\n                className: \"boton-eliminar-item\",\n                title: \"Eliminar del carrito\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 37\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resumen-carrito\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"total-carrito\",\n            children: [\"Total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", totalCarrito.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsCartModalOpen(true),\n            className: \"boton-ver-carrito\",\n            disabled: cartItems.length === 0,\n            children: \"Ver Detalles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this), clientFormErrors.cart && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mensaje-error\",\n            children: clientFormErrors.cart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"datos-cliente-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Datos de Env\\xEDo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nombre\",\n            className: \"etiqueta-campo\",\n            children: [\"Nombre \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nombre\",\n            name: \"nombre\",\n            value: formData.nombre,\n            onChange: handleFormChange,\n            className: `input-texto ${clientFormErrors.nombre ? 'input-error' : ''}`,\n            \"aria-invalid\": clientFormErrors.nombre ? \"true\" : \"false\",\n            \"aria-describedby\": \"error-nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), clientFormErrors.nombre && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-nombre\",\n            className: \"mensaje-error\",\n            children: clientFormErrors.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"telefono\",\n            className: \"etiqueta-campo\",\n            children: [\"Tel\\xE9fono \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"telefono\",\n            name: \"telefono\",\n            value: formData.telefono,\n            onChange: handleFormChange,\n            className: `input-texto ${clientFormErrors.telefono ? 'input-error' : ''}`,\n            \"aria-invalid\": clientFormErrors.telefono ? \"true\" : \"false\",\n            \"aria-describedby\": \"error-telefono\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this), clientFormErrors.telefono && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-telefono\",\n            className: \"mensaje-error\",\n            children: clientFormErrors.telefono\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"direccion\",\n            className: \"etiqueta-campo\",\n            children: [\"Direcci\\xF3n de Env\\xEDo \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"direccion\",\n            name: \"direccion\",\n            value: formData.direccion,\n            onChange: handleFormChange,\n            className: `input-texto ${clientFormErrors.direccion ? 'input-error' : ''}`,\n            \"aria-invalid\": clientFormErrors.direccion ? \"true\" : \"false\",\n            \"aria-describedby\": \"error-direccion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this), clientFormErrors.direccion && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-direccion\",\n            className: \"mensaje-error\",\n            children: clientFormErrors.direccion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"notas\",\n            className: \"etiqueta-campo\",\n            children: \"Notas Adicionales (opcional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"notas\",\n            name: \"notas\",\n            value: formData.notas,\n            onChange: handleFormChange,\n            className: \"input-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"metodoPago\",\n            className: \"etiqueta-campo\",\n            children: [\"M\\xE9todo de Pago \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"metodoPago\",\n            name: \"metodoPago\",\n            value: formData.metodoPago,\n            onChange: handleFormChange,\n            className: `input-select ${clientFormErrors.metodoPago ? 'input-error' : ''}`,\n            \"aria-invalid\": clientFormErrors.metodoPago ? \"true\" : \"false\",\n            \"aria-describedby\": \"error-metodoPago\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Selecciona --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Efectivo\",\n              children: \"Efectivo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Tarjeta al momento de entrega\",\n              children: \"Tarjeta al momento de entrega\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 25\n          }, this), clientFormErrors.metodoPago && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-metodoPago\",\n            className: \"mensaje-error\",\n            children: clientFormErrors.metodoPago\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo checkbox-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"confirmacionPedido\",\n            name: \"confirmacionPedido\",\n            checked: formData.confirmacionPedido,\n            onChange: handleFormChange,\n            className: `input-checkbox ${clientFormErrors.confirmacionPedido ? 'checkbox-error' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmacionPedido\",\n            className: \"etiqueta-checkbox\",\n            children: [\"Confirmo que los datos del pedido son correctos y deseo realizarlo. \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 97\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 25\n          }, this), clientFormErrors.confirmacionPedido && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-confirmacionPedido\",\n            className: \"mensaje-error\",\n            children: clientFormErrors.confirmacionPedido\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"boton-enviar-pedido\",\n        children: \"Confirmar Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CartModal, {\n      isOpen: isCartModalOpen,\n      onClose: () => setIsCartModalOpen(false),\n      cartItems: cartItems,\n      total: totalCarrito,\n      onRemoveItem: handleRemoveFromCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n};\n_s(RealizarPedido, \"rr3BL6nl0RmNJ68MaXmjXVwdjtw=\");\n_c = RealizarPedido;\nexport default RealizarPedido;\nvar _c;\n$RefreshReg$(_c, \"RealizarPedido\");","map":{"version":3,"names":["React","useState","useEffect","useRef","emailjs","IngredienteInputs","CartModal","jsxDEV","_jsxDEV","RealizarPedido","_s","selectedProduct","setSelectedProduct","currentIngredienteInput","setCurrentIngredienteInput","selectedIngredients","setSelectedIngredients","productSelectionErrors","setProductSelectionErrors","cartItems","setCartItems","isCartModalOpen","setIsCartModalOpen","formData","setFormData","nombre","telefono","direccion","notas","metodoPago","confirmacionPedido","clientFormErrors","setClientFormErrors","productosDisponibles","productosConfig","ingredientesParaProductoActual","form","handleProductSelectChange","e","product","target","value","prev","handleAddIngrediente","trimmedIngrediente","trim","includes","trimmedIngmediente","handleRemoveIngrediente","ingredienteToRemove","filter","ing","validateProductSelection","errors","handleAddToCart","Object","keys","length","newItem","id","Date","now","ingredientes","precio","cantidad","prevItems","handleRemoveFromCart","item","totalCarrito","reduce","acc","handleFormChange","name","type","checked","validateClientForm","test","cart","handleSubmit","preventDefault","clientErrors","orderDetails","map","join","templateParams","from_name","from_phone","from_address","order_details","notes","payment_method","total_price","toFixed","result","send","console","log","text","alert","error","isAddIngredienteDisabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","producto","ingrediente","label","placeholder","suggestions","currentValue","onValueChange","onAddClick","isDisabled","errorMessage","onClick","title","disabled","isOpen","onClose","total","onRemoveItem","_c","$RefreshReg$"],"sources":["C:/Users/980020889/Documents/GitHub/Front-end/kayaksnack/src/components/RealizarPedido.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport emailjs from '@emailjs/browser';\r\nimport IngredienteInputs from '../IngredienteInputs/IngredienteInputs';\r\nimport CartModal from '../CartModal/CartModal';\r\nimport './RealizarPedido.css';\r\n\r\nconst RealizarPedido = () => {\r\n    // Estado para los datos del formulario de un solo producto\r\n    const [selectedProduct, setSelectedProduct] = useState('');\r\n    const [currentIngredienteInput, setCurrentIngredienteInput] = useState('');\r\n    const [selectedIngredients, setSelectedIngredients] = useState([]); // Ahora manejamos los ingredientes seleccionados aquí\r\n\r\n    // Estado para los errores de validación del formulario de producto\r\n    const [productSelectionErrors, setProductSelectionErrors] = useState({});\r\n\r\n    // Estado del carrito de compras\r\n    const [cartItems, setCartItems] = useState([]);\r\n\r\n    // Estado para el modal del carrito\r\n    const [isCartModalOpen, setIsCartModalOpen] = useState(false);\r\n\r\n    // Estado para el formulario de datos del cliente\r\n    const [formData, setFormData] = useState({\r\n        nombre: '',\r\n        telefono: '',\r\n        direccion: '',\r\n        notas: '',\r\n        metodoPago: '',\r\n        confirmacionPedido: false, // Nuevo campo\r\n    });\r\n\r\n    // Estado para errores del formulario del cliente\r\n    const [clientFormErrors, setClientFormErrors] = useState({});\r\n\r\n    // Lista de productos disponibles (podría venir de una API en un futuro)\r\n    const productosDisponibles = [\r\n        'Elote en vaso',\r\n        'Fruta Fresca',\r\n        // Agrega más productos si es necesario\r\n    ];\r\n\r\n    // Configuración de ingredientes por producto\r\n    const productosConfig = {\r\n        'Elote en vaso': ['Mayonesa', 'Chile (en polvo o salsa)', 'Crema', 'Queso (cotija, cheddar, etc.)'],\r\n        'Fruta Fresca': ['Chamoy', 'Tajín', 'Sal', 'Limón', 'Miel', 'Yogurt'],\r\n    };\r\n\r\n    // Obtener los ingredientes para el producto actual\r\n    const ingredientesParaProductoActual = selectedProduct ? productosConfig[selectedProduct] || [] : [];\r\n\r\n    // Ref para EmailJS\r\n    const form = useRef();\r\n\r\n    // Manejador para el cambio de selección de producto\r\n    const handleProductSelectChange = (e) => {\r\n        const product = e.target.value;\r\n        setSelectedProduct(product);\r\n        setSelectedIngredients([]); // Resetear ingredientes al cambiar de producto\r\n        setCurrentIngredienteInput(''); // Limpiar el input de ingrediente\r\n        setProductSelectionErrors(prev => ({ ...prev, selectedProduct: '' })); // Limpiar error\r\n    };\r\n\r\n    // Manejador para añadir un ingrediente a la lista de seleccionados\r\n    const handleAddIngrediente = () => {\r\n        const trimmedIngrediente = currentIngredienteInput.trim();\r\n        if (trimmedIngrediente && !selectedIngredients.includes(trimmedIngrediente)) {\r\n            setSelectedIngredients(prev => [...prev, trimmedIngmediente]);\r\n            setCurrentIngredienteInput('');\r\n            setProductSelectionErrors(prev => ({ ...prev, currentIngredienteInput: '' }));\r\n        } else if (!trimmedIngrediente) {\r\n            setProductSelectionErrors(prev => ({ ...prev, currentIngredienteInput: 'El ingrediente no puede estar vacío.' }));\r\n        } else if (selectedIngredients.includes(trimmedIngrediente)) {\r\n            setProductSelectionErrors(prev => ({ ...prev, currentIngredienteInput: 'Este ingrediente ya ha sido agregado.' }));\r\n        }\r\n    };\r\n\r\n    // Manejador para eliminar un ingrediente de la lista de seleccionados\r\n    const handleRemoveIngrediente = (ingredienteToRemove) => {\r\n        setSelectedIngredients(prev => prev.filter(ing => ing !== ingredienteToRemove));\r\n    };\r\n\r\n    // Validar la selección de un solo producto\r\n    const validateProductSelection = () => {\r\n        const errors = {};\r\n        if (!selectedProduct) {\r\n            errors.selectedProduct = 'Debes seleccionar un producto.';\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Añadir el producto seleccionado al carrito\r\n    const handleAddToCart = () => {\r\n        const errors = validateProductSelection();\r\n        if (Object.keys(errors).length > 0) {\r\n            setProductSelectionErrors(errors);\r\n            return;\r\n        }\r\n\r\n        const newItem = {\r\n            id: Date.now(), // Un ID único para cada item en el carrito\r\n            nombre: selectedProduct,\r\n            ingredientes: [...selectedIngredients], // Copia para no mutar el estado original\r\n            precio: 0, // Puedes definir un precio base o calcularlo después\r\n            cantidad: 1, // Por ahora, siempre 1\r\n        };\r\n\r\n        setCartItems(prevItems => [...prevItems, newItem]);\r\n        setSelectedProduct(''); // Resetear selección de producto\r\n        setSelectedIngredients([]); // Resetear ingredientes\r\n        setCurrentIngredienteInput(''); // Limpiar input de ingrediente\r\n        setProductSelectionErrors({}); // Limpiar errores de producto\r\n    };\r\n\r\n    // Manejador para eliminar un item del carrito\r\n    const handleRemoveFromCart = (id) => {\r\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id));\r\n    };\r\n\r\n    // Calculo del total del carrito (simplificado, puedes añadir lógica de precios)\r\n    const totalCarrito = cartItems.reduce((acc, item) => acc + (item.precio * item.cantidad), 0);\r\n\r\n    // Estado para el formulario de datos del cliente\r\n    const handleFormChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: type === 'checkbox' ? checked : value,\r\n        }));\r\n        // Limpiar error al cambiar el campo\r\n        setClientFormErrors(prev => ({ ...prev, [name]: '' }));\r\n    };\r\n\r\n    // Validar el formulario del cliente\r\n    const validateClientForm = () => {\r\n        const errors = {};\r\n        if (!formData.nombre.trim()) {\r\n            errors.nombre = 'El nombre es obligatorio.';\r\n        }\r\n        if (!formData.telefono.trim()) {\r\n            errors.telefono = 'El teléfono es obligatorio.';\r\n        } else if (!/^\\d{10}$/.test(formData.telefono.trim())) { // Ejemplo: 10 dígitos\r\n            errors.telefono = 'El teléfono debe contener 10 dígitos.';\r\n        }\r\n        if (!formData.direccion.trim()) {\r\n            errors.direccion = 'La dirección es obligatoria.';\r\n        }\r\n        if (!formData.metodoPago) {\r\n            errors.metodoPago = 'Debes seleccionar un método de pago.';\r\n        }\r\n        if (cartItems.length === 0) {\r\n            errors.cart = 'El carrito está vacío. Agrega al menos un producto para continuar.';\r\n        }\r\n        if (!formData.confirmacionPedido) { // Validar el checkbox de confirmación\r\n            errors.confirmacionPedido = 'Debes confirmar los datos del pedido.';\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    // Enviar el formulario completo (carrito + datos cliente)\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const clientErrors = validateClientForm();\r\n        if (Object.keys(clientErrors).length > 0) {\r\n            setClientFormErrors(clientErrors);\r\n            return;\r\n        }\r\n\r\n        // Preparar los datos del pedido para EmailJS\r\n        const orderDetails = cartItems.map(item =>\r\n            `${item.nombre} ${item.ingredientes.length > 0 ? `(${item.ingredientes.join(', ')})` : ''}`\r\n        ).join('\\n');\r\n\r\n        const templateParams = {\r\n            from_name: formData.nombre,\r\n            from_phone: formData.telefono,\r\n            from_address: formData.direccion,\r\n            order_details: orderDetails,\r\n            notes: formData.notas || 'No se han proporcionado notas adicionales.',\r\n            payment_method: formData.metodoPago,\r\n            total_price: totalCarrito.toFixed(2), // Formatear el total\r\n        };\r\n\r\n        try {\r\n            const result = await emailjs.send(\r\n                'YOUR_SERVICE_ID', // Reemplaza con tu Service ID\r\n                'YOUR_TEMPLATE_ID', // Reemplaza con tu Template ID\r\n                templateParams,\r\n                'YOUR_PUBLIC_KEY' // Reemplaza con tu Public Key\r\n            );\r\n            console.log('Correo enviado con éxito!', result.text);\r\n            alert('¡Pedido enviado con éxito! Nos pondremos en contacto contigo pronto.');\r\n            // Resetear todo el formulario y carrito\r\n            setCartItems([]);\r\n            setFormData({\r\n                nombre: '',\r\n                telefono: '',\r\n                direccion: '',\r\n                notas: '',\r\n                metodoPago: '',\r\n                confirmacionPedido: false,\r\n            });\r\n            setClientFormErrors({}); // Limpiar errores del cliente\r\n            // No resetear productSelectionErrors aquí, ya se resetea al añadir al carrito\r\n        } catch (error) {\r\n            console.error('Error al enviar el correo:', error.text || error);\r\n            alert('Hubo un error al enviar tu pedido. Por favor, inténtalo de nuevo.');\r\n        }\r\n    };\r\n\r\n\r\n    const isAddIngredienteDisabled = currentIngredienteInput.trim() === '' || selectedIngredients.includes(currentIngredienteInput.trim());\r\n\r\n    return (\r\n        <div className=\"seccion-realizar-pedido\">\r\n            <h1 className=\"titulo-seccion\">Realiza tu Antojo</h1>\r\n            <p className=\"subtitulo-seccion\">Personaliza tu pedido y te lo llevamos hasta tu puerta.</p>\r\n\r\n            <form onSubmit={handleSubmit} className=\"formulario-contenedor\">\r\n                {/* === SECCIÓN PARA AÑADIR UN SOLO PRODUCTO AL CARRITO === */}\r\n                <div className=\"producto-seleccion-card\">\r\n                    <h2>Añadir Producto</h2>\r\n                    {/* Campo Producto */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"selectedProduct\" className=\"etiqueta-campo\">\r\n                            Selecciona tu antojo <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <select\r\n                            id=\"selectedProduct\"\r\n                            name=\"selectedProduct\"\r\n                            value={selectedProduct}\r\n                            onChange={handleProductSelectChange}\r\n                            className={`input-select ${productSelectionErrors.selectedProduct ? 'input-error' : ''}`}\r\n                            aria-invalid={productSelectionErrors.selectedProduct ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-selectedProduct\"\r\n                        >\r\n                            <option value=\"\">-- Elige un producto --</option>\r\n                            {productosDisponibles.map(producto => (\r\n                                <option key={producto} value={producto}>{producto}</option>\r\n                            ))}\r\n                        </select>\r\n                        {productSelectionErrors.selectedProduct && <p id=\"error-selectedProduct\" className=\"mensaje-error\">{productSelectionErrors.selectedProduct}</p>}\r\n                    </div>\r\n\r\n                    {/* NUEVA SECCIÓN DE DETALLES DEL PRODUCTO SELECCIONADO (ESTILIZADA) */}\r\n                    {selectedProduct && productosConfig[selectedProduct] && (\r\n                        <div className=\"product-details-card\">\r\n                            <h3 className=\"product-title-detail\">{selectedProduct}</h3>\r\n                            <p className=\"product-description-detail\">\r\n                                {selectedProduct === 'Elote en vaso' && 'Un clásico con tu toque personal.'}\r\n                                {selectedProduct === 'Fruta Fresca' && 'Refrescante y deliciosa, personalízala a tu gusto.'}\r\n                                {/* Agrega más descripciones para otros productos si es necesario */}\r\n                                {ingredientesParaProductoActual.length > 0 && ' Con opciones para añadir:'}\r\n                            </p>\r\n\r\n                            {ingredientesParaProductoActual.length > 0 && (\r\n                                <div className=\"ingredients-selection-grid\">\r\n                                    {ingredientesParaProductoActual.map(ingrediente => (\r\n                                        // Estos son solo para visualización, no interactivos para añadir/quitar aquí\r\n                                        <div key={ingrediente} className=\"ingredient-option\">\r\n                                            <span className=\"ingredient-name\">{ingrediente}</span>\r\n                                            <span className=\"ingredient-status\">(opcional)</span>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                            <p className=\"flavor-tip\">\r\n                                {selectedProduct === 'Elote en vaso' && 'Elige tus aderezos para un elote perfecto.'}\r\n                                {selectedProduct === 'Fruta Fresca' && 'Crea la combinación ideal con tus aderezos favoritos.'}\r\n                                {/* Agrega más tips para otros productos si es necesario */}\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Sección de añadir ingredientes (mostrar solo si el producto tiene ingredientes definidos) */}\r\n                    {selectedProduct && ingredientesParaProductoActual.length > 0 && (\r\n                        <div className=\"campo-grupo\">\r\n                            <IngredienteInputs\r\n                                label=\"Personaliza tus ingredientes (opcional)\"\r\n                                placeholder=\"Escribe para añadir un ingrediente\"\r\n                                suggestions={ingredientesParaProductoActual}\r\n                                currentValue={currentIngredienteInput}\r\n                                onValueChange={setCurrentIngredienteInput}\r\n                                onAddClick={handleAddIngrediente}\r\n                                isDisabled={isAddIngredienteDisabled}\r\n                                errorMessage={productSelectionErrors.currentIngredienteInput}\r\n                            />\r\n                            {selectedIngredients.length > 0 && (\r\n                                <div className=\"ingredientes-agregados\">\r\n                                    <p className=\"titulo-agregados\">Agregados:</p>\r\n                                    <ul className=\"lista-agregados\">\r\n                                        {selectedIngredients.map(ingrediente => (\r\n                                            <li key={ingrediente}>\r\n                                                {ingrediente}\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={() => handleRemoveIngrediente(ingrediente)}\r\n                                                    className=\"boton-eliminar-ingrediente\"\r\n                                                    title=\"Eliminar ingrediente\"\r\n                                                >\r\n                                                    &times;\r\n                                                </button>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"acciones-producto\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleAddToCart}\r\n                            className=\"boton-añadir-carrito\"\r\n                            disabled={!selectedProduct}\r\n                        >\r\n                            Añadir a mi Antojo\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* === SECCIÓN DEL CARRITO DE COMPRAS === */}\r\n                <div className=\"seccion-carrito-compras\">\r\n                    <h2>Tu Pedido Actual</h2>\r\n                    {cartItems.length === 0 ? (\r\n                        <p className=\"carrito-vacio\">¡Tu carrito está vacío!</p>\r\n                    ) : (\r\n                        <ul className=\"lista-carrito\">\r\n                            {cartItems.map(item => (\r\n                                <li key={item.id} className=\"item-carrito\">\r\n                                    <div className=\"item-info\">\r\n                                        <span className=\"item-nombre\">{item.nombre}</span>\r\n                                        {item.ingredientes.length > 0 && (\r\n                                            <span className=\"item-ingredientes\">({item.ingredientes.join(', ')})</span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"item-acciones\">\r\n                                        {/* <span className=\"item-cantidad\">x{item.cantidad}</span> */}\r\n                                        {/* <span className=\"item-precio\">${item.precio.toFixed(2)}</span> */}\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={() => handleRemoveFromCart(item.id)}\r\n                                            className=\"boton-eliminar-item\"\r\n                                            title=\"Eliminar del carrito\"\r\n                                        >\r\n                                            &times;\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n\r\n                    <div className=\"resumen-carrito\">\r\n                        <p className=\"total-carrito\">Total: <span>${totalCarrito.toFixed(2)}</span></p>\r\n                        <button type=\"button\" onClick={() => setIsCartModalOpen(true)} className=\"boton-ver-carrito\" disabled={cartItems.length === 0}>\r\n                            Ver Detalles\r\n                        </button>\r\n                        {clientFormErrors.cart && <p className=\"mensaje-error\">{clientFormErrors.cart}</p>}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* === SECCIÓN DE DATOS DEL CLIENTE === */}\r\n                <div className=\"datos-cliente-card\">\r\n                    <h2>Datos de Envío</h2>\r\n                    {/* Campo Nombre */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"nombre\" className=\"etiqueta-campo\">\r\n                            Nombre <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            value={formData.nombre}\r\n                            onChange={handleFormChange}\r\n                            className={`input-texto ${clientFormErrors.nombre ? 'input-error' : ''}`}\r\n                            aria-invalid={clientFormErrors.nombre ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-nombre\"\r\n                        />\r\n                        {clientFormErrors.nombre && <p id=\"error-nombre\" className=\"mensaje-error\">{clientFormErrors.nombre}</p>}\r\n                    </div>\r\n\r\n                    {/* Campo Teléfono */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"telefono\" className=\"etiqueta-campo\">\r\n                            Teléfono <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"tel\"\r\n                            id=\"telefono\"\r\n                            name=\"telefono\"\r\n                            value={formData.telefono}\r\n                            onChange={handleFormChange}\r\n                            className={`input-texto ${clientFormErrors.telefono ? 'input-error' : ''}`}\r\n                            aria-invalid={clientFormErrors.telefono ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-telefono\"\r\n                        />\r\n                        {clientFormErrors.telefono && <p id=\"error-telefono\" className=\"mensaje-error\">{clientFormErrors.telefono}</p>}\r\n                    </div>\r\n\r\n                    {/* Campo Dirección */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"direccion\" className=\"etiqueta-campo\">\r\n                            Dirección de Envío <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"direccion\"\r\n                            name=\"direccion\"\r\n                            value={formData.direccion}\r\n                            onChange={handleFormChange}\r\n                            className={`input-texto ${clientFormErrors.direccion ? 'input-error' : ''}`}\r\n                            aria-invalid={clientFormErrors.direccion ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-direccion\"\r\n                        />\r\n                        {clientFormErrors.direccion && <p id=\"error-direccion\" className=\"mensaje-error\">{clientFormErrors.direccion}</p>}\r\n                    </div>\r\n\r\n                    {/* Campo Notas Adicionales */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"notas\" className=\"etiqueta-campo\">Notas Adicionales (opcional)</label>\r\n                        <textarea\r\n                            id=\"notas\"\r\n                            name=\"notas\"\r\n                            value={formData.notas}\r\n                            onChange={handleFormChange}\r\n                            className=\"input-textarea\"\r\n                        ></textarea>\r\n                    </div>\r\n\r\n                    {/* Campo Método de Pago */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"metodoPago\" className=\"etiqueta-campo\">\r\n                            Método de Pago <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <select\r\n                            id=\"metodoPago\"\r\n                            name=\"metodoPago\"\r\n                            value={formData.metodoPago}\r\n                            onChange={handleFormChange}\r\n                            className={`input-select ${clientFormErrors.metodoPago ? 'input-error' : ''}`}\r\n                            aria-invalid={clientFormErrors.metodoPago ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-metodoPago\"\r\n                        >\r\n                            <option value=\"\">-- Selecciona --</option>\r\n                            <option value=\"Efectivo\">Efectivo</option>\r\n                            <option value=\"Tarjeta al momento de entrega\">Tarjeta al momento de entrega</option>\r\n                            {/* Agrega más opciones de pago si las tienes */}\r\n                        </select>\r\n                        {clientFormErrors.metodoPago && <p id=\"error-metodoPago\" className=\"mensaje-error\">{clientFormErrors.metodoPago}</p>}\r\n                    </div>\r\n\r\n                    {/* Checkbox de confirmación */}\r\n                    <div className=\"campo-grupo checkbox-grupo\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"confirmacionPedido\"\r\n                            name=\"confirmacionPedido\"\r\n                            checked={formData.confirmacionPedido}\r\n                            onChange={handleFormChange}\r\n                            className={`input-checkbox ${clientFormErrors.confirmacionPedido ? 'checkbox-error' : ''}`}\r\n                        />\r\n                        <label htmlFor=\"confirmacionPedido\" className=\"etiqueta-checkbox\">\r\n                            Confirmo que los datos del pedido son correctos y deseo realizarlo. <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        {clientFormErrors.confirmacionPedido && <p id=\"error-confirmacionPedido\" className=\"mensaje-error\">{clientFormErrors.confirmacionPedido}</p>}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Botón de Enviar Pedido Final */}\r\n                <button type=\"submit\" className=\"boton-enviar-pedido\">\r\n                    Confirmar Pedido\r\n                </button>\r\n            </form>\r\n\r\n            {/* Modal del Carrito */}\r\n            <CartModal\r\n                isOpen={isCartModalOpen}\r\n                onClose={() => setIsCartModalOpen(false)}\r\n                cartItems={cartItems}\r\n                total={totalCarrito}\r\n                onRemoveItem={handleRemoveFromCart}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RealizarPedido;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}