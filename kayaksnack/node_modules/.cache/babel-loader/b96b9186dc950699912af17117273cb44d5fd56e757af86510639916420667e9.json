{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\980020889\\\\Documents\\\\GitHub\\\\Front-end\\\\kayaksnack\\\\src\\\\components\\\\RealizarPedido.js\",\n  _s = $RefreshSig$();\n// src/components/RealizarPedido.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './RealizarPedido.css';\nimport IngredienteInputs from './IngredienteInputs';\nimport SuccessModal from './SuccessModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealizarPedido() {\n  _s();\n  var _productosConfig$sele, _productosConfig$sele2;\n  // === 1. CONFIGURACIÓN DE PRODUCTOS (AHORA CON PRECIOS) ===\n  const productosConfig = {\n    '': {\n      ingredients: [],\n      price: 0\n    },\n    // Vacío, sin ingredientes ni precio\n    'Fruta Fresca': {\n      ingredients: ['Chamoy', 'Tajín', 'Miguelito', 'Leche Condensada', 'Sal', 'Limón', 'Miel'],\n      price: 50.00\n    },\n    // PRECIO EJEMPLO\n    'Elote en vaso': {\n      ingredients: ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla', 'Limón', 'Sal'],\n      price: 45.00\n    },\n    // PRECIO EJEMPLO\n    'Russa': {\n      ingredients: [],\n      price: 60.00\n    },\n    // PRECIO EJEMPLO\n    'Tosticeviche': {\n      ingredients: ['Salsa Negra', 'Aguacate', 'Limón'],\n      price: 75.00\n    },\n    // PRECIO EJEMPLO\n    'Tostielote': {\n      ingredients: ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla'],\n      price: 70.00\n    },\n    // PRECIO EJEMPLO\n    'Boyas': {\n      ingredients: ['Chamoy', 'Tajín', 'Miguelito'],\n      price: 30.00\n    },\n    // PRECIO EJEMPLO\n    'Tostada': {\n      ingredients: ['Crema', 'Queso', 'Aguacate'],\n      price: 55.00\n    },\n    // PRECIO EJEMPLO\n    'Litro Ceviche': {\n      ingredients: ['Aguacate', 'Salsa Picante', 'Limón'],\n      price: 120.00\n    },\n    // PRECIO EJEMPLO\n    'Chilidog': {\n      ingredients: ['Chili', 'Queso', 'Jalapeños', 'Cebolla'],\n      price: 65.00\n    } // PRECIO EJEMPLO\n  };\n  const productosDisponibles = Object.keys(productosConfig).filter(key => key !== '');\n\n  // === 2. ESTADO DEL FORMULARIO (AHORA PARA UN SOLO ITEM A LA VEZ + CARRITO) ===\n  const [nombre, setNombre] = useState('');\n  const [telefono, setTelefono] = useState('');\n  const [metodoEntrega, setMetodoEntrega] = useState('recoger');\n  const [direccion, setDireccion] = useState('');\n  const [metodoPago, setMetodoPago] = useState('fisico');\n\n  // Estado para la SELECCIÓN ACTUAL del producto (antes de añadir al carrito)\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [selectedIngredients, setSelectedIngredients] = useState([]);\n  const [currentIngredienteInput, setCurrentIngredienteInput] = useState('');\n  const [currentProductQuantity, setCurrentProductQuantity] = useState(1); // Cantidad para el producto actual\n\n  // ESTADO DEL CARRITO: Array de objetos de productos con sus detalles\n  const [cartItems, setCartItems] = useState([]); // { name, ingredients: [], quantity, price }\n\n  const [errors, setErrors] = useState({}); // Para errores del formulario principal\n  const [productSelectionErrors, setProductSelectionErrors] = useState({}); // Para errores al seleccionar un producto para añadir\n\n  // NUEVOS ESTADOS PARA EL MODAL Y PAGO\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [orderTimeEstimate, setOrderTimeEstimate] = useState('');\n  const [showPaymentFields, setShowPaymentFields] = useState(false);\n  const [paymentDetails, setPaymentDetails] = useState({\n    cardNumber: '',\n    expiryDate: '',\n    cvc: ''\n  });\n  const [paymentErrors, setPaymentErrors] = useState({});\n  const [paymentCompleted, setPaymentCompleted] = useState(false);\n\n  // Obtener ingredientes disponibles para el producto seleccionado\n  const ingredientesParaProductoActual = ((_productosConfig$sele = productosConfig[selectedProduct]) === null || _productosConfig$sele === void 0 ? void 0 : _productosConfig$sele.ingredients) || [];\n  const precioProductoActual = ((_productosConfig$sele2 = productosConfig[selectedProduct]) === null || _productosConfig$sele2 === void 0 ? void 0 : _productosConfig$sele2.price) || 0;\n\n  // === 3. VALIDACIONES ===\n\n  // Validación para el formulario principal (nombre, teléfono, entrega, etc.)\n  const validateMainForm = useCallback(() => {\n    let isValid = true;\n    const newErrors = {};\n    if (!nombre.trim()) {\n      newErrors.nombre = 'El nombre es requerido.';\n      isValid = false;\n    }\n    if (!telefono.trim()) {\n      newErrors.telefono = 'El teléfono es requerido.';\n      isValid = false;\n    } else if (!/^\\d{10}$/.test(telefono.trim())) {\n      newErrors.telefono = 'El teléfono debe tener 10 dígitos.';\n      isValid = false;\n    }\n    if (metodoEntrega === 'domicilio' && !direccion.trim()) {\n      newErrors.direccion = 'La dirección es requerida para el servicio a domicilio.';\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  }, [nombre, telefono, metodoEntrega, direccion]);\n\n  // Validación para la selección de un producto antes de añadir al carrito\n  const validateProductSelection = useCallback(() => {\n    let isValid = true;\n    const newErrors = {};\n    if (!selectedProduct) {\n      newErrors.selectedProduct = 'Selecciona un producto para añadir al carrito.';\n      isValid = false;\n    }\n    if (currentProductQuantity < 1) {\n      newErrors.currentProductQuantity = 'La cantidad debe ser al menos 1.';\n      isValid = false;\n    }\n    setProductSelectionErrors(newErrors);\n    return isValid;\n  }, [selectedProduct, currentProductQuantity]);\n\n  // Validación para el formulario de pago (simulado)\n  const validatePaymentForm = useCallback(() => {\n    let isValid = true;\n    const newErrors = {};\n    if (!paymentDetails.cardNumber.trim() || !/^\\d{16}$/.test(paymentDetails.cardNumber.trim())) {\n      newErrors.cardNumber = 'Número de tarjeta inválido (16 dígitos).';\n      isValid = false;\n    }\n    if (!paymentDetails.expiryDate.trim() || !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(paymentDetails.expiryDate.trim())) {\n      newErrors.expiryDate = 'Fecha de expiración inválida (MM/AA).';\n      isValid = false;\n    }\n    if (!paymentDetails.cvc.trim() || !/^\\d{3,4}$/.test(paymentDetails.cvc.trim())) {\n      newErrors.cvc = 'CVC inválido (3 o 4 dígitos).';\n      isValid = false;\n    }\n    setPaymentErrors(newErrors);\n    return isValid;\n  }, [paymentDetails]);\n\n  // Calcula el total del carrito\n  const totalCarrito = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n\n  // Habilitar/deshabilitar el botón de \"Completar Pedido\"\n  useEffect(() => {\n    const isMainFormReady = validateMainForm(); // Ejecuta validación principal\n    const isCartReady = cartItems.length > 0; // El carrito no debe estar vacío\n\n    let isPaymentSectionReady = true;\n    if (metodoPago === 'online' && showPaymentFields) {\n      isPaymentSectionReady = paymentCompleted;\n    }\n\n    // El botón de submit se habilitará si:\n    // 1. El formulario principal es válido.\n    // 2. El carrito no está vacío.\n    // 3. Si el pago es online, este ya debe estar completado.\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      ...errors\n    })); // Asegura que los errores se muestren si algo falla\n    setIsSubmitDisabled(!(isMainFormReady && isCartReady && isPaymentSectionReady));\n  }, [nombre, telefono, metodoEntrega, direccion, cartItems, metodoPago, showPaymentFields, paymentCompleted, validateMainForm]); // Dependencias para re-evaluar\n\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\n\n  // === 4. MANEJADORES DE CAMBIO ===\n\n  const handleMainFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'nombre') setNombre(value);\n    if (name === 'telefono') setTelefono(value);\n    if (name === 'metodoEntrega') setMetodoEntrega(value);\n    if (name === 'direccion') setDireccion(value);\n\n    // Limpiar error específico al cambiar el campo\n    setErrors(prev => ({\n      ...prev,\n      [name]: ''\n    }));\n  };\n  const handleProductSelectChange = e => {\n    const {\n      value\n    } = e.target;\n    setSelectedProduct(value);\n    setSelectedIngredients([]); // Resetear ingredientes al cambiar de producto\n    setCurrentIngredienteInput('');\n    setProductSelectionErrors(prev => ({\n      ...prev,\n      selectedProduct: ''\n    }));\n  };\n  const handleQuantityChange = e => {\n    const value = parseInt(e.target.value, 10);\n    setCurrentProductQuantity(isNaN(value) ? 1 : value);\n    setProductSelectionErrors(prev => ({\n      ...prev,\n      currentProductQuantity: ''\n    }));\n  };\n  const handlePaymentDetailsChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPaymentDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    setPaymentErrors(prev => ({\n      ...prev,\n      [name]: ''\n    }));\n    setPaymentCompleted(false);\n  };\n  const handleAddIngrediente = () => {\n    const ingredienteToAdd = currentIngredienteInput.trim();\n    let ingredienteError = '';\n    if (!ingredienteToAdd) {\n      ingredienteError = 'Por favor, escribe un ingrediente para añadir.';\n    } else if (!ingredientesParaProductoActual.includes(ingredienteToAdd)) {\n      ingredienteError = `\"${ingredienteToAdd}\" no es un ingrediente válido para \"${selectedProduct}\".`;\n    } else if (selectedIngredients.includes(ingredienteToAdd)) {\n      ingredienteError = `\"${ingredienteToAdd}\" ya ha sido añadido.`;\n    }\n    if (ingredienteError) {\n      setProductSelectionErrors(prev => ({\n        ...prev,\n        currentIngredienteInput: ingredienteError\n      }));\n      return;\n    }\n    setSelectedIngredients(prev => [...prev, ingredienteToAdd]);\n    setCurrentIngredienteInput('');\n    setProductSelectionErrors(prev => ({\n      ...prev,\n      currentIngredienteInput: ''\n    }));\n  };\n  const handleRemoveIngrediente = ingredienteToRemove => {\n    setSelectedIngredients(prev => prev.filter(ing => ing !== ingredienteToRemove));\n  };\n  const isAddIngredienteDisabled = !currentIngredienteInput.trim() || !ingredientesParaProductoActual.includes(currentIngredienteInput.trim()) || selectedIngredients.includes(currentIngredienteInput.trim());\n\n  // Lógica para mostrar/ocultar campos de pago al cambiar el método de pago\n  const handleMetodoPagoChange = e => {\n    const {\n      value\n    } = e.target;\n    setMetodoPago(value);\n    if (value === 'online') {\n      setShowPaymentFields(true);\n    } else {\n      setShowPaymentFields(false);\n      setPaymentCompleted(false);\n      setPaymentDetails({\n        cardNumber: '',\n        expiryDate: '',\n        cvc: ''\n      });\n      setPaymentErrors({});\n    }\n  };\n\n  // Nueva función para \"procesar\" el pago en línea\n  const handleProcessOnlinePayment = () => {\n    const paymentIsValid = validatePaymentForm();\n    if (paymentIsValid) {\n      // Simulamos un procesamiento de pago exitoso\n      setPaymentCompleted(true);\n      alert('¡Pago en línea procesado con éxito! Ahora puedes completar tu pedido.');\n    } else {\n      alert('Por favor, corrige los datos de pago.');\n    }\n  };\n\n  // === 5. FUNCIONES DEL CARRITO ===\n\n  const handleAddToCart = () => {\n    const productSelectionIsValid = validateProductSelection();\n    if (productSelectionIsValid) {\n      const newItem = {\n        // Genera un ID único para cada item del carrito (puede ser útil para React key prop)\n        id: Date.now() + Math.random(),\n        name: selectedProduct,\n        ingredients: selectedIngredients.slice(),\n        // Clonar el array para evitar mutaciones directas\n        quantity: currentProductQuantity,\n        price: precioProductoActual // Usa el precio definido en productosConfig\n      };\n      setCartItems(prevCart => {\n        // Opcional: Si quieres agrupar productos idénticos (mismo nombre y mismos ingredientes),\n        // puedes buscar si ya existe y aumentar la cantidad.\n        // Por simplicidad, aquí cada \"añadir\" crea un nuevo item.\n        // Si quieres agrupar, descomenta la siguiente lógica:\n        /*\r\n        const existingItemIndex = prevCart.findIndex(item =>\r\n            item.name === newItem.name &&\r\n            JSON.stringify(item.ingredients.sort()) === JSON.stringify(newItem.ingredients.sort())\r\n        );\r\n          if (existingItemIndex > -1) {\r\n            const updatedCart = [...prevCart];\r\n            updatedCart[existingItemIndex].quantity += newItem.quantity;\r\n            return updatedCart;\r\n        } else {\r\n            return [...prevCart, newItem];\r\n        }\r\n        */\n        return [...prevCart, newItem]; // Añadir siempre como nuevo item por ahora\n      });\n\n      // Resetear la selección actual de producto para añadir el siguiente\n      setSelectedProduct('');\n      setSelectedIngredients([]);\n      setCurrentIngredienteInput('');\n      setCurrentProductQuantity(1);\n      setProductSelectionErrors({}); // Limpiar errores de selección de producto\n    } else {\n      alert('Por favor, selecciona un producto y cantidad válidos antes de añadir al carrito.');\n    }\n  };\n  const handleRemoveFromCart = indexToRemove => {\n    setCartItems(prevCart => prevCart.filter((_, index) => index !== indexToRemove));\n  };\n  const handleUpdateCartItemQuantity = (indexToUpdate, newQuantity) => {\n    if (newQuantity <= 0) {\n      handleRemoveFromCart(indexToUpdate);\n      return;\n    }\n    setCartItems(prevCart => {\n      const updatedCart = [...prevCart];\n      updatedCart[indexToUpdate].quantity = newQuantity;\n      return updatedCart;\n    });\n  };\n\n  // === 6. MANEJADOR FINAL DE SUBMIT ===\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validar el formulario principal (nombre, teléfono, dirección)\n    const mainFormIsValid = validateMainForm();\n\n    // Validar que el carrito no esté vacío\n    if (cartItems.length === 0) {\n      alert(\"Tu carrito está vacío. Por favor, añade al menos un producto.\");\n      return; // Detener el submit\n    }\n\n    // Si el método de pago es online y no se ha completado, no se puede enviar el pedido final\n    if (metodoPago === 'online' && !paymentCompleted) {\n      alert('Por favor, procesa tu pago en línea primero antes de completar el pedido.');\n      return; // Detener el submit\n    }\n\n    // Si el formulario principal no es válido, detener y mostrar errores\n    if (!mainFormIsValid) {\n      alert('Por favor, completa los campos de nombre, teléfono y dirección (si aplica).');\n      return;\n    }\n\n    // Si todo es válido, procesar el pedido\n    const finalOrder = {\n      cliente: {\n        nombre: nombre,\n        telefono: telefono\n      },\n      metodoEntrega: metodoEntrega,\n      direccion: metodoEntrega === 'domicilio' ? direccion : 'N/A',\n      metodoPago: metodoPago,\n      productos: cartItems,\n      // ¡Aquí se envía el carrito completo!\n      total: totalCarrito,\n      // Detalles de pago solo si es online\n      paymentDetails: metodoPago === 'online' ? paymentDetails : null\n    };\n    console.log(\"Pedido Final Enviado:\", finalOrder);\n\n    // Determina el tiempo estimado\n    let estimate = '';\n    if (metodoEntrega === 'recoger') {\n      estimate = '20 - 30 minutos';\n    } else {\n      // domicilio\n      estimate = '30 - 45 minutos';\n    }\n    setOrderTimeEstimate(estimate);\n\n    // Mostrar el modal de éxito\n    setShowSuccessModal(true);\n\n    // Resetea TODO el formulario después de un envío exitoso\n    setNombre('');\n    setTelefono('');\n    setMetodoEntrega('recoger');\n    setDireccion('');\n    setMetodoPago('fisico');\n    setCartItems([]); // Limpiar el carrito\n    setSelectedProduct('');\n    setSelectedIngredients([]);\n    setCurrentIngredienteInput('');\n    setCurrentProductQuantity(1);\n    setErrors({});\n    setProductSelectionErrors({});\n    setPaymentDetails({\n      cardNumber: '',\n      expiryDate: '',\n      cvc: ''\n    });\n    setPaymentErrors({});\n    setShowPaymentFields(false);\n    setPaymentCompleted(false);\n  };\n  const handleCloseModal = () => {\n    setShowSuccessModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seccion-realizar-pedido\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo-principal\",\n      children: \"Haz tu Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"linea-debajo-titulo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitulo-principal\",\n      children: \"Personaliza tu antojo y disfruta de los mejores snacks de Kayak Snack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"formulario-contenedor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"producto-seleccion-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A\\xF1adir Producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"selectedProduct\",\n            className: \"etiqueta-campo\",\n            children: [\"Selecciona tu antojo \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"selectedProduct\",\n            name: \"selectedProduct\",\n            value: selectedProduct,\n            onChange: handleProductSelectChange,\n            className: `input-select ${productSelectionErrors.selectedProduct ? 'input-error' : ''}`,\n            \"aria-invalid\": productSelectionErrors.selectedProduct ? \"true\" : \"false\",\n            \"aria-describedby\": \"error-selectedProduct\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Elige un producto --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this), productosDisponibles.map(producto => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: producto,\n              children: producto\n            }, producto, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 25\n          }, this), productSelectionErrors.selectedProduct && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-selectedProduct\",\n            className: \"mensaje-error\",\n            children: productSelectionErrors.selectedProduct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this), selectedProduct && ingredientesParaProductoActual.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(IngredienteInputs, {\n            label: \"A\\xF1adir ingredientes (opcional)\",\n            placeholder: \"Ingrediente a a\\xF1adir\",\n            suggestions: ingredientesParaProductoActual,\n            currentValue: currentIngredienteInput,\n            onValueChange: setCurrentIngredienteInput,\n            onAddClick: handleAddIngrediente,\n            isDisabled: isAddIngredienteDisabled,\n            errorMessage: productSelectionErrors.currentIngredienteInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 29\n          }, this), selectedIngredients.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ingredientes-agregados\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"titulo-agregados\",\n              children: \"Agregados:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"lista-agregados\",\n              children: selectedIngredients.map(ingrediente => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [ingrediente, /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleRemoveIngrediente(ingrediente),\n                  className: \"boton-eliminar-ingrediente\",\n                  title: \"Eliminar ingrediente\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 49\n                }, this)]\n              }, ingrediente, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"currentProductQuantity\",\n            className: \"etiqueta-campo\",\n            children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"currentProductQuantity\",\n            name: \"currentProductQuantity\",\n            value: currentProductQuantity,\n            onChange: handleQuantityChange,\n            className: `input-text ${productSelectionErrors.currentProductQuantity ? 'input-error' : ''}`,\n            min: \"1\",\n            \"aria-invalid\": productSelectionErrors.currentProductQuantity ? \"true\" : \"false\",\n            \"aria-describedby\": \"error-currentProductQuantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }, this), productSelectionErrors.currentProductQuantity && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-currentProductQuantity\",\n            className: \"mensaje-error\",\n            children: productSelectionErrors.currentProductQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"boton-add-to-cart\",\n          onClick: handleAddToCart,\n          children: \"A\\xF1adir al Carrito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carrito-resumen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tu Pedido Actual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items-carrito\",\n          children: cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-carrito\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 41\n              }, this), item.ingredients.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"item-ingredientes\",\n                children: [\"(\", item.ingredients.join(', '), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-cantidad-precio\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-cantidad-controles\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleUpdateCartItemQuantity(index, item.quantity - 1),\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleUpdateCartItemQuantity(index, item.quantity + 1),\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"item-precio\",\n                children: [\"$\", (item.price * item.quantity).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn-remove-item\",\n                onClick: () => handleRemoveFromCart(index),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 37\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carrito-total\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Total del Pedido: $\", totalCarrito.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"datos-cliente-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Datos de Contacto y Entrega\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nombre\",\n            className: \"etiqueta-campo\",\n            children: [\"Tu Nombre: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nombre\",\n            name: \"nombre\",\n            value: nombre,\n            onChange: handleMainFormChange,\n            className: `input-text ${errors.nombre ? 'input-error' : ''}`,\n            placeholder: \"Escribe tu nombre\",\n            \"aria-invalid\": errors.nombre ? \"true\" : \"false\",\n            \"aria-describedby\": \"error-nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this), errors.nombre && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-nombre\",\n            className: \"mensaje-error\",\n            children: errors.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"telefono\",\n            className: \"etiqueta-campo\",\n            children: [\"N\\xFAmero de Tel\\xE9fono: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"telefono\",\n            name: \"telefono\",\n            value: telefono,\n            onChange: handleMainFormChange,\n            className: `input-text ${errors.telefono ? 'input-error' : ''}`,\n            placeholder: \"Ej: 8112345678\",\n            \"aria-invalid\": errors.telefono ? \"true\" : \"false\",\n            \"aria-describedby\": \"error-telefono\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 25\n          }, this), errors.telefono && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-telefono\",\n            className: \"mensaje-error\",\n            children: errors.telefono\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"metodoEntrega\",\n            className: \"etiqueta-campo\",\n            children: [\"M\\xE9todo de entrega: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"metodoEntrega\",\n            name: \"metodoEntrega\",\n            value: metodoEntrega,\n            onChange: handleMainFormChange,\n            className: \"input-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"recoger\",\n              children: \"Recoger en local\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"domicilio\",\n              children: \"Servicio a domicilio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }, this), metodoEntrega === 'domicilio' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"direccion\",\n            className: \"etiqueta-campo\",\n            children: [\"Direcci\\xF3n de entrega: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"direccion\",\n            name: \"direccion\",\n            value: direccion,\n            onChange: handleMainFormChange,\n            className: `input-text ${errors.direccion ? 'input-error' : ''}`,\n            placeholder: \"Calle, n\\xFAmero, colonia, c\\xF3digo postal\",\n            \"aria-invalid\": errors.direccion ? \"true\" : \"false\",\n            \"aria-describedby\": \"error-direccion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 29\n          }, this), errors.direccion && /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"error-direccion\",\n            className: \"mensaje-error\",\n            children: errors.direccion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"metodoPago\",\n            className: \"etiqueta-campo\",\n            children: [\"M\\xE9todo de pago: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-asterisk\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"metodoPago\",\n            name: \"metodoPago\",\n            value: metodoPago,\n            onChange: handleMetodoPagoChange // Usar el nuevo manejador\n            ,\n            className: \"input-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"fisico\",\n              children: \"Pagar en f\\xEDsico (Contra entrega)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"online\",\n              children: \"Pagar en l\\xEDnea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 21\n        }, this), showPaymentFields && !paymentCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"campo-grupo payment-fields-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Detalles de Pago en L\\xEDnea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"campo-grupo\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardNumber\",\n              className: \"etiqueta-campo\",\n              children: \"N\\xFAmero de Tarjeta:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"cardNumber\",\n              name: \"cardNumber\",\n              value: paymentDetails.cardNumber,\n              onChange: handlePaymentDetailsChange,\n              className: `input-text ${paymentErrors.cardNumber ? 'input-error' : ''}`,\n              placeholder: \"XXXX XXXX XXXX XXXX\",\n              maxLength: \"16\",\n              \"aria-invalid\": paymentErrors.cardNumber ? \"true\" : \"false\",\n              \"aria-describedby\": \"error-cardNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 33\n            }, this), paymentErrors.cardNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"error-cardNumber\",\n              className: \"mensaje-error\",\n              children: paymentErrors.cardNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"campo-grupo campo-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"campo-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"expiryDate\",\n                className: \"etiqueta-campo\",\n                children: \"Fecha Exp. (MM/AA):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"expiryDate\",\n                name: \"expiryDate\",\n                value: paymentDetails.expiryDate,\n                onChange: handlePaymentDetailsChange,\n                className: `input-text ${paymentErrors.expiryDate ? 'input-error' : ''}`,\n                placeholder: \"MM/AA\",\n                maxLength: \"5\",\n                \"aria-invalid\": paymentErrors.expiryDate ? \"true\" : \"false\",\n                \"aria-describedby\": \"error-expiryDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 37\n              }, this), paymentErrors.expiryDate && /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"error-expiryDate\",\n                className: \"mensaje-error\",\n                children: paymentErrors.expiryDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"campo-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"cvc\",\n                className: \"etiqueta-campo\",\n                children: \"CVC:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"cvc\",\n                name: \"cvc\",\n                value: paymentDetails.cvc,\n                onChange: handlePaymentDetailsChange,\n                className: `input-text ${paymentErrors.cvc ? 'input-error' : ''}`,\n                placeholder: \"123\",\n                maxLength: \"4\",\n                \"aria-invalid\": paymentErrors.cvc ? \"true\" : \"false\",\n                \"aria-describedby\": \"error-cvc\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 37\n              }, this), paymentErrors.cvc && /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"error-cvc\",\n                className: \"mensaje-error\",\n                children: paymentErrors.cvc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleProcessOnlinePayment,\n            className: \"boton-procesar-pago\",\n            disabled: Object.keys(paymentErrors).length > 0 || !paymentDetails.cardNumber || !paymentDetails.expiryDate || !paymentDetails.cvc,\n            children: \"Procesar Pago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 25\n        }, this), paymentCompleted && metodoPago === 'online' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mensaje-pago-completado\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u2705 \\xA1Pago en l\\xEDnea: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pagado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 50\n            }, this), \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ahora puedes completar tu pedido.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"boton-completar-pedido\",\n        disabled: isSubmitDisabled,\n        children: [\"Completar Pedido (\", totalCarrito.toFixed(2), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-telefono\",\n      children: [\"Si prefieres, tambi\\xE9n puedes hacer tu pedido llamando al: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"81 1234 5678\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 75\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 13\n    }, this), showSuccessModal && /*#__PURE__*/_jsxDEV(SuccessModal, {\n      message: \"\\xA1Tu pedido ha sido enviado con \\xE9xito! Nos pondremos en contacto contigo pronto.\",\n      timeEstimate: orderTimeEstimate,\n      onClose: handleCloseModal,\n      isPaymentSuccess: metodoPago === 'online' && paymentCompleted,\n      paymentMessage: metodoPago === 'online' ? \"Pagado\" : \"Pendiente de pago físico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 9\n  }, this);\n}\n_s(RealizarPedido, \"uqw+V+RsY9xpJrdNIwOzi7fVyjI=\");\n_c = RealizarPedido;\nexport default RealizarPedido;\nvar _c;\n$RefreshReg$(_c, \"RealizarPedido\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","IngredienteInputs","SuccessModal","jsxDEV","_jsxDEV","RealizarPedido","_s","_productosConfig$sele","_productosConfig$sele2","productosConfig","ingredients","price","productosDisponibles","Object","keys","filter","key","nombre","setNombre","telefono","setTelefono","metodoEntrega","setMetodoEntrega","direccion","setDireccion","metodoPago","setMetodoPago","selectedProduct","setSelectedProduct","selectedIngredients","setSelectedIngredients","currentIngredienteInput","setCurrentIngredienteInput","currentProductQuantity","setCurrentProductQuantity","cartItems","setCartItems","errors","setErrors","productSelectionErrors","setProductSelectionErrors","showSuccessModal","setShowSuccessModal","orderTimeEstimate","setOrderTimeEstimate","showPaymentFields","setShowPaymentFields","paymentDetails","setPaymentDetails","cardNumber","expiryDate","cvc","paymentErrors","setPaymentErrors","paymentCompleted","setPaymentCompleted","ingredientesParaProductoActual","precioProductoActual","validateMainForm","isValid","newErrors","trim","test","validateProductSelection","validatePaymentForm","totalCarrito","reduce","sum","item","quantity","isMainFormReady","isCartReady","length","isPaymentSectionReady","prevErrors","setIsSubmitDisabled","isSubmitDisabled","handleMainFormChange","e","name","value","target","prev","handleProductSelectChange","handleQuantityChange","parseInt","isNaN","handlePaymentDetailsChange","handleAddIngrediente","ingredienteToAdd","ingredienteError","includes","handleRemoveIngrediente","ingredienteToRemove","ing","isAddIngredienteDisabled","handleMetodoPagoChange","handleProcessOnlinePayment","paymentIsValid","alert","handleAddToCart","productSelectionIsValid","newItem","id","Date","now","Math","random","slice","prevCart","handleRemoveFromCart","indexToRemove","_","index","handleUpdateCartItemQuantity","indexToUpdate","newQuantity","updatedCart","handleSubmit","preventDefault","mainFormIsValid","finalOrder","cliente","productos","total","console","log","estimate","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","map","producto","label","placeholder","suggestions","currentValue","onValueChange","onAddClick","isDisabled","errorMessage","ingrediente","type","onClick","title","min","join","toFixed","maxLength","disabled","message","timeEstimate","onClose","isPaymentSuccess","paymentMessage","_c","$RefreshReg$"],"sources":["C:/Users/980020889/Documents/GitHub/Front-end/kayaksnack/src/components/RealizarPedido.js"],"sourcesContent":["// src/components/RealizarPedido.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport './RealizarPedido.css';\r\nimport IngredienteInputs from './IngredienteInputs';\r\nimport SuccessModal from './SuccessModal';\r\n\r\nfunction RealizarPedido() {\r\n    // === 1. CONFIGURACIÓN DE PRODUCTOS (AHORA CON PRECIOS) ===\r\n    const productosConfig = {\r\n        '': { ingredients: [], price: 0 }, // Vacío, sin ingredientes ni precio\r\n        'Fruta Fresca': { ingredients: ['Chamoy', 'Tajín', 'Miguelito', 'Leche Condensada', 'Sal', 'Limón', 'Miel'], price: 50.00 }, // PRECIO EJEMPLO\r\n        'Elote en vaso': { ingredients: ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla', 'Limón', 'Sal'], price: 45.00 }, // PRECIO EJEMPLO\r\n        'Russa': { ingredients: [], price: 60.00 }, // PRECIO EJEMPLO\r\n        'Tosticeviche': { ingredients: ['Salsa Negra', 'Aguacate', 'Limón'], price: 75.00 }, // PRECIO EJEMPLO\r\n        'Tostielote': { ingredients: ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla'], price: 70.00 }, // PRECIO EJEMPLO\r\n        'Boyas': { ingredients: ['Chamoy', 'Tajín', 'Miguelito'], price: 30.00 }, // PRECIO EJEMPLO\r\n        'Tostada': { ingredients: ['Crema', 'Queso', 'Aguacate'], price: 55.00 }, // PRECIO EJEMPLO\r\n        'Litro Ceviche': { ingredients: ['Aguacate', 'Salsa Picante', 'Limón'], price: 120.00 }, // PRECIO EJEMPLO\r\n        'Chilidog': { ingredients: ['Chili', 'Queso', 'Jalapeños', 'Cebolla'], price: 65.00 }, // PRECIO EJEMPLO\r\n    };\r\n\r\n    const productosDisponibles = Object.keys(productosConfig).filter(key => key !== '');\r\n\r\n    // === 2. ESTADO DEL FORMULARIO (AHORA PARA UN SOLO ITEM A LA VEZ + CARRITO) ===\r\n    const [nombre, setNombre] = useState('');\r\n    const [telefono, setTelefono] = useState('');\r\n    const [metodoEntrega, setMetodoEntrega] = useState('recoger');\r\n    const [direccion, setDireccion] = useState('');\r\n    const [metodoPago, setMetodoPago] = useState('fisico');\r\n\r\n    // Estado para la SELECCIÓN ACTUAL del producto (antes de añadir al carrito)\r\n    const [selectedProduct, setSelectedProduct] = useState('');\r\n    const [selectedIngredients, setSelectedIngredients] = useState([]);\r\n    const [currentIngredienteInput, setCurrentIngredienteInput] = useState('');\r\n    const [currentProductQuantity, setCurrentProductQuantity] = useState(1); // Cantidad para el producto actual\r\n\r\n    // ESTADO DEL CARRITO: Array de objetos de productos con sus detalles\r\n    const [cartItems, setCartItems] = useState([]); // { name, ingredients: [], quantity, price }\r\n\r\n    const [errors, setErrors] = useState({}); // Para errores del formulario principal\r\n    const [productSelectionErrors, setProductSelectionErrors] = useState({}); // Para errores al seleccionar un producto para añadir\r\n\r\n    // NUEVOS ESTADOS PARA EL MODAL Y PAGO\r\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n    const [orderTimeEstimate, setOrderTimeEstimate] = useState('');\r\n    const [showPaymentFields, setShowPaymentFields] = useState(false);\r\n    const [paymentDetails, setPaymentDetails] = useState({\r\n        cardNumber: '',\r\n        expiryDate: '',\r\n        cvc: ''\r\n    });\r\n    const [paymentErrors, setPaymentErrors] = useState({});\r\n    const [paymentCompleted, setPaymentCompleted] = useState(false);\r\n\r\n    // Obtener ingredientes disponibles para el producto seleccionado\r\n    const ingredientesParaProductoActual = productosConfig[selectedProduct]?.ingredients || [];\r\n    const precioProductoActual = productosConfig[selectedProduct]?.price || 0;\r\n\r\n    // === 3. VALIDACIONES ===\r\n\r\n    // Validación para el formulario principal (nombre, teléfono, entrega, etc.)\r\n    const validateMainForm = useCallback(() => {\r\n        let isValid = true;\r\n        const newErrors = {};\r\n\r\n        if (!nombre.trim()) {\r\n            newErrors.nombre = 'El nombre es requerido.';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!telefono.trim()) {\r\n            newErrors.telefono = 'El teléfono es requerido.';\r\n            isValid = false;\r\n        } else if (!/^\\d{10}$/.test(telefono.trim())) {\r\n            newErrors.telefono = 'El teléfono debe tener 10 dígitos.';\r\n            isValid = false;\r\n        }\r\n\r\n        if (metodoEntrega === 'domicilio' && !direccion.trim()) {\r\n            newErrors.direccion = 'La dirección es requerida para el servicio a domicilio.';\r\n            isValid = false;\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return isValid;\r\n    }, [nombre, telefono, metodoEntrega, direccion]);\r\n\r\n    // Validación para la selección de un producto antes de añadir al carrito\r\n    const validateProductSelection = useCallback(() => {\r\n        let isValid = true;\r\n        const newErrors = {};\r\n\r\n        if (!selectedProduct) {\r\n            newErrors.selectedProduct = 'Selecciona un producto para añadir al carrito.';\r\n            isValid = false;\r\n        }\r\n\r\n        if (currentProductQuantity < 1) {\r\n            newErrors.currentProductQuantity = 'La cantidad debe ser al menos 1.';\r\n            isValid = false;\r\n        }\r\n\r\n        setProductSelectionErrors(newErrors);\r\n        return isValid;\r\n    }, [selectedProduct, currentProductQuantity]);\r\n\r\n\r\n    // Validación para el formulario de pago (simulado)\r\n    const validatePaymentForm = useCallback(() => {\r\n        let isValid = true;\r\n        const newErrors = {};\r\n\r\n        if (!paymentDetails.cardNumber.trim() || !/^\\d{16}$/.test(paymentDetails.cardNumber.trim())) {\r\n            newErrors.cardNumber = 'Número de tarjeta inválido (16 dígitos).';\r\n            isValid = false;\r\n        }\r\n        if (!paymentDetails.expiryDate.trim() || !/^(0[1-9]|1[0-2])\\/\\d{2}$/.test(paymentDetails.expiryDate.trim())) {\r\n            newErrors.expiryDate = 'Fecha de expiración inválida (MM/AA).';\r\n            isValid = false;\r\n        }\r\n        if (!paymentDetails.cvc.trim() || !/^\\d{3,4}$/.test(paymentDetails.cvc.trim())) {\r\n            newErrors.cvc = 'CVC inválido (3 o 4 dígitos).';\r\n            isValid = false;\r\n        }\r\n\r\n        setPaymentErrors(newErrors);\r\n        return isValid;\r\n    }, [paymentDetails]);\r\n\r\n    // Calcula el total del carrito\r\n    const totalCarrito = cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n\r\n    // Habilitar/deshabilitar el botón de \"Completar Pedido\"\r\n    useEffect(() => {\r\n        const isMainFormReady = validateMainForm(); // Ejecuta validación principal\r\n        const isCartReady = cartItems.length > 0; // El carrito no debe estar vacío\r\n\r\n        let isPaymentSectionReady = true;\r\n        if (metodoPago === 'online' && showPaymentFields) {\r\n            isPaymentSectionReady = paymentCompleted;\r\n        }\r\n\r\n        // El botón de submit se habilitará si:\r\n        // 1. El formulario principal es válido.\r\n        // 2. El carrito no está vacío.\r\n        // 3. Si el pago es online, este ya debe estar completado.\r\n        setErrors(prevErrors => ({ ...prevErrors, ...errors })); // Asegura que los errores se muestren si algo falla\r\n        setIsSubmitDisabled(!(isMainFormReady && isCartReady && isPaymentSectionReady));\r\n\r\n    }, [nombre, telefono, metodoEntrega, direccion, cartItems, metodoPago, showPaymentFields, paymentCompleted, validateMainForm]); // Dependencias para re-evaluar\r\n\r\n    const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\r\n\r\n    // === 4. MANEJADORES DE CAMBIO ===\r\n\r\n    const handleMainFormChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'nombre') setNombre(value);\r\n        if (name === 'telefono') setTelefono(value);\r\n        if (name === 'metodoEntrega') setMetodoEntrega(value);\r\n        if (name === 'direccion') setDireccion(value);\r\n\r\n        // Limpiar error específico al cambiar el campo\r\n        setErrors(prev => ({ ...prev, [name]: '' }));\r\n    };\r\n\r\n    const handleProductSelectChange = (e) => {\r\n        const { value } = e.target;\r\n        setSelectedProduct(value);\r\n        setSelectedIngredients([]); // Resetear ingredientes al cambiar de producto\r\n        setCurrentIngredienteInput('');\r\n        setProductSelectionErrors(prev => ({ ...prev, selectedProduct: '' }));\r\n    };\r\n\r\n    const handleQuantityChange = (e) => {\r\n        const value = parseInt(e.target.value, 10);\r\n        setCurrentProductQuantity(isNaN(value) ? 1 : value);\r\n        setProductSelectionErrors(prev => ({ ...prev, currentProductQuantity: '' }));\r\n    };\r\n\r\n    const handlePaymentDetailsChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPaymentDetails(prev => ({ ...prev, [name]: value }));\r\n        setPaymentErrors(prev => ({ ...prev, [name]: '' }));\r\n        setPaymentCompleted(false);\r\n    };\r\n\r\n    const handleAddIngrediente = () => {\r\n        const ingredienteToAdd = currentIngredienteInput.trim();\r\n        let ingredienteError = '';\r\n\r\n        if (!ingredienteToAdd) {\r\n            ingredienteError = 'Por favor, escribe un ingrediente para añadir.';\r\n        } else if (!ingredientesParaProductoActual.includes(ingredienteToAdd)) {\r\n            ingredienteError = `\"${ingredienteToAdd}\" no es un ingrediente válido para \"${selectedProduct}\".`;\r\n        } else if (selectedIngredients.includes(ingredienteToAdd)) {\r\n            ingredienteError = `\"${ingredienteToAdd}\" ya ha sido añadido.`;\r\n        }\r\n\r\n        if (ingredienteError) {\r\n            setProductSelectionErrors(prev => ({ ...prev, currentIngredienteInput: ingredienteError }));\r\n            return;\r\n        }\r\n\r\n        setSelectedIngredients(prev => [...prev, ingredienteToAdd]);\r\n        setCurrentIngredienteInput('');\r\n        setProductSelectionErrors(prev => ({ ...prev, currentIngredienteInput: '' }));\r\n    };\r\n\r\n    const handleRemoveIngrediente = (ingredienteToRemove) => {\r\n        setSelectedIngredients(prev => prev.filter(ing => ing !== ingredienteToRemove));\r\n    };\r\n\r\n    const isAddIngredienteDisabled = !currentIngredienteInput.trim() ||\r\n        !ingredientesParaProductoActual.includes(currentIngredienteInput.trim()) ||\r\n        selectedIngredients.includes(currentIngredienteInput.trim());\r\n\r\n    // Lógica para mostrar/ocultar campos de pago al cambiar el método de pago\r\n    const handleMetodoPagoChange = (e) => {\r\n        const { value } = e.target;\r\n        setMetodoPago(value);\r\n        if (value === 'online') {\r\n            setShowPaymentFields(true);\r\n        } else {\r\n            setShowPaymentFields(false);\r\n            setPaymentCompleted(false);\r\n            setPaymentDetails({ cardNumber: '', expiryDate: '', cvc: '' });\r\n            setPaymentErrors({});\r\n        }\r\n    };\r\n\r\n    // Nueva función para \"procesar\" el pago en línea\r\n    const handleProcessOnlinePayment = () => {\r\n        const paymentIsValid = validatePaymentForm();\r\n        if (paymentIsValid) {\r\n            // Simulamos un procesamiento de pago exitoso\r\n            setPaymentCompleted(true);\r\n            alert('¡Pago en línea procesado con éxito! Ahora puedes completar tu pedido.');\r\n        } else {\r\n            alert('Por favor, corrige los datos de pago.');\r\n        }\r\n    };\r\n\r\n    // === 5. FUNCIONES DEL CARRITO ===\r\n\r\n    const handleAddToCart = () => {\r\n        const productSelectionIsValid = validateProductSelection();\r\n\r\n        if (productSelectionIsValid) {\r\n            const newItem = {\r\n                // Genera un ID único para cada item del carrito (puede ser útil para React key prop)\r\n                id: Date.now() + Math.random(),\r\n                name: selectedProduct,\r\n                ingredients: selectedIngredients.slice(), // Clonar el array para evitar mutaciones directas\r\n                quantity: currentProductQuantity,\r\n                price: precioProductoActual, // Usa el precio definido en productosConfig\r\n            };\r\n\r\n            setCartItems(prevCart => {\r\n                // Opcional: Si quieres agrupar productos idénticos (mismo nombre y mismos ingredientes),\r\n                // puedes buscar si ya existe y aumentar la cantidad.\r\n                // Por simplicidad, aquí cada \"añadir\" crea un nuevo item.\r\n                // Si quieres agrupar, descomenta la siguiente lógica:\r\n                /*\r\n                const existingItemIndex = prevCart.findIndex(item =>\r\n                    item.name === newItem.name &&\r\n                    JSON.stringify(item.ingredients.sort()) === JSON.stringify(newItem.ingredients.sort())\r\n                );\r\n\r\n                if (existingItemIndex > -1) {\r\n                    const updatedCart = [...prevCart];\r\n                    updatedCart[existingItemIndex].quantity += newItem.quantity;\r\n                    return updatedCart;\r\n                } else {\r\n                    return [...prevCart, newItem];\r\n                }\r\n                */\r\n                return [...prevCart, newItem]; // Añadir siempre como nuevo item por ahora\r\n            });\r\n\r\n            // Resetear la selección actual de producto para añadir el siguiente\r\n            setSelectedProduct('');\r\n            setSelectedIngredients([]);\r\n            setCurrentIngredienteInput('');\r\n            setCurrentProductQuantity(1);\r\n            setProductSelectionErrors({}); // Limpiar errores de selección de producto\r\n        } else {\r\n            alert('Por favor, selecciona un producto y cantidad válidos antes de añadir al carrito.');\r\n        }\r\n    };\r\n\r\n    const handleRemoveFromCart = (indexToRemove) => {\r\n        setCartItems(prevCart => prevCart.filter((_, index) => index !== indexToRemove));\r\n    };\r\n\r\n    const handleUpdateCartItemQuantity = (indexToUpdate, newQuantity) => {\r\n        if (newQuantity <= 0) {\r\n            handleRemoveFromCart(indexToUpdate);\r\n            return;\r\n        }\r\n        setCartItems(prevCart => {\r\n            const updatedCart = [...prevCart];\r\n            updatedCart[indexToUpdate].quantity = newQuantity;\r\n            return updatedCart;\r\n        });\r\n    };\r\n\r\n    // === 6. MANEJADOR FINAL DE SUBMIT ===\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validar el formulario principal (nombre, teléfono, dirección)\r\n        const mainFormIsValid = validateMainForm();\r\n\r\n        // Validar que el carrito no esté vacío\r\n        if (cartItems.length === 0) {\r\n            alert(\"Tu carrito está vacío. Por favor, añade al menos un producto.\");\r\n            return; // Detener el submit\r\n        }\r\n\r\n        // Si el método de pago es online y no se ha completado, no se puede enviar el pedido final\r\n        if (metodoPago === 'online' && !paymentCompleted) {\r\n            alert('Por favor, procesa tu pago en línea primero antes de completar el pedido.');\r\n            return; // Detener el submit\r\n        }\r\n\r\n        // Si el formulario principal no es válido, detener y mostrar errores\r\n        if (!mainFormIsValid) {\r\n            alert('Por favor, completa los campos de nombre, teléfono y dirección (si aplica).');\r\n            return;\r\n        }\r\n\r\n        // Si todo es válido, procesar el pedido\r\n        const finalOrder = {\r\n            cliente: {\r\n                nombre: nombre,\r\n                telefono: telefono,\r\n            },\r\n            metodoEntrega: metodoEntrega,\r\n            direccion: metodoEntrega === 'domicilio' ? direccion : 'N/A',\r\n            metodoPago: metodoPago,\r\n            productos: cartItems, // ¡Aquí se envía el carrito completo!\r\n            total: totalCarrito,\r\n            // Detalles de pago solo si es online\r\n            paymentDetails: metodoPago === 'online' ? paymentDetails : null,\r\n        };\r\n\r\n        console.log(\"Pedido Final Enviado:\", finalOrder);\r\n\r\n        // Determina el tiempo estimado\r\n        let estimate = '';\r\n        if (metodoEntrega === 'recoger') {\r\n            estimate = '20 - 30 minutos';\r\n        } else { // domicilio\r\n            estimate = '30 - 45 minutos';\r\n        }\r\n        setOrderTimeEstimate(estimate);\r\n\r\n        // Mostrar el modal de éxito\r\n        setShowSuccessModal(true);\r\n\r\n        // Resetea TODO el formulario después de un envío exitoso\r\n        setNombre('');\r\n        setTelefono('');\r\n        setMetodoEntrega('recoger');\r\n        setDireccion('');\r\n        setMetodoPago('fisico');\r\n        setCartItems([]); // Limpiar el carrito\r\n        setSelectedProduct('');\r\n        setSelectedIngredients([]);\r\n        setCurrentIngredienteInput('');\r\n        setCurrentProductQuantity(1);\r\n        setErrors({});\r\n        setProductSelectionErrors({});\r\n        setPaymentDetails({ cardNumber: '', expiryDate: '', cvc: '' });\r\n        setPaymentErrors({});\r\n        setShowPaymentFields(false);\r\n        setPaymentCompleted(false);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setShowSuccessModal(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"seccion-realizar-pedido\">\r\n            <h1 className=\"titulo-principal\">Haz tu Pedido</h1>\r\n            <hr className=\"linea-debajo-titulo\" />\r\n            <p className=\"subtitulo-principal\">Personaliza tu antojo y disfruta de los mejores snacks de Kayak Snack</p>\r\n\r\n            {/* Este form ahora contendrá la selección de un item y el carrito */}\r\n            <form onSubmit={handleSubmit} className=\"formulario-contenedor\">\r\n\r\n                {/* === SECCIÓN PARA AÑADIR UN SOLO PRODUCTO AL CARRITO === */}\r\n                <div className=\"producto-seleccion-card\">\r\n                    <h2>Añadir Producto</h2>\r\n                    {/* Campo Producto */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"selectedProduct\" className=\"etiqueta-campo\">\r\n                            Selecciona tu antojo <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <select\r\n                            id=\"selectedProduct\"\r\n                            name=\"selectedProduct\"\r\n                            value={selectedProduct}\r\n                            onChange={handleProductSelectChange}\r\n                            className={`input-select ${productSelectionErrors.selectedProduct ? 'input-error' : ''}`}\r\n                            aria-invalid={productSelectionErrors.selectedProduct ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-selectedProduct\"\r\n                        >\r\n                            <option value=\"\">-- Elige un producto --</option>\r\n                            {productosDisponibles.map(producto => (\r\n                                <option key={producto} value={producto}>{producto}</option>\r\n                            ))}\r\n                        </select>\r\n                        {productSelectionErrors.selectedProduct && <p id=\"error-selectedProduct\" className=\"mensaje-error\">{productSelectionErrors.selectedProduct}</p>}\r\n                    </div>\r\n\r\n                    {/* Sección de añadir ingredientes (mostrar solo si el producto tiene ingredientes definidos) */}\r\n                    {selectedProduct && ingredientesParaProductoActual.length > 0 && (\r\n                        <div className=\"campo-grupo\">\r\n                            <IngredienteInputs\r\n                                label=\"Añadir ingredientes (opcional)\"\r\n                                placeholder=\"Ingrediente a añadir\"\r\n                                suggestions={ingredientesParaProductoActual}\r\n                                currentValue={currentIngredienteInput}\r\n                                onValueChange={setCurrentIngredienteInput}\r\n                                onAddClick={handleAddIngrediente}\r\n                                isDisabled={isAddIngredienteDisabled}\r\n                                errorMessage={productSelectionErrors.currentIngredienteInput}\r\n                            />\r\n                            {selectedIngredients.length > 0 && (\r\n                                <div className=\"ingredientes-agregados\">\r\n                                    <p className=\"titulo-agregados\">Agregados:</p>\r\n                                    <ul className=\"lista-agregados\">\r\n                                        {selectedIngredients.map(ingrediente => (\r\n                                            <li key={ingrediente}>\r\n                                                {ingrediente}\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={() => handleRemoveIngrediente(ingrediente)}\r\n                                                    className=\"boton-eliminar-ingrediente\"\r\n                                                    title=\"Eliminar ingrediente\"\r\n                                                >\r\n                                                    &times;\r\n                                                </button>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Campo Cantidad para el producto ACTUAL */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"currentProductQuantity\" className=\"etiqueta-campo\">\r\n                            Cantidad: <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            id=\"currentProductQuantity\"\r\n                            name=\"currentProductQuantity\"\r\n                            value={currentProductQuantity}\r\n                            onChange={handleQuantityChange}\r\n                            className={`input-text ${productSelectionErrors.currentProductQuantity ? 'input-error' : ''}`}\r\n                            min=\"1\"\r\n                            aria-invalid={productSelectionErrors.currentProductQuantity ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-currentProductQuantity\"\r\n                        />\r\n                        {productSelectionErrors.currentProductQuantity && <p id=\"error-currentProductQuantity\" className=\"mensaje-error\">{productSelectionErrors.currentProductQuantity}</p>}\r\n                    </div>\r\n\r\n                    {/* Botón para AÑADIR AL CARRITO */}\r\n                    <button type=\"button\" className=\"boton-add-to-cart\" onClick={handleAddToCart}>\r\n                        Añadir al Carrito\r\n                    </button>\r\n                </div>\r\n\r\n                {/* === SECCIÓN DEL CARRITO (RESUMEN DEL PEDIDO) === */}\r\n                {cartItems.length > 0 && (\r\n                    <div className=\"carrito-resumen\">\r\n                        <h2>Tu Pedido Actual</h2>\r\n                        <div className=\"items-carrito\">\r\n                            {cartItems.map((item, index) => (\r\n                                <div key={item.id} className=\"item-carrito\"> {/* Usar item.id para la key */}\r\n                                    <div className=\"item-info\">\r\n                                        <span>{item.name}</span>\r\n                                        {item.ingredients.length > 0 && (\r\n                                            <span className=\"item-ingredientes\">({item.ingredients.join(', ')})</span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"item-cantidad-precio\">\r\n                                        <div className=\"item-cantidad-controles\">\r\n                                            <button type=\"button\" onClick={() => handleUpdateCartItemQuantity(index, item.quantity - 1)}>-</button>\r\n                                            <span>{item.quantity}</span>\r\n                                            <button type=\"button\" onClick={() => handleUpdateCartItemQuantity(index, item.quantity + 1)}>+</button>\r\n                                        </div>\r\n                                        <span className=\"item-precio\">${(item.price * item.quantity).toFixed(2)}</span>\r\n                                        <button type=\"button\" className=\"btn-remove-item\" onClick={() => handleRemoveFromCart(index)}>X</button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"carrito-total\">\r\n                            <strong>Total del Pedido: ${totalCarrito.toFixed(2)}</strong>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* === DATOS DEL CLIENTE Y MÉTODO DE ENTREGA/PAGO === */}\r\n                <div className=\"datos-cliente-card\">\r\n                    <h2>Datos de Contacto y Entrega</h2>\r\n                    {/* Campo Nombre */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"nombre\" className=\"etiqueta-campo\">\r\n                            Tu Nombre: <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            value={nombre}\r\n                            onChange={handleMainFormChange}\r\n                            className={`input-text ${errors.nombre ? 'input-error' : ''}`}\r\n                            placeholder=\"Escribe tu nombre\"\r\n                            aria-invalid={errors.nombre ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-nombre\"\r\n                        />\r\n                        {errors.nombre && <p id=\"error-nombre\" className=\"mensaje-error\">{errors.nombre}</p>}\r\n                    </div>\r\n\r\n                    {/* Campo Teléfono */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"telefono\" className=\"etiqueta-campo\">\r\n                            Número de Teléfono: <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"tel\"\r\n                            id=\"telefono\"\r\n                            name=\"telefono\"\r\n                            value={telefono}\r\n                            onChange={handleMainFormChange}\r\n                            className={`input-text ${errors.telefono ? 'input-error' : ''}`}\r\n                            placeholder=\"Ej: 8112345678\"\r\n                            aria-invalid={errors.telefono ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-telefono\"\r\n                        />\r\n                        {errors.telefono && <p id=\"error-telefono\" className=\"mensaje-error\">{errors.telefono}</p>}\r\n                    </div>\r\n\r\n                    {/* Campo Método de Entrega */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"metodoEntrega\" className=\"etiqueta-campo\">\r\n                            Método de entrega: <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <select\r\n                            id=\"metodoEntrega\"\r\n                            name=\"metodoEntrega\"\r\n                            value={metodoEntrega}\r\n                            onChange={handleMainFormChange}\r\n                            className=\"input-select\"\r\n                        >\r\n                            <option value=\"recoger\">Recoger en local</option>\r\n                            <option value=\"domicilio\">Servicio a domicilio</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* Campo Dirección (solo si el método de entrega es \"domicilio\") */}\r\n                    {metodoEntrega === 'domicilio' && (\r\n                        <div className=\"campo-grupo\">\r\n                            <label htmlFor=\"direccion\" className=\"etiqueta-campo\">\r\n                                Dirección de entrega: <span className=\"required-asterisk\">*</span>\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"direccion\"\r\n                                name=\"direccion\"\r\n                                value={direccion}\r\n                                onChange={handleMainFormChange}\r\n                                className={`input-text ${errors.direccion ? 'input-error' : ''}`}\r\n                                placeholder=\"Calle, número, colonia, código postal\"\r\n                                aria-invalid={errors.direccion ? \"true\" : \"false\"}\r\n                                aria-describedby=\"error-direccion\"\r\n                            />\r\n                            {errors.direccion && <p id=\"error-direccion\" className=\"mensaje-error\">{errors.direccion}</p>}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Campo Método de Pago */}\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"metodoPago\" className=\"etiqueta-campo\">\r\n                            Método de pago: <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <select\r\n                            id=\"metodoPago\"\r\n                            name=\"metodoPago\"\r\n                            value={metodoPago}\r\n                            onChange={handleMetodoPagoChange} // Usar el nuevo manejador\r\n                            className=\"input-select\"\r\n                        >\r\n                            <option value=\"fisico\">Pagar en físico (Contra entrega)</option>\r\n                            <option value=\"online\">Pagar en línea</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* Campos de pago en línea (aparecen si metodoPago es 'online' y aún no se ha completado el pago) */}\r\n                    {showPaymentFields && !paymentCompleted && (\r\n                        <div className=\"campo-grupo payment-fields-container\">\r\n                            <h3>Detalles de Pago en Línea</h3>\r\n                            <div className=\"campo-grupo\">\r\n                                <label htmlFor=\"cardNumber\" className=\"etiqueta-campo\">Número de Tarjeta:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"cardNumber\"\r\n                                    name=\"cardNumber\"\r\n                                    value={paymentDetails.cardNumber}\r\n                                    onChange={handlePaymentDetailsChange}\r\n                                    className={`input-text ${paymentErrors.cardNumber ? 'input-error' : ''}`}\r\n                                    placeholder=\"XXXX XXXX XXXX XXXX\"\r\n                                    maxLength=\"16\"\r\n                                    aria-invalid={paymentErrors.cardNumber ? \"true\" : \"false\"}\r\n                                    aria-describedby=\"error-cardNumber\"\r\n                                />\r\n                                {paymentErrors.cardNumber && <p id=\"error-cardNumber\" className=\"mensaje-error\">{paymentErrors.cardNumber}</p>}\r\n                            </div>\r\n                            <div className=\"campo-grupo campo-row\">\r\n                                <div className=\"campo-col\">\r\n                                    <label htmlFor=\"expiryDate\" className=\"etiqueta-campo\">Fecha Exp. (MM/AA):</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"expiryDate\"\r\n                                        name=\"expiryDate\"\r\n                                        value={paymentDetails.expiryDate}\r\n                                        onChange={handlePaymentDetailsChange}\r\n                                        className={`input-text ${paymentErrors.expiryDate ? 'input-error' : ''}`}\r\n                                        placeholder=\"MM/AA\"\r\n                                        maxLength=\"5\"\r\n                                        aria-invalid={paymentErrors.expiryDate ? \"true\" : \"false\"}\r\n                                        aria-describedby=\"error-expiryDate\"\r\n                                    />\r\n                                    {paymentErrors.expiryDate && <p id=\"error-expiryDate\" className=\"mensaje-error\">{paymentErrors.expiryDate}</p>}\r\n                                </div>\r\n                                <div className=\"campo-col\">\r\n                                    <label htmlFor=\"cvc\" className=\"etiqueta-campo\">CVC:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"cvc\"\r\n                                        name=\"cvc\"\r\n                                        value={paymentDetails.cvc}\r\n                                        onChange={handlePaymentDetailsChange}\r\n                                        className={`input-text ${paymentErrors.cvc ? 'input-error' : ''}`}\r\n                                        placeholder=\"123\"\r\n                                        maxLength=\"4\"\r\n                                        aria-invalid={paymentErrors.cvc ? \"true\" : \"false\"}\r\n                                        aria-describedby=\"error-cvc\"\r\n                                    />\r\n                                    {paymentErrors.cvc && <p id=\"error-cvc\" className=\"mensaje-error\">{paymentErrors.cvc}</p>}\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleProcessOnlinePayment}\r\n                                className=\"boton-procesar-pago\"\r\n                                disabled={Object.keys(paymentErrors).length > 0 || !paymentDetails.cardNumber || !paymentDetails.expiryDate || !paymentDetails.cvc}\r\n                            >\r\n                                Procesar Pago\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Mensaje de pago completado */}\r\n                    {paymentCompleted && metodoPago === 'online' && (\r\n                        <div className=\"mensaje-pago-completado\">\r\n                            <p>✅ ¡Pago en línea: <strong>Pagado</strong>!</p>\r\n                            <p>Ahora puedes completar tu pedido.</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Botón para completar el pedido (FINAL) */}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"boton-completar-pedido\"\r\n                    disabled={isSubmitDisabled}\r\n                >\r\n                    Completar Pedido ({totalCarrito.toFixed(2)})\r\n                </button>\r\n            </form>\r\n\r\n            <p className=\"info-telefono\">\r\n                Si prefieres, también puedes hacer tu pedido llamando al: <strong>81 1234 5678</strong>\r\n            </p>\r\n\r\n            {/* Renderiza el modal de éxito si showSuccessModal es true */}\r\n            {showSuccessModal && (\r\n                <SuccessModal\r\n                    message=\"¡Tu pedido ha sido enviado con éxito! Nos pondremos en contacto contigo pronto.\"\r\n                    timeEstimate={orderTimeEstimate}\r\n                    onClose={handleCloseModal}\r\n                    isPaymentSuccess={metodoPago === 'online' && paymentCompleted}\r\n                    paymentMessage={metodoPago === 'online' ? \"Pagado\" : \"Pendiente de pago físico\"}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RealizarPedido;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}