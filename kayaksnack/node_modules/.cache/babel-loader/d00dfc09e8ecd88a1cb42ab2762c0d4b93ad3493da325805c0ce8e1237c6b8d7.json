{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\980020889\\\\Documents\\\\GitHub\\\\Front-end\\\\kayaksnack\\\\src\\\\components\\\\RealizarPedido.js\",\n  _s = $RefreshSig$();\n// src/components/RealizarPedido.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './RealizarPedido.css'; // Asegúrate de que este CSS existe y tiene los estilos necesarios\nimport IngredienteInputs from './IngredienteInputs'; // Asegúrate de que este componente existe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealizarPedido() {\n  _s();\n  // Definición de productos y sus ingredientes específicos\n  const productosConfig = {\n    '': [],\n    // Opción por defecto para \"Elige un producto\"\n    'Fruta Fresca': ['Chamoy', 'Tajín', 'Miguelito', 'Leche Condensada', 'Sal', 'Limón', 'Miel'],\n    'Elote en vaso': ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla', 'Limón', 'Sal'],\n    'Russa': [],\n    // La Russa no tiene ingredientes extra seleccionables\n    'Tosticeviche': ['Salsa Negra', 'Aguacate', 'Limón'],\n    'Tostielote': ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla'],\n    'Boyas': ['Chamoy', 'Tajín', 'Miguelito'],\n    'Tostada': ['Crema', 'Queso', 'Aguacate'],\n    'Litro Ceviche': ['Aguacate', 'Salsa Picante', 'Limón'],\n    'Chilidog': ['Chili', 'Queso', 'Jalapeños', 'Cebolla']\n    // Puedes agregar más productos aquí si lo deseas\n  };\n\n  // Lista de todos los productos disponibles para el dropdown principal\n  // Añadimos un string vacío al principio para la opción \"Elige un producto\"\n  const productosDisponibles = ['', ...Object.keys(productosConfig).filter(key => key !== '')];\n\n  // Estado para los datos del formulario\n  const [formData, setFormData] = useState({\n    nombre: '',\n    telefono: '',\n    producto: '',\n    // Inicializado a vacío para la opción de selección\n    ingredientes: [],\n    // Guarda los ingredientes seleccionados para el producto actual\n    cantidad: 1,\n    notas: '',\n    metodoEntrega: 'recoger',\n    // 'recoger' o 'domicilio'\n    direccion: '' // Solo relevante si es a domicilio\n  });\n\n  // Estado para controlar errores de validación\n  const [errors, setErrors] = useState({});\n\n  // Estado para el ingrediente actualmente seleccionado en el input de añadir (para el componente IngredienteInputs)\n  const [currentIngredienteInput, setCurrentIngredienteInput] = useState('');\n\n  // Estado para deshabilitar el botón de enviar pedido\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\n\n  // Obtener los ingredientes disponibles para el producto seleccionado\n  const ingredientesParaProductoActual = productosConfig[formData.producto] || [];\n\n  // Función de validación del formulario memoizada con useCallback\n  // Esto es importante para el useEffect que depende de ella.\n  const validateForm = useCallback(() => {\n    let isValid = true;\n    if (!formData.nombre.trim()) {\n      isValid = false;\n    }\n    if (!formData.telefono.trim() || !/^\\d{10}$/.test(formData.telefono.trim())) {\n      isValid = false;\n    }\n    if (!formData.producto) {\n      isValid = false;\n    }\n    if (formData.cantidad < 1) {\n      isValid = false;\n    }\n    if (formData.metodoEntrega === 'domicilio' && !formData.direccion.trim()) {\n      isValid = false;\n    }\n    return isValid;\n  }, [formData]);\n\n  // useEffect para controlar el estado de habilitación/deshabilitación del botón de submit\n  // Se re-ejecuta cada vez que formData o validateForm cambian.\n  useEffect(() => {\n    setIsSubmitDisabled(!validateForm());\n  }, [formData, validateForm]);\n\n  // Manejador genérico para cambios en los inputs del formulario\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Limpia errores relacionados con el campo que se está modificando\n    setErrors(prev => ({\n      ...prev,\n      [name]: ''\n    }));\n\n    // Lógica específica cuando el producto cambia:\n    if (name === 'producto') {\n      setFormData(prev => ({\n        ...prev,\n        ingredientes: [] // Limpiar ingredientes si el producto cambia\n      }));\n      setCurrentIngredienteInput(''); // Limpiar el input de ingredientes al cambiar de producto\n    }\n  };\n\n  // Manejador para añadir un ingrediente a la lista\n  const handleAddIngrediente = () => {\n    const ingredienteToAdd = currentIngredienteInput.trim();\n    if (!ingredienteToAdd) {\n      alert('Por favor, escribe un ingrediente para añadir.');\n      return;\n    }\n\n    // Validar que el ingrediente es válido para el producto seleccionado\n    if (!ingredientesParaProductoActual.includes(ingredienteToAdd)) {\n      alert(`\"<span class=\"math-inline\">\\{ingredienteToAdd\\}\" no es un ingrediente válido para \"</span>{formData.producto}\". Por favor, elige uno de la lista o verifica la escritura.`);\n      return;\n    }\n\n    // Validar que el ingrediente no esté ya añadido\n    if (formData.ingredientes.includes(ingredienteToAdd)) {\n      alert(`\"${ingredienteToAdd}\" ya ha sido añadido.`);\n      return;\n    }\n    setFormData(prev => ({\n      ...prev,\n      ingredientes: [...prev.ingredientes, ingredienteToAdd]\n    }));\n    setCurrentIngredienteInput(''); // Limpia el input después de añadir\n    setErrors(prev => ({\n      ...prev,\n      ingredientes: ''\n    })); // Limpia error si existía\n  };\n\n  // Manejador para eliminar un ingrediente\n  const handleRemoveIngrediente = ingredienteToRemove => {\n    setFormData(prev => ({\n      ...prev,\n      ingredientes: prev.ingredientes.filter(ing => ing !== ingredienteToRemove)\n    }));\n  };\n\n  // Lógica para deshabilitar el botón de añadir ingrediente\n  const isAddIngredienteDisabled = !currentIngredienteInput.trim() || !ingredientesParaProductoActual.includes(currentIngredienteInput.trim()) || formData.ingredientes.includes(currentIngredienteInput.trim());\n\n  // Manejador para enviar el formulario\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Realiza la validación completa aquí para mostrar los mensajes de error al usuario\n    let newErrors = {};\n    let formIsValid = true;\n    if (!formData.nombre.trim()) {\n      newErrors.nombre = 'El nombre es requerido.';\n      formIsValid = false;\n    }\n    if (!formData.telefono.trim()) {\n      newErrors.telefono = 'El teléfono es requerido.';\n      formIsValid = false;\n    } else if (!/^\\d{10}$/.test(formData.telefono.trim())) {\n      newErrors.telefono = 'El teléfono debe tener 10 dígitos.';\n      formIsValid = false;\n    }\n    if (!formData.producto) {\n      newErrors.producto = 'Selecciona un producto.';\n      formIsValid = false;\n    }\n    if (formData.cantidad < 1) {\n      newErrors.cantidad = 'La cantidad debe ser al menos 1.';\n      formIsValid = false;\n    }\n    if (formData.metodoEntrega === 'domicilio' && !formData.direccion.trim()) {\n      newErrors.direccion = 'La dirección es requerida para el servicio a domicilio.';\n      formIsValid = false;\n    }\n    setErrors(newErrors); // Actualiza el estado de errores para mostrarlos en la UI\n\n    if (formIsValid) {\n      console.log(\"Pedido Enviado:\", formData);\n      alert('¡Tu pedido ha sido enviado con éxito! Nos pondremos en contacto contigo pronto.');\n      setFormData({\n        nombre: '',\n        telefono: '',\n        producto: '',\n        ingredientes: [],\n        cantidad: 1,\n        notas: '',\n        metodoEntrega: 'recoger',\n        direccion: ''\n      });\n      setErrors({});\n      setCurrentIngredienteInput('');\n    } else {\n      alert('Por favor, completa todos los campos requeridos y corrige los errores.');\n      const firstErrorField = Object.keys(newErrors)[0];\n      if (firstErrorField) {\n        var _document$getElementB;\n        (_document$getElementB = document.getElementById(firstErrorField)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seccion-realizar-pedido\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo-principal\",\n      children: \"Haz tu Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"linea-debajo-titulo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitulo-principal\",\n      children: \"Personaliza tu antojo y disfruta de los mejores snacks de Kayak Snack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"formulario-contenedor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"producto\",\n          className: \"etiqueta-campo\",\n          children: [\"Selecciona tu antojo \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"producto\",\n          name: \"producto\",\n          value: formData.producto,\n          onChange: handleChange,\n          className: `input-select ${errors.producto ? 'input-error' : ''}`,\n          \"aria-invalid\": errors.producto ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-producto\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Elige un producto --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), productosDisponibles.filter(p => p !== '').map(producto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: producto,\n            children: producto\n          }, producto, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), errors.producto && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-producto\",\n          className: \"mensaje-error\",\n          children: errors.producto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), formData.producto && ingredientesParaProductoActual.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(IngredienteInputs, {\n          label: \"A\\xF1adir ingredientes (opcional)\",\n          placeholder: \"Ingrediente a a\\xF1adir\",\n          suggestions: ingredientesParaProductoActual // Le pasamos la lista de sugerencias para el producto actual\n          ,\n          currentValue: currentIngredienteInput,\n          onValueChange: setCurrentIngredienteInput // Función para actualizar el valor del input\n          ,\n          onAddClick: handleAddIngrediente // Función para añadir el ingrediente\n          ,\n          isDisabled: isAddIngredienteDisabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), formData.ingredientes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredientes-agregados\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"titulo-agregados\",\n            children: \"Agregados:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"lista-agregados\",\n            children: formData.ingredientes.map(ingrediente => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [ingrediente, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleRemoveIngrediente(ingrediente),\n                className: \"boton-eliminar-ingrediente\",\n                title: \"Eliminar ingrediente\",\n                children: \"\\xD7 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 45\n              }, this)]\n            }, ingrediente, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          className: \"etiqueta-campo\",\n          children: [\"Tu Nombre: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          name: \"nombre\",\n          value: formData.nombre,\n          onChange: handleChange,\n          className: `input-text ${errors.nombre ? 'input-error' : ''}`,\n          placeholder: \"Escribe tu nombre\",\n          \"aria-invalid\": errors.nombre ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), errors.nombre && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-nombre\",\n          className: \"mensaje-error\",\n          children: errors.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"telefono\",\n          className: \"etiqueta-campo\",\n          children: [\"N\\xFAmero de Tel\\xE9fono: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\" // 'tel' para números de teléfono\n          ,\n          id: \"telefono\",\n          name: \"telefono\",\n          value: formData.telefono,\n          onChange: handleChange,\n          className: `input-text ${errors.telefono ? 'input-error' : ''}`,\n          placeholder: \"Ej: 8112345678\",\n          \"aria-invalid\": errors.telefono ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-telefono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), errors.telefono && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-telefono\",\n          className: \"mensaje-error\",\n          children: errors.telefono\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cantidad\",\n          className: \"etiqueta-campo\",\n          children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"cantidad\",\n          name: \"cantidad\",\n          value: formData.cantidad,\n          onChange: handleChange,\n          className: `input-text ${errors.cantidad ? 'input-error' : ''}`,\n          min: \"1\",\n          \"aria-invalid\": errors.cantidad ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-cantidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), errors.cantidad && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-cantidad\",\n          className: \"mensaje-error\",\n          children: errors.cantidad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notas\",\n          className: \"etiqueta-campo\",\n          children: \"Notas adicionales (opcional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"notas\",\n          name: \"notas\",\n          value: formData.notas,\n          onChange: handleChange,\n          className: \"input-text\",\n          rows: \"4\",\n          placeholder: \"Ej: sin picante, con mucha crema, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"metodoEntrega\",\n          className: \"etiqueta-campo\",\n          children: [\"M\\xE9todo de entrega: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"metodoEntrega\",\n          name: \"metodoEntrega\",\n          value: formData.metodoEntrega,\n          onChange: handleChange,\n          className: \"input-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"recoger\",\n            children: \"Recoger en local\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"domicilio\",\n            children: \"Servicio a domicilio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), formData.metodoEntrega === 'domicilio' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"direccion\",\n          className: \"etiqueta-campo\",\n          children: [\"Direcci\\xF3n de entrega: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"direccion\",\n          name: \"direccion\",\n          value: formData.direccion,\n          onChange: handleChange,\n          className: `input-text ${errors.direccion ? 'input-error' : ''}`,\n          placeholder: \"Calle, n\\xFAmero, colonia, c\\xF3digo postal\",\n          \"aria-invalid\": errors.direccion ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-direccion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }, this), errors.direccion && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-direccion\",\n          className: \"mensaje-error\",\n          children: errors.direccion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"boton-completar-pedido\",\n        disabled: isSubmitDisabled,\n        children: \"Completar Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-telefono\",\n      children: [\"Si prefieres, tambi\\xE9n puedes hacer tu pedido llamando al: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"81 1234 5678\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 75\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n}\n_s(RealizarPedido, \"yk+XzqZmZ3lyzoeaTFpsHyBuXDE=\");\n_c = RealizarPedido;\nexport default RealizarPedido;\nvar _c;\n$RefreshReg$(_c, \"RealizarPedido\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","IngredienteInputs","jsxDEV","_jsxDEV","RealizarPedido","_s","productosConfig","productosDisponibles","Object","keys","filter","key","formData","setFormData","nombre","telefono","producto","ingredientes","cantidad","notas","metodoEntrega","direccion","errors","setErrors","currentIngredienteInput","setCurrentIngredienteInput","isSubmitDisabled","setIsSubmitDisabled","ingredientesParaProductoActual","validateForm","isValid","trim","test","handleChange","e","name","value","target","prev","handleAddIngrediente","ingredienteToAdd","alert","includes","handleRemoveIngrediente","ingredienteToRemove","ing","isAddIngredienteDisabled","handleSubmit","preventDefault","newErrors","formIsValid","console","log","firstErrorField","_document$getElementB","document","getElementById","focus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","p","map","length","label","placeholder","suggestions","currentValue","onValueChange","onAddClick","isDisabled","ingrediente","type","onClick","title","min","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/980020889/Documents/GitHub/Front-end/kayaksnack/src/components/RealizarPedido.js"],"sourcesContent":["// src/components/RealizarPedido.js\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport './RealizarPedido.css'; // Asegúrate de que este CSS existe y tiene los estilos necesarios\r\nimport IngredienteInputs from './IngredienteInputs'; // Asegúrate de que este componente existe\r\n\r\nfunction RealizarPedido() {\r\n    // Definición de productos y sus ingredientes específicos\r\n    const productosConfig = {\r\n        '': [], // Opción por defecto para \"Elige un producto\"\r\n        'Fruta Fresca': ['Chamoy', 'Tajín', 'Miguelito', 'Leche Condensada', 'Sal', 'Limón', 'Miel'],\r\n        'Elote en vaso': ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla', 'Limón', 'Sal'],\r\n        'Russa': [], // La Russa no tiene ingredientes extra seleccionables\r\n        'Tosticeviche': ['Salsa Negra', 'Aguacate', 'Limón'],\r\n        'Tostielote': ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla'],\r\n        'Boyas': ['Chamoy', 'Tajín', 'Miguelito'],\r\n        'Tostada': ['Crema', 'Queso', 'Aguacate'],\r\n        'Litro Ceviche': ['Aguacate', 'Salsa Picante', 'Limón'],\r\n        'Chilidog': ['Chili', 'Queso', 'Jalapeños', 'Cebolla'],\r\n        // Puedes agregar más productos aquí si lo deseas\r\n    };\r\n\r\n    // Lista de todos los productos disponibles para el dropdown principal\r\n    // Añadimos un string vacío al principio para la opción \"Elige un producto\"\r\n    const productosDisponibles = ['', ...Object.keys(productosConfig).filter(key => key !== '')];\r\n\r\n    // Estado para los datos del formulario\r\n    const [formData, setFormData] = useState({\r\n        nombre: '',\r\n        telefono: '',\r\n        producto: '', // Inicializado a vacío para la opción de selección\r\n        ingredientes: [], // Guarda los ingredientes seleccionados para el producto actual\r\n        cantidad: 1,\r\n        notas: '',\r\n        metodoEntrega: 'recoger', // 'recoger' o 'domicilio'\r\n        direccion: '', // Solo relevante si es a domicilio\r\n    });\r\n\r\n    // Estado para controlar errores de validación\r\n    const [errors, setErrors] = useState({});\r\n\r\n    // Estado para el ingrediente actualmente seleccionado en el input de añadir (para el componente IngredienteInputs)\r\n    const [currentIngredienteInput, setCurrentIngredienteInput] = useState('');\r\n\r\n    // Estado para deshabilitar el botón de enviar pedido\r\n    const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\r\n\r\n    // Obtener los ingredientes disponibles para el producto seleccionado\r\n    const ingredientesParaProductoActual = productosConfig[formData.producto] || [];\r\n\r\n    // Función de validación del formulario memoizada con useCallback\r\n    // Esto es importante para el useEffect que depende de ella.\r\n    const validateForm = useCallback(() => {\r\n        let isValid = true;\r\n\r\n        if (!formData.nombre.trim()) {\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.telefono.trim() || !/^\\d{10}$/.test(formData.telefono.trim())) {\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.producto) {\r\n            isValid = false;\r\n        }\r\n\r\n        if (formData.cantidad < 1) {\r\n            isValid = false;\r\n        }\r\n\r\n        if (formData.metodoEntrega === 'domicilio' && !formData.direccion.trim()) {\r\n            isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }, [formData]);\r\n\r\n    // useEffect para controlar el estado de habilitación/deshabilitación del botón de submit\r\n    // Se re-ejecuta cada vez que formData o validateForm cambian.\r\n    useEffect(() => {\r\n        setIsSubmitDisabled(!validateForm());\r\n    }, [formData, validateForm]);\r\n\r\n    // Manejador genérico para cambios en los inputs del formulario\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n\r\n        // Limpia errores relacionados con el campo que se está modificando\r\n        setErrors(prev => ({ ...prev, [name]: '' }));\r\n\r\n        // Lógica específica cuando el producto cambia:\r\n        if (name === 'producto') {\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                ingredientes: [] // Limpiar ingredientes si el producto cambia\r\n            }));\r\n            setCurrentIngredienteInput(''); // Limpiar el input de ingredientes al cambiar de producto\r\n        }\r\n    };\r\n\r\n    // Manejador para añadir un ingrediente a la lista\r\n    const handleAddIngrediente = () => {\r\n        const ingredienteToAdd = currentIngredienteInput.trim();\r\n\r\n        if (!ingredienteToAdd) {\r\n            alert('Por favor, escribe un ingrediente para añadir.');\r\n            return;\r\n        }\r\n\r\n        // Validar que el ingrediente es válido para el producto seleccionado\r\n        if (!ingredientesParaProductoActual.includes(ingredienteToAdd)) {\r\n            alert(`\"<span class=\"math-inline\">\\{ingredienteToAdd\\}\" no es un ingrediente válido para \"</span>{formData.producto}\". Por favor, elige uno de la lista o verifica la escritura.`);\r\n            return;\r\n        }\r\n\r\n        // Validar que el ingrediente no esté ya añadido\r\n        if (formData.ingredientes.includes(ingredienteToAdd)) {\r\n            alert(`\"${ingredienteToAdd}\" ya ha sido añadido.`);\r\n            return;\r\n        }\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            ingredientes: [...prev.ingredientes, ingredienteToAdd]\r\n        }));\r\n        setCurrentIngredienteInput(''); // Limpia el input después de añadir\r\n        setErrors(prev => ({ ...prev, ingredientes: '' })); // Limpia error si existía\r\n    };\r\n\r\n    // Manejador para eliminar un ingrediente\r\n    const handleRemoveIngrediente = (ingredienteToRemove) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            ingredientes: prev.ingredientes.filter(ing => ing !== ingredienteToRemove)\r\n        }));\r\n    };\r\n\r\n    // Lógica para deshabilitar el botón de añadir ingrediente\r\n    const isAddIngredienteDisabled = !currentIngredienteInput.trim() ||\r\n                                     !ingredientesParaProductoActual.includes(currentIngredienteInput.trim()) ||\r\n                                     formData.ingredientes.includes(currentIngredienteInput.trim());\r\n\r\n\r\n    // Manejador para enviar el formulario\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Realiza la validación completa aquí para mostrar los mensajes de error al usuario\r\n        let newErrors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!formData.nombre.trim()) {\r\n            newErrors.nombre = 'El nombre es requerido.';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (!formData.telefono.trim()) {\r\n            newErrors.telefono = 'El teléfono es requerido.';\r\n            formIsValid = false;\r\n        } else if (!/^\\d{10}$/.test(formData.telefono.trim())) {\r\n            newErrors.telefono = 'El teléfono debe tener 10 dígitos.';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (!formData.producto) {\r\n            newErrors.producto = 'Selecciona un producto.';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (formData.cantidad < 1) {\r\n            newErrors.cantidad = 'La cantidad debe ser al menos 1.';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (formData.metodoEntrega === 'domicilio' && !formData.direccion.trim()) {\r\n            newErrors.direccion = 'La dirección es requerida para el servicio a domicilio.';\r\n            formIsValid = false;\r\n        }\r\n\r\n        setErrors(newErrors); // Actualiza el estado de errores para mostrarlos en la UI\r\n\r\n        if (formIsValid) {\r\n            console.log(\"Pedido Enviado:\", formData);\r\n            alert('¡Tu pedido ha sido enviado con éxito! Nos pondremos en contacto contigo pronto.');\r\n\r\n            setFormData({\r\n                nombre: '',\r\n                telefono: '',\r\n                producto: '',\r\n                ingredientes: [],\r\n                cantidad: 1,\r\n                notas: '',\r\n                metodoEntrega: 'recoger',\r\n                direccion: '',\r\n            });\r\n            setErrors({});\r\n            setCurrentIngredienteInput('');\r\n        } else {\r\n            alert('Por favor, completa todos los campos requeridos y corrige los errores.');\r\n            const firstErrorField = Object.keys(newErrors)[0];\r\n            if (firstErrorField) {\r\n                document.getElementById(firstErrorField)?.focus();\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"seccion-realizar-pedido\">\r\n            <h1 className=\"titulo-principal\">Haz tu Pedido</h1>\r\n            <hr className=\"linea-debajo-titulo\" />\r\n            <p className=\"subtitulo-principal\">Personaliza tu antojo y disfruta de los mejores snacks de Kayak Snack</p>\r\n\r\n            <form onSubmit={handleSubmit} className=\"formulario-contenedor\">\r\n                {/* Campo Producto */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"producto\" className=\"etiqueta-campo\">\r\n                        Selecciona tu antojo <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <select\r\n                        id=\"producto\"\r\n                        name=\"producto\"\r\n                        value={formData.producto}\r\n                        onChange={handleChange}\r\n                        className={`input-select ${errors.producto ? 'input-error' : ''}`}\r\n                        aria-invalid={errors.producto ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-producto\"\r\n                    >\r\n                        <option value=\"\">-- Elige un producto --</option>\r\n                        {productosDisponibles.filter(p => p !== '').map(producto => (\r\n                            <option key={producto} value={producto}>{producto}</option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.producto && <p id=\"error-producto\" className=\"mensaje-error\">{errors.producto}</p>}\r\n                </div>\r\n\r\n                {/* Sección de añadir ingredientes (mostrar solo si el producto tiene ingredientes definidos) */}\r\n                {/* Se muestra solo si un producto está seleccionado Y ese producto tiene ingredientes en productosConfig */}\r\n                {formData.producto && ingredientesParaProductoActual.length > 0 && (\r\n                    <div className=\"campo-grupo\">\r\n                        <IngredienteInputs\r\n                            label=\"Añadir ingredientes (opcional)\"\r\n                            placeholder=\"Ingrediente a añadir\"\r\n                            suggestions={ingredientesParaProductoActual} // Le pasamos la lista de sugerencias para el producto actual\r\n                            currentValue={currentIngredienteInput}\r\n                            onValueChange={setCurrentIngredienteInput} // Función para actualizar el valor del input\r\n                            onAddClick={handleAddIngrediente} // Función para añadir el ingrediente\r\n                            isDisabled={isAddIngredienteDisabled}\r\n                        />\r\n\r\n                        {/* Mostrar ingredientes ya añadidos */}\r\n                        {formData.ingredientes.length > 0 && (\r\n                            <div className=\"ingredientes-agregados\">\r\n                                <p className=\"titulo-agregados\">Agregados:</p>\r\n                                <ul className=\"lista-agregados\">\r\n                                    {formData.ingredientes.map(ingrediente => (\r\n                                        <li key={ingrediente}>\r\n                                            {ingrediente}\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => handleRemoveIngrediente(ingrediente)}\r\n                                                className=\"boton-eliminar-ingrediente\"\r\n                                                title=\"Eliminar ingrediente\"\r\n                                            >\r\n                                                &times; {/* Símbolo de cruz para eliminar */}\r\n                                            </button>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Campo Nombre */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"nombre\" className=\"etiqueta-campo\">\r\n                        Tu Nombre: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"nombre\"\r\n                        name=\"nombre\"\r\n                        value={formData.nombre}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.nombre ? 'input-error' : ''}`}\r\n                        placeholder=\"Escribe tu nombre\"\r\n                        aria-invalid={errors.nombre ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-nombre\"\r\n                    />\r\n                    {errors.nombre && <p id=\"error-nombre\" className=\"mensaje-error\">{errors.nombre}</p>}\r\n                </div>\r\n\r\n                {/* Campo Teléfono */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"telefono\" className=\"etiqueta-campo\">\r\n                        Número de Teléfono: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"tel\" // 'tel' para números de teléfono\r\n                        id=\"telefono\"\r\n                        name=\"telefono\"\r\n                        value={formData.telefono}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.telefono ? 'input-error' : ''}`}\r\n                        placeholder=\"Ej: 8112345678\"\r\n                        aria-invalid={errors.telefono ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-telefono\"\r\n                    />\r\n                    {errors.telefono && <p id=\"error-telefono\" className=\"mensaje-error\">{errors.telefono}</p>}\r\n                </div>\r\n\r\n                {/* Campo Cantidad */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"cantidad\" className=\"etiqueta-campo\">\r\n                        Cantidad: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"cantidad\"\r\n                        name=\"cantidad\"\r\n                        value={formData.cantidad}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.cantidad ? 'input-error' : ''}`}\r\n                        min=\"1\"\r\n                        aria-invalid={errors.cantidad ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-cantidad\"\r\n                    />\r\n                    {errors.cantidad && <p id=\"error-cantidad\" className=\"mensaje-error\">{errors.cantidad}</p>}\r\n                </div>\r\n\r\n                {/* Campo Notas Adicionales */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"notas\" className=\"etiqueta-campo\">Notas adicionales (opcional):</label>\r\n                    <textarea\r\n                        id=\"notas\"\r\n                        name=\"notas\"\r\n                        value={formData.notas}\r\n                        onChange={handleChange}\r\n                        className=\"input-text\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Ej: sin picante, con mucha crema, etc.\"\r\n                    ></textarea>\r\n                </div>\r\n\r\n                {/* Campo Método de Entrega */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"metodoEntrega\" className=\"etiqueta-campo\">\r\n                        Método de entrega: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <select\r\n                        id=\"metodoEntrega\"\r\n                        name=\"metodoEntrega\"\r\n                        value={formData.metodoEntrega}\r\n                        onChange={handleChange}\r\n                        className=\"input-select\"\r\n                    >\r\n                        <option value=\"recoger\">Recoger en local</option>\r\n                        <option value=\"domicilio\">Servicio a domicilio</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* Campo Dirección (solo si el método de entrega es \"domicilio\") */}\r\n                {formData.metodoEntrega === 'domicilio' && (\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"direccion\" className=\"etiqueta-campo\">\r\n                            Dirección de entrega: <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"direccion\"\r\n                            name=\"direccion\"\r\n                            value={formData.direccion}\r\n                            onChange={handleChange}\r\n                            className={`input-text ${errors.direccion ? 'input-error' : ''}`}\r\n                            placeholder=\"Calle, número, colonia, código postal\"\r\n                            aria-invalid={errors.direccion ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-direccion\"\r\n                        />\r\n                        {errors.direccion && <p id=\"error-direccion\" className=\"mensaje-error\">{errors.direccion}</p>}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Botón para completar el pedido */}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"boton-completar-pedido\"\r\n                    disabled={isSubmitDisabled}\r\n                >\r\n                    Completar Pedido\r\n                </button>\r\n            </form>\r\n\r\n            <p className=\"info-telefono\">\r\n                Si prefieres, también puedes hacer tu pedido llamando al: <strong>81 1234 5678</strong>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RealizarPedido;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}