{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\980020889\\\\Documents\\\\GitHub\\\\Front-end\\\\kayaksnack\\\\src\\\\components\\\\RealizarPedido.js\",\n  _s = $RefreshSig$();\n// src/components/RealizarPedido.js\nimport React, { useState, useEffect } from 'react';\nimport './RealizarPedido.css';\nimport IngredienteInputs from './IngredienteInputs'; // Importa el componente de input de ingredientes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealizarPedido() {\n  _s();\n  // Definición de productos y sus ingredientes específicos\n  const productosConfig = {\n    'Fruta Fresca': ['Chamoy', 'Tajín', 'Miguelito', 'Leche Condensada', 'Sal', 'Limón'],\n    'Elote en vaso': ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla'],\n    'Russa': [],\n    // Por ejemplo, la Russa no tiene ingredientes extra seleccionables\n    'Tosticeviche': [],\n    'Tostielote': [],\n    'Boyas': [],\n    'Tostada': [],\n    'Litro Ceviche': [],\n    'Chilidog': []\n    // ... Agrega aquí cualquier otro producto que tengas en tu menú\n  };\n\n  // Lista de todos los productos disponibles (para el dropdown principal)\n  const productosDisponibles = Object.keys(productosConfig);\n\n  // Estado para los datos del formulario\n  const [formData, setFormData] = useState({\n    nombre: '',\n    telefono: '',\n    producto: '',\n    ingredientes: [],\n    // Guarda los ingredientes seleccionados para el producto actual\n    cantidad: 1,\n    notas: '',\n    metodoEntrega: 'recoger',\n    // 'recoger' o 'domicilio'\n    direccion: '' // Solo relevante si es a domicilio\n  });\n\n  // Estado para controlar errores de validación\n  const [errors, setErrors] = useState({});\n\n  // Estado para el ingrediente actualmente seleccionado en el input de añadir (para el componente IngredienteInputs)\n  const [currentIngredienteInput, setCurrentIngredienteInput] = useState('');\n\n  // Obtener los ingredientes disponibles para el producto seleccionado\n  const ingredientesParaProductoActual = productosConfig[formData.producto] || [];\n\n  // Manejador genérico para cambios en los inputs del formulario\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Limpia errores relacionados con el campo que se está modificando\n    setErrors(prev => ({\n      ...prev,\n      [name]: ''\n    }));\n\n    // Lógica específica cuando el producto cambia:\n    if (name === 'producto') {\n      setFormData(prev => ({\n        ...prev,\n        ingredientes: [] // Limpiar ingredientes si el producto cambia\n      }));\n      setCurrentIngredienteInput(''); // Limpiar el input de ingredientes al cambiar de producto\n    }\n  };\n\n  // Manejador para añadir un ingrediente a la lista\n  const handleAddIngrediente = () => {\n    const ingredienteToAdd = currentIngredienteInput.trim();\n\n    // Validar que el ingrediente es válido para el producto seleccionado y no está ya añadido\n    if (ingredienteToAdd && ingredientesParaProductoActual.includes(ingredienteToAdd) && !formData.ingredientes.includes(ingredienteToAdd)) {\n      setFormData(prev => ({\n        ...prev,\n        ingredientes: [...prev.ingredientes, ingredienteToAdd]\n      }));\n      setCurrentIngredienteInput(''); // Limpia el input después de añadir\n      setErrors(prev => ({\n        ...prev,\n        ingredientes: ''\n      })); // Limpia error si existía\n    } else if (ingredienteToAdd && formData.ingredientes.includes(ingredienteToAdd)) {\n      // Feedback si el ingrediente ya fue añadido\n      alert(`\"${ingredienteToAdd}\" ya ha sido añadido.`);\n    } else if (ingredienteToAdd && !ingredientesParaProductoActual.includes(ingredienteToAdd)) {\n      // Feedback si el ingrediente no es válido para el producto\n      alert(`\"${ingredienteToAdd}\" no es un ingrediente válido para \"${formData.producto}\". Por favor, elige uno de la lista.`);\n    }\n  };\n\n  // Manejador para eliminar un ingrediente\n  const handleRemoveIngrediente = ingredienteToRemove => {\n    setFormData(prev => ({\n      ...prev,\n      ingredientes: prev.ingredientes.filter(ing => ing !== ingredienteToRemove)\n    }));\n  };\n\n  // Función de validación del formulario\n  const validateForm = () => {\n    let newErrors = {};\n    let isValid = true;\n    if (!formData.nombre.trim()) {\n      newErrors.nombre = 'El nombre es requerido.';\n      isValid = false;\n    }\n    if (!formData.telefono.trim()) {\n      newErrors.telefono = 'El teléfono es requerido.';\n      isValid = false;\n    } else if (!/^\\d{10}$/.test(formData.telefono.trim())) {\n      // Asume un teléfono de 10 dígitos (ajusta si es necesario)\n      newErrors.telefono = 'El teléfono debe tener 10 dígitos.';\n      isValid = false;\n    }\n    if (!formData.producto) {\n      newErrors.producto = 'Selecciona un producto.';\n      isValid = false;\n    }\n\n    // Cantidad siempre debe ser al menos 1\n    if (formData.cantidad < 1) {\n      newErrors.cantidad = 'La cantidad debe ser al menos 1.';\n      isValid = false;\n    }\n    if (formData.metodoEntrega === 'domicilio' && !formData.direccion.trim()) {\n      newErrors.direccion = 'La dirección es requerida para el servicio a domicilio.';\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  // Manejador para enviar el formulario\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      // Aquí iría la lógica para enviar el pedido a un backend o servicio.\n      // Por ahora, solo lo mostraremos en consola y un alert.\n      console.log(\"Pedido Enviado:\", formData);\n      alert('¡Tu pedido ha sido enviado con éxito! Nos pondremos en contacto contigo pronto.');\n\n      // Opcional: Reiniciar el formulario después de un envío exitoso\n      setFormData({\n        nombre: '',\n        telefono: '',\n        producto: '',\n        ingredientes: [],\n        cantidad: 1,\n        notas: '',\n        metodoEntrega: 'recoger',\n        direccion: ''\n      });\n      setErrors({}); // Limpiar errores\n      setCurrentIngredienteInput(''); // Limpiar el input de ingrediente\n    } else {\n      // Si hay errores, el validateForm ya los estableció en el estado 'errors'\n      alert('Por favor, completa todos los campos requeridos y corrige los errores.');\n      // Opcional: enfocar el primer campo con error para mejorar la UX\n      const firstErrorField = Object.keys(errors)[0];\n      if (firstErrorField) {\n        var _document$getElementB;\n        (_document$getElementB = document.getElementById(firstErrorField)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n      }\n    }\n  };\n\n  // Lógica para deshabilitar el botón de añadir ingrediente\n  // Se deshabilita si el input está vacío, si el ingrediente no está en la lista de sugerencias válidas,\n  // o si el ingrediente ya fue añadido.\n  const isAddIngredienteDisabled = !currentIngredienteInput.trim() || !ingredientesParaProductoActual.includes(currentIngredienteInput.trim()) || formData.ingredientes.includes(currentIngredienteInput.trim());\n\n  // Lógica para deshabilitar el botón de enviar pedido\n  // Este useEffect asegura que el estado de 'disabled' del botón se actualice con cada cambio de formData.\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\n  useEffect(() => {\n    const isValid = validateForm();\n    setIsSubmitDisabled(!isValid);\n  }, [formData]); // Re-evaluar cuando formData cambie\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seccion-realizar-pedido\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo-principal\",\n      children: \"Haz tu Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"linea-debajo-titulo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitulo-principal\",\n      children: \"Personaliza tu antojo y disfruta de los mejores snacks de Kayak Snack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"formulario-contenedor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"producto\",\n          className: \"etiqueta-campo\",\n          children: [\"Selecciona tu antojo \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"producto\",\n          name: \"producto\",\n          value: formData.producto,\n          onChange: handleChange,\n          className: `input-select ${errors.producto ? 'input-error' : ''}`,\n          \"aria-invalid\": errors.producto ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-producto\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Elige un producto --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), productosDisponibles.map(producto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: producto,\n            children: producto\n          }, producto, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), errors.producto && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-producto\",\n          className: \"mensaje-error\",\n          children: errors.producto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), ingredientesParaProductoActual.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(IngredienteInputs // Usando el nuevo componente IngredienteInputs\n        , {\n          label: \"A\\xF1adir ingredientes (opcional)\",\n          placeholder: \"Ingrediente a a\\xF1adir\",\n          suggestions: ingredientesParaProductoActual // Le pasamos la lista de sugerencias para el producto actual\n          ,\n          currentValue: currentIngredienteInput,\n          onValueChange: setCurrentIngredienteInput // Función para actualizar el valor del input\n          ,\n          onAddClick: handleAddIngrediente // Función para añadir el ingrediente\n          ,\n          isDisabled: isAddIngredienteDisabled\n          // Puedes pasar un errorMessage si tuvieras una validación específica para el input de ingredientes\n          // errorMessage={errors.ingredientes}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), formData.ingredientes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredientes-agregados\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"titulo-agregados\",\n            children: \"Agregados:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"lista-agregados\",\n            children: formData.ingredientes.map(ingrediente => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [ingrediente, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleRemoveIngrediente(ingrediente),\n                className: \"boton-eliminar-ingrediente\",\n                title: \"Eliminar ingrediente\",\n                children: \"\\xD7 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 45\n              }, this)]\n            }, ingrediente, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          className: \"etiqueta-campo\",\n          children: [\"Tu Nombre: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          name: \"nombre\",\n          value: formData.nombre,\n          onChange: handleChange,\n          className: `input-text ${errors.nombre ? 'input-error' : ''}`,\n          placeholder: \"Escribe tu nombre\",\n          \"aria-invalid\": errors.nombre ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), errors.nombre && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-nombre\",\n          className: \"mensaje-error\",\n          children: errors.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"telefono\",\n          className: \"etiqueta-campo\",\n          children: [\"N\\xFAmero de Tel\\xE9fono: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\" // 'tel' para números de teléfono\n          ,\n          id: \"telefono\",\n          name: \"telefono\",\n          value: formData.telefono,\n          onChange: handleChange,\n          className: `input-text ${errors.telefono ? 'input-error' : ''}`,\n          placeholder: \"Ej: 8112345678\",\n          \"aria-invalid\": errors.telefono ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-telefono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), errors.telefono && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-telefono\",\n          className: \"mensaje-error\",\n          children: errors.telefono\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cantidad\",\n          className: \"etiqueta-campo\",\n          children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"cantidad\",\n          name: \"cantidad\",\n          value: formData.cantidad,\n          onChange: handleChange,\n          className: `input-text ${errors.cantidad ? 'input-error' : ''}`,\n          min: \"1\",\n          \"aria-invalid\": errors.cantidad ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-cantidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), errors.cantidad && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-cantidad\",\n          className: \"mensaje-error\",\n          children: errors.cantidad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notas\",\n          className: \"etiqueta-campo\",\n          children: \"Notas adicionales (opcional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"notas\",\n          name: \"notas\",\n          value: formData.notas,\n          onChange: handleChange,\n          className: \"input-text\",\n          rows: \"4\",\n          placeholder: \"Ej: sin picante, con mucha crema, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"metodoEntrega\",\n          className: \"etiqueta-campo\",\n          children: [\"M\\xE9todo de entrega: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"metodoEntrega\",\n          name: \"metodoEntrega\",\n          value: formData.metodoEntrega,\n          onChange: handleChange,\n          className: \"input-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"recoger\",\n            children: \"Recoger en local\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"domicilio\",\n            children: \"Servicio a domicilio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this), formData.metodoEntrega === 'domicilio' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"direccion\",\n          className: \"etiqueta-campo\",\n          children: [\"Direcci\\xF3n de entrega: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"direccion\",\n          name: \"direccion\",\n          value: formData.direccion,\n          onChange: handleChange,\n          className: `input-text ${errors.direccion ? 'input-error' : ''}`,\n          placeholder: \"Calle, n\\xFAmero, colonia, c\\xF3digo postal\",\n          \"aria-invalid\": errors.direccion ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-direccion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this), errors.direccion && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-direccion\",\n          className: \"mensaje-error\",\n          children: errors.direccion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"boton-completar-pedido\",\n        disabled: isSubmitDisabled,\n        children: \"Completar Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-telefono\",\n      children: [\"Si prefieres, tambi\\xE9n puedes hacer tu pedido llamando al: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"81 1234 5678\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 75\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n}\n_s(RealizarPedido, \"O6MhVouaDB8oUW+jgXrSaCQybgQ=\");\n_c = RealizarPedido;\nexport default RealizarPedido;\nvar _c;\n$RefreshReg$(_c, \"RealizarPedido\");","map":{"version":3,"names":["React","useState","useEffect","IngredienteInputs","jsxDEV","_jsxDEV","RealizarPedido","_s","productosConfig","productosDisponibles","Object","keys","formData","setFormData","nombre","telefono","producto","ingredientes","cantidad","notas","metodoEntrega","direccion","errors","setErrors","currentIngredienteInput","setCurrentIngredienteInput","ingredientesParaProductoActual","handleChange","e","name","value","target","prev","handleAddIngrediente","ingredienteToAdd","trim","includes","alert","handleRemoveIngrediente","ingredienteToRemove","filter","ing","validateForm","newErrors","isValid","test","handleSubmit","preventDefault","console","log","firstErrorField","_document$getElementB","document","getElementById","focus","isAddIngredienteDisabled","isSubmitDisabled","setIsSubmitDisabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","map","length","label","placeholder","suggestions","currentValue","onValueChange","onAddClick","isDisabled","ingrediente","type","onClick","title","min","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/980020889/Documents/GitHub/Front-end/kayaksnack/src/components/RealizarPedido.js"],"sourcesContent":["// src/components/RealizarPedido.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './RealizarPedido.css';\r\nimport IngredienteInputs from './IngredienteInputs'; // Importa el componente de input de ingredientes\r\n\r\nfunction RealizarPedido() {\r\n    // Definición de productos y sus ingredientes específicos\r\n    const productosConfig = {\r\n        'Fruta Fresca': ['Chamoy', 'Tajín', 'Miguelito', 'Leche Condensada', 'Sal', 'Limón'],\r\n        'Elote en vaso': ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla'],\r\n        'Russa': [], // Por ejemplo, la Russa no tiene ingredientes extra seleccionables\r\n        'Tosticeviche': [],\r\n        'Tostielote': [],\r\n        'Boyas': [],\r\n        'Tostada': [],\r\n        'Litro Ceviche': [],\r\n        'Chilidog': [],\r\n        // ... Agrega aquí cualquier otro producto que tengas en tu menú\r\n    };\r\n\r\n    // Lista de todos los productos disponibles (para el dropdown principal)\r\n    const productosDisponibles = Object.keys(productosConfig);\r\n\r\n    // Estado para los datos del formulario\r\n    const [formData, setFormData] = useState({\r\n        nombre: '',\r\n        telefono: '',\r\n        producto: '',\r\n        ingredientes: [], // Guarda los ingredientes seleccionados para el producto actual\r\n        cantidad: 1,\r\n        notas: '',\r\n        metodoEntrega: 'recoger', // 'recoger' o 'domicilio'\r\n        direccion: '', // Solo relevante si es a domicilio\r\n    });\r\n\r\n    // Estado para controlar errores de validación\r\n    const [errors, setErrors] = useState({});\r\n\r\n    // Estado para el ingrediente actualmente seleccionado en el input de añadir (para el componente IngredienteInputs)\r\n    const [currentIngredienteInput, setCurrentIngredienteInput] = useState('');\r\n\r\n    // Obtener los ingredientes disponibles para el producto seleccionado\r\n    const ingredientesParaProductoActual = productosConfig[formData.producto] || [];\r\n\r\n    // Manejador genérico para cambios en los inputs del formulario\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n\r\n        // Limpia errores relacionados con el campo que se está modificando\r\n        setErrors(prev => ({ ...prev, [name]: '' }));\r\n\r\n        // Lógica específica cuando el producto cambia:\r\n        if (name === 'producto') {\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                ingredientes: [] // Limpiar ingredientes si el producto cambia\r\n            }));\r\n            setCurrentIngredienteInput(''); // Limpiar el input de ingredientes al cambiar de producto\r\n        }\r\n    };\r\n\r\n    // Manejador para añadir un ingrediente a la lista\r\n    const handleAddIngrediente = () => {\r\n        const ingredienteToAdd = currentIngredienteInput.trim();\r\n\r\n        // Validar que el ingrediente es válido para el producto seleccionado y no está ya añadido\r\n        if (ingredienteToAdd &&\r\n            ingredientesParaProductoActual.includes(ingredienteToAdd) &&\r\n            !formData.ingredientes.includes(ingredienteToAdd)) {\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                ingredientes: [...prev.ingredientes, ingredienteToAdd]\r\n            }));\r\n            setCurrentIngredienteInput(''); // Limpia el input después de añadir\r\n            setErrors(prev => ({ ...prev, ingredientes: '' })); // Limpia error si existía\r\n        } else if (ingredienteToAdd && formData.ingredientes.includes(ingredienteToAdd)) {\r\n            // Feedback si el ingrediente ya fue añadido\r\n            alert(`\"${ingredienteToAdd}\" ya ha sido añadido.`);\r\n        } else if (ingredienteToAdd && !ingredientesParaProductoActual.includes(ingredienteToAdd)) {\r\n            // Feedback si el ingrediente no es válido para el producto\r\n            alert(`\"${ingredienteToAdd}\" no es un ingrediente válido para \"${formData.producto}\". Por favor, elige uno de la lista.`);\r\n        }\r\n    };\r\n\r\n    // Manejador para eliminar un ingrediente\r\n    const handleRemoveIngrediente = (ingredienteToRemove) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            ingredientes: prev.ingredientes.filter(ing => ing !== ingredienteToRemove)\r\n        }));\r\n    };\r\n\r\n    // Función de validación del formulario\r\n    const validateForm = () => {\r\n        let newErrors = {};\r\n        let isValid = true;\r\n\r\n        if (!formData.nombre.trim()) {\r\n            newErrors.nombre = 'El nombre es requerido.';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.telefono.trim()) {\r\n            newErrors.telefono = 'El teléfono es requerido.';\r\n            isValid = false;\r\n        } else if (!/^\\d{10}$/.test(formData.telefono.trim())) { // Asume un teléfono de 10 dígitos (ajusta si es necesario)\r\n            newErrors.telefono = 'El teléfono debe tener 10 dígitos.';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.producto) {\r\n            newErrors.producto = 'Selecciona un producto.';\r\n            isValid = false;\r\n        }\r\n\r\n        // Cantidad siempre debe ser al menos 1\r\n        if (formData.cantidad < 1) {\r\n            newErrors.cantidad = 'La cantidad debe ser al menos 1.';\r\n            isValid = false;\r\n        }\r\n\r\n\r\n        if (formData.metodoEntrega === 'domicilio' && !formData.direccion.trim()) {\r\n            newErrors.direccion = 'La dirección es requerida para el servicio a domicilio.';\r\n            isValid = false;\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return isValid;\r\n    };\r\n\r\n    // Manejador para enviar el formulario\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (validateForm()) {\r\n            // Aquí iría la lógica para enviar el pedido a un backend o servicio.\r\n            // Por ahora, solo lo mostraremos en consola y un alert.\r\n            console.log(\"Pedido Enviado:\", formData);\r\n            alert('¡Tu pedido ha sido enviado con éxito! Nos pondremos en contacto contigo pronto.');\r\n\r\n            // Opcional: Reiniciar el formulario después de un envío exitoso\r\n            setFormData({\r\n                nombre: '',\r\n                telefono: '',\r\n                producto: '',\r\n                ingredientes: [],\r\n                cantidad: 1,\r\n                notas: '',\r\n                metodoEntrega: 'recoger',\r\n                direccion: '',\r\n            });\r\n            setErrors({}); // Limpiar errores\r\n            setCurrentIngredienteInput(''); // Limpiar el input de ingrediente\r\n        } else {\r\n            // Si hay errores, el validateForm ya los estableció en el estado 'errors'\r\n            alert('Por favor, completa todos los campos requeridos y corrige los errores.');\r\n            // Opcional: enfocar el primer campo con error para mejorar la UX\r\n            const firstErrorField = Object.keys(errors)[0];\r\n            if (firstErrorField) {\r\n                document.getElementById(firstErrorField)?.focus();\r\n            }\r\n        }\r\n    };\r\n\r\n    // Lógica para deshabilitar el botón de añadir ingrediente\r\n    // Se deshabilita si el input está vacío, si el ingrediente no está en la lista de sugerencias válidas,\r\n    // o si el ingrediente ya fue añadido.\r\n    const isAddIngredienteDisabled = !currentIngredienteInput.trim() ||\r\n                                     !ingredientesParaProductoActual.includes(currentIngredienteInput.trim()) ||\r\n                                     formData.ingredientes.includes(currentIngredienteInput.trim());\r\n\r\n    // Lógica para deshabilitar el botón de enviar pedido\r\n    // Este useEffect asegura que el estado de 'disabled' del botón se actualice con cada cambio de formData.\r\n    const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const isValid = validateForm();\r\n        setIsSubmitDisabled(!isValid);\r\n    }, [formData]); // Re-evaluar cuando formData cambie\r\n\r\n    return (\r\n        <div className=\"seccion-realizar-pedido\">\r\n            <h1 className=\"titulo-principal\">Haz tu Pedido</h1>\r\n            <hr className=\"linea-debajo-titulo\" />\r\n            <p className=\"subtitulo-principal\">Personaliza tu antojo y disfruta de los mejores snacks de Kayak Snack</p>\r\n\r\n            <form onSubmit={handleSubmit} className=\"formulario-contenedor\">\r\n                {/* Campo Producto */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"producto\" className=\"etiqueta-campo\">\r\n                        Selecciona tu antojo <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <select\r\n                        id=\"producto\"\r\n                        name=\"producto\"\r\n                        value={formData.producto}\r\n                        onChange={handleChange}\r\n                        className={`input-select ${errors.producto ? 'input-error' : ''}`}\r\n                        aria-invalid={errors.producto ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-producto\"\r\n                    >\r\n                        <option value=\"\">-- Elige un producto --</option>\r\n                        {productosDisponibles.map(producto => (\r\n                            <option key={producto} value={producto}>{producto}</option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.producto && <p id=\"error-producto\" className=\"mensaje-error\">{errors.producto}</p>}\r\n                </div>\r\n\r\n                {/* Sección de añadir ingredientes (mostrar solo si el producto tiene ingredientes definidos) */}\r\n                {ingredientesParaProductoActual.length > 0 && (\r\n                    <div className=\"campo-grupo\">\r\n                        <IngredienteInputs // Usando el nuevo componente IngredienteInputs\r\n                            label=\"Añadir ingredientes (opcional)\"\r\n                            placeholder=\"Ingrediente a añadir\"\r\n                            suggestions={ingredientesParaProductoActual} // Le pasamos la lista de sugerencias para el producto actual\r\n                            currentValue={currentIngredienteInput}\r\n                            onValueChange={setCurrentIngredienteInput} // Función para actualizar el valor del input\r\n                            onAddClick={handleAddIngrediente} // Función para añadir el ingrediente\r\n                            isDisabled={isAddIngredienteDisabled}\r\n                            // Puedes pasar un errorMessage si tuvieras una validación específica para el input de ingredientes\r\n                            // errorMessage={errors.ingredientes}\r\n                        />\r\n\r\n                        {/* Mostrar ingredientes ya añadidos */}\r\n                        {formData.ingredientes.length > 0 && (\r\n                            <div className=\"ingredientes-agregados\">\r\n                                <p className=\"titulo-agregados\">Agregados:</p>\r\n                                <ul className=\"lista-agregados\">\r\n                                    {formData.ingredientes.map(ingrediente => (\r\n                                        <li key={ingrediente}>\r\n                                            {ingrediente}\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => handleRemoveIngrediente(ingrediente)}\r\n                                                className=\"boton-eliminar-ingrediente\"\r\n                                                title=\"Eliminar ingrediente\"\r\n                                            >\r\n                                                &times; {/* Símbolo de cruz para eliminar */}\r\n                                            </button>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Campo Nombre */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"nombre\" className=\"etiqueta-campo\">\r\n                        Tu Nombre: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"nombre\"\r\n                        name=\"nombre\"\r\n                        value={formData.nombre}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.nombre ? 'input-error' : ''}`}\r\n                        placeholder=\"Escribe tu nombre\"\r\n                        aria-invalid={errors.nombre ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-nombre\"\r\n                    />\r\n                    {errors.nombre && <p id=\"error-nombre\" className=\"mensaje-error\">{errors.nombre}</p>}\r\n                </div>\r\n\r\n                {/* Campo Teléfono */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"telefono\" className=\"etiqueta-campo\">\r\n                        Número de Teléfono: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"tel\" // 'tel' para números de teléfono\r\n                        id=\"telefono\"\r\n                        name=\"telefono\"\r\n                        value={formData.telefono}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.telefono ? 'input-error' : ''}`}\r\n                        placeholder=\"Ej: 8112345678\"\r\n                        aria-invalid={errors.telefono ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-telefono\"\r\n                    />\r\n                    {errors.telefono && <p id=\"error-telefono\" className=\"mensaje-error\">{errors.telefono}</p>}\r\n                </div>\r\n\r\n                {/* Campo Cantidad */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"cantidad\" className=\"etiqueta-campo\">\r\n                        Cantidad: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"cantidad\"\r\n                        name=\"cantidad\"\r\n                        value={formData.cantidad}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.cantidad ? 'input-error' : ''}`}\r\n                        min=\"1\"\r\n                        aria-invalid={errors.cantidad ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-cantidad\"\r\n                    />\r\n                     {errors.cantidad && <p id=\"error-cantidad\" className=\"mensaje-error\">{errors.cantidad}</p>}\r\n                </div>\r\n\r\n                {/* Campo Notas Adicionales */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"notas\" className=\"etiqueta-campo\">Notas adicionales (opcional):</label>\r\n                    <textarea\r\n                        id=\"notas\"\r\n                        name=\"notas\"\r\n                        value={formData.notas}\r\n                        onChange={handleChange}\r\n                        className=\"input-text\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Ej: sin picante, con mucha crema, etc.\"\r\n                    ></textarea>\r\n                </div>\r\n\r\n                {/* Campo Método de Entrega */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"metodoEntrega\" className=\"etiqueta-campo\">\r\n                        Método de entrega: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <select\r\n                        id=\"metodoEntrega\"\r\n                        name=\"metodoEntrega\"\r\n                        value={formData.metodoEntrega}\r\n                        onChange={handleChange}\r\n                        className=\"input-select\"\r\n                    >\r\n                        <option value=\"recoger\">Recoger en local</option>\r\n                        <option value=\"domicilio\">Servicio a domicilio</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* Campo Dirección (solo si el método de entrega es \"domicilio\") */}\r\n                {formData.metodoEntrega === 'domicilio' && (\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"direccion\" className=\"etiqueta-campo\">\r\n                            Dirección de entrega: <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"direccion\"\r\n                            name=\"direccion\"\r\n                            value={formData.direccion}\r\n                            onChange={handleChange}\r\n                            className={`input-text ${errors.direccion ? 'input-error' : ''}`}\r\n                            placeholder=\"Calle, número, colonia, código postal\"\r\n                            aria-invalid={errors.direccion ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-direccion\"\r\n                        />\r\n                        {errors.direccion && <p id=\"error-direccion\" className=\"mensaje-error\">{errors.direccion}</p>}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Botón para completar el pedido */}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"boton-completar-pedido\"\r\n                    disabled={isSubmitDisabled}\r\n                >\r\n                    Completar Pedido\r\n                </button>\r\n            </form>\r\n\r\n            <p className=\"info-telefono\">\r\n                Si prefieres, también puedes hacer tu pedido llamando al: <strong>81 1234 5678</strong>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RealizarPedido;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}