{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\980020889\\\\Documents\\\\GitHub\\\\Front-end\\\\kayaksnack\\\\src\\\\components\\\\RealizarPedido.js\",\n  _s = $RefreshSig$();\n// src/components/RealizarPedido.js\nimport React, { useState, useEffect } from 'react'; // Mantener useEffect, ahora sí se usa\nimport './RealizarPedido.css';\nimport IngredienteInputs from './IngredienteInputs'; // Importa el componente de input de ingredientes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealizarPedido() {\n  _s();\n  // Definición de productos y sus ingredientes específicos\n  const productosConfig = {\n    '': [],\n    // Opción por defecto sin ingredientes\n    'Fruta Fresca': ['Chamoy', 'Tajín', 'Miguelito', 'Leche Condensada', 'Sal', 'Limón', 'Miel'],\n    'Elote en vaso': ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla', 'Limón', 'Sal'],\n    'Russa': [],\n    'Tosticeviche': ['Salsa Negra', 'Aguacate', 'Limón'],\n    'Tostielote': ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla'],\n    'Boyas': ['Chamoy', 'Tajín', 'Miguelito'],\n    'Tostada': ['Crema', 'Queso', 'Aguacate'],\n    'Litro Ceviche': ['Aguacate', 'Salsa Picante', 'Limón'],\n    'Chilidog': ['Qili', 'Queso', 'Jalapeños', 'Cebolla']\n    // ... Agrega aquí cualquier otro producto que tengas en tu menú con sus ingredientes\n  };\n\n  // Lista de todos los productos disponibles (para el dropdown principal)\n  // Se añade un valor vacío para la opción \"Elige un producto\"\n  const productosDisponibles = ['', ...Object.keys(productosConfig).filter(key => key !== '')];\n\n  // Estado para los datos del formulario\n  const [formData, setFormData] = useState({\n    nombre: '',\n    telefono: '',\n    producto: '',\n    // Inicializado a vacío para la opción de selección\n    ingredientes: [],\n    cantidad: 1,\n    notas: '',\n    metodoEntrega: 'recoger',\n    // 'recoger' o 'domicilio'\n    direccion: '' // Solo relevante si es a domicilio\n  });\n\n  // Estado para controlar errores de validación\n  const [errors, setErrors] = useState({});\n\n  // Estado para el ingrediente actualmente seleccionado en el input de añadir\n  const [currentIngredienteInput, setCurrentIngredienteInput] = useState('');\n\n  // Obtener los ingredientes disponibles para el producto seleccionado\n  const ingredientesParaProductoActual = productosConfig[formData.producto] || [];\n\n  // Manejador genérico para cambios en los inputs del formulario\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Limpia errores relacionados con el campo que se está modificando\n    setErrors(prev => ({\n      ...prev,\n      [name]: ''\n    }));\n\n    // Lógica específica cuando el producto cambia:\n    if (name === 'producto') {\n      setFormData(prev => ({\n        ...prev,\n        ingredientes: [] // Limpiar ingredientes si el producto cambia\n      }));\n      setCurrentIngredienteInput(''); // Limpiar el input de ingredientes al cambiar de producto\n    }\n  };\n\n  // Manejador para añadir un ingrediente a la lista\n  const handleAddIngrediente = () => {\n    const ingredienteToAdd = currentIngredienteInput.trim();\n    if (!ingredienteToAdd) {\n      alert('Por favor, escribe un ingrediente para añadir.');\n      return;\n    }\n\n    // Validar que el ingrediente es válido para el producto seleccionado y no está ya añadido\n    if (!ingredientesParaProductoActual.includes(ingredienteToAdd)) {\n      alert(`\"${ingredienteToAdd}\" no es un ingrediente válido para \"${formData.producto}\". Por favor, elige uno de la lista o verifica la escritura.`);\n      return;\n    }\n    if (formData.ingredientes.includes(ingredienteToAdd)) {\n      alert(`\"${ingredienteToAdd}\" ya ha sido añadido.`);\n      return;\n    }\n    setFormData(prev => ({\n      ...prev,\n      ingredientes: [...prev.ingredientes, ingredienteToAdd]\n    }));\n    setCurrentIngredienteInput(''); // Limpia el input después de añadir\n    setErrors(prev => ({\n      ...prev,\n      ingredientes: ''\n    })); // Limpia error si existía\n  };\n\n  // Manejador para eliminar un ingrediente\n  const handleRemoveIngrediente = ingredienteToRemove => {\n    setFormData(prev => ({\n      ...prev,\n      ingredientes: prev.ingredientes.filter(ing => ing !== ingredienteToRemove)\n    }));\n  };\n\n  // Función de validación del formulario\n  const validateForm = () => {\n    let newErrors = {};\n    let isValid = true;\n    if (!formData.nombre.trim()) {\n      newErrors.nombre = 'El nombre es requerido.';\n      isValid = false;\n    }\n    if (!formData.telefono.trim()) {\n      newErrors.telefono = 'El teléfono es requerido.';\n      isValid = false;\n    } else if (!/^\\d{10}$/.test(formData.telefono.trim())) {\n      // Asume un teléfono de 10 dígitos (ajusta si es necesario)\n      newErrors.telefono = 'El teléfono debe tener 10 dígitos.';\n      isValid = false;\n    }\n    if (!formData.producto) {\n      newErrors.producto = 'Selecciona un producto.';\n      isValid = false;\n    }\n\n    // Cantidad siempre debe ser al menos 1\n    if (formData.cantidad < 1) {\n      newErrors.cantidad = 'La cantidad debe ser al menos 1.';\n      isValid = false;\n    }\n    if (formData.metodoEntrega === 'domicilio' && !formData.direccion.trim()) {\n      newErrors.direccion = 'La dirección es requerida para el servicio a domicilio.';\n      isValid = false;\n    }\n\n    // Se usa `setErrors` para que los mensajes se muestren en el UI.\n    // Pero para el `isSubmitDisabled`, solo necesitamos el valor de `isValid`\n    // sin que `setErrors` cause un ciclo infinito.\n    // La validación en el useEffect ya usa `setErrors`.\n    // Aquí solo la usamos para la lógica del botón de submit.\n    // No llamamos `setErrors` aquí directamente, solo la retornamos.\n    // setErrors(newErrors); // NO HACER ESTO AQUÍ O CAUSARÁ UN BUCLE INFINITO CON EL useEffect\n    return isValid;\n  };\n\n  // Lógica para deshabilitar el botón de añadir ingrediente\n  const isAddIngredienteDisabled = !currentIngredienteInput.trim() || !ingredientesParaProductoActual.includes(currentIngredienteInput.trim()) || formData.ingredientes.includes(currentIngredienteInput.trim());\n\n  // Lógica para deshabilitar el botón de enviar pedido\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\n\n  // Este useEffect recalcula si el formulario es válido cada vez que formData cambia\n  useEffect(() => {\n    const isValid = validateForm(); // Llama a la función de validación\n    setIsSubmitDisabled(!isValid);\n    // NOTA: Para que los mensajes de error se muestren al usuario,\n    // la validación completa con `setErrors` debe ocurrir en `handleSubmit`.\n    // Este `useEffect` es principalmente para habilitar/deshabilitar el botón de submit.\n  }, [formData]); // Re-evaluar cuando formData cambie (y, por lo tanto, cuando los campos cambien)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seccion-realizar-pedido\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo-principal\",\n      children: \"Haz tu Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"linea-debajo-titulo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitulo-principal\",\n      children: \"Personaliza tu antojo y disfruta de los mejores snacks de Kayak Snack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"formulario-contenedor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"producto\",\n          className: \"etiqueta-campo\",\n          children: [\"Selecciona tu antojo \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"producto\",\n          name: \"producto\",\n          value: formData.producto,\n          onChange: handleChange,\n          className: `input-select ${errors.producto ? 'input-error' : ''}`,\n          \"aria-invalid\": errors.producto ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-producto\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Elige un producto --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), productosDisponibles.filter(p => p !== '').map(producto =>\n          /*#__PURE__*/\n          // Filtramos el vacío aquí\n          _jsxDEV(\"option\", {\n            value: producto,\n            children: producto\n          }, producto, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), errors.producto && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-producto\",\n          className: \"mensaje-error\",\n          children: errors.producto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), formData.producto && ingredientesParaProductoActual.length > 0 &&\n      /*#__PURE__*/\n      // Solo mostrar si un producto está seleccionado Y tiene ingredientes\n      _jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(IngredienteInputs // Usando el nuevo componente IngredienteInputs\n        , {\n          label: \"A\\xF1adir ingredientes (opcional)\",\n          placeholder: \"Ingrediente a a\\xF1adir\",\n          suggestions: ingredientesParaProductoActual // Le pasamos la lista de sugerencias para el producto actual\n          ,\n          currentValue: currentIngredienteInput,\n          onValueChange: setCurrentIngredienteInput // Función para actualizar el valor del input\n          ,\n          onAddClick: handleAddIngrediente // Función para añadir el ingrediente\n          ,\n          isDisabled: isAddIngredienteDisabled\n          // Puedes pasar un errorMessage si tuvieras una validación específica para el input de ingredientes\n          // errorMessage={errors.ingredientes}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), formData.ingredientes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredientes-agregados\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"titulo-agregados\",\n            children: \"Agregados:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"lista-agregados\",\n            children: formData.ingredientes.map(ingrediente => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [ingrediente, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleRemoveIngrediente(ingrediente),\n                className: \"boton-eliminar-ingrediente\",\n                title: \"Eliminar ingrediente\",\n                children: \"\\xD7 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 45\n              }, this)]\n            }, ingrediente, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          className: \"etiqueta-campo\",\n          children: [\"Tu Nombre: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          name: \"nombre\",\n          value: formData.nombre,\n          onChange: handleChange,\n          className: `input-text ${errors.nombre ? 'input-error' : ''}`,\n          placeholder: \"Escribe tu nombre\",\n          \"aria-invalid\": errors.nombre ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), errors.nombre && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-nombre\",\n          className: \"mensaje-error\",\n          children: errors.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"telefono\",\n          className: \"etiqueta-campo\",\n          children: [\"N\\xFAmero de Tel\\xE9fono: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\" // 'tel' para números de teléfono\n          ,\n          id: \"telefono\",\n          name: \"telefono\",\n          value: formData.telefono,\n          onChange: handleChange,\n          className: `input-text ${errors.telefono ? 'input-error' : ''}`,\n          placeholder: \"Ej: 8112345678\",\n          \"aria-invalid\": errors.telefono ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-telefono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), errors.telefono && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-telefono\",\n          className: \"mensaje-error\",\n          children: errors.telefono\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cantidad\",\n          className: \"etiqueta-campo\",\n          children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"cantidad\",\n          name: \"cantidad\",\n          value: formData.cantidad,\n          onChange: handleChange,\n          className: `input-text ${errors.cantidad ? 'input-error' : ''}`,\n          min: \"1\",\n          \"aria-invalid\": errors.cantidad ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-cantidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), errors.cantidad && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-cantidad\",\n          className: \"mensaje-error\",\n          children: errors.cantidad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notas\",\n          className: \"etiqueta-campo\",\n          children: \"Notas adicionales (opcional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"notas\",\n          name: \"notas\",\n          value: formData.notas,\n          onChange: handleChange,\n          className: \"input-text\",\n          rows: \"4\",\n          placeholder: \"Ej: sin picante, con mucha crema, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"metodoEntrega\",\n          className: \"etiqueta-campo\",\n          children: [\"M\\xE9todo de entrega: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"metodoEntrega\",\n          name: \"metodoEntrega\",\n          value: formData.metodoEntrega,\n          onChange: handleChange,\n          className: \"input-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"recoger\",\n            children: \"Recoger en local\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"domicilio\",\n            children: \"Servicio a domicilio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), formData.metodoEntrega === 'domicilio' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"direccion\",\n          className: \"etiqueta-campo\",\n          children: [\"Direcci\\xF3n de entrega: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"direccion\",\n          name: \"direccion\",\n          value: formData.direccion,\n          onChange: handleChange,\n          className: `input-text ${errors.direccion ? 'input-error' : ''}`,\n          placeholder: \"Calle, n\\xFAmero, colonia, c\\xF3digo postal\",\n          \"aria-invalid\": errors.direccion ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-direccion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }, this), errors.direccion && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-direccion\",\n          className: \"mensaje-error\",\n          children: errors.direccion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"boton-completar-pedido\",\n        disabled: isSubmitDisabled // El botón se deshabilita si el formulario no es válido\n        ,\n        children: \"Completar Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-telefono\",\n      children: [\"Si prefieres, tambi\\xE9n puedes hacer tu pedido llamando al: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"81 1234 5678\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 75\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n}\n_s(RealizarPedido, \"/q4kINd4vbXANcEYf8sW4mnLNdU=\");\n_c = RealizarPedido;\nexport default RealizarPedido;\nvar _c;\n$RefreshReg$(_c, \"RealizarPedido\");","map":{"version":3,"names":["React","useState","useEffect","IngredienteInputs","jsxDEV","_jsxDEV","RealizarPedido","_s","productosConfig","productosDisponibles","Object","keys","filter","key","formData","setFormData","nombre","telefono","producto","ingredientes","cantidad","notas","metodoEntrega","direccion","errors","setErrors","currentIngredienteInput","setCurrentIngredienteInput","ingredientesParaProductoActual","handleChange","e","name","value","target","prev","handleAddIngrediente","ingredienteToAdd","trim","alert","includes","handleRemoveIngrediente","ingredienteToRemove","ing","validateForm","newErrors","isValid","test","isAddIngredienteDisabled","isSubmitDisabled","setIsSubmitDisabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","htmlFor","id","onChange","p","map","length","label","placeholder","suggestions","currentValue","onValueChange","onAddClick","isDisabled","ingrediente","type","onClick","title","min","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/980020889/Documents/GitHub/Front-end/kayaksnack/src/components/RealizarPedido.js"],"sourcesContent":["// src/components/RealizarPedido.js\r\nimport React, { useState, useEffect } from 'react'; // Mantener useEffect, ahora sí se usa\r\nimport './RealizarPedido.css';\r\nimport IngredienteInputs from './IngredienteInputs'; // Importa el componente de input de ingredientes\r\n\r\nfunction RealizarPedido() {\r\n    // Definición de productos y sus ingredientes específicos\r\n    const productosConfig = {\r\n        '': [], // Opción por defecto sin ingredientes\r\n        'Fruta Fresca': ['Chamoy', 'Tajín', 'Miguelito', 'Leche Condensada', 'Sal', 'Limón', 'Miel'],\r\n        'Elote en vaso': ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla', 'Limón', 'Sal'],\r\n        'Russa': [],\r\n        'Tosticeviche': ['Salsa Negra', 'Aguacate', 'Limón'],\r\n        'Tostielote': ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Crema', 'Mantequilla'],\r\n        'Boyas': ['Chamoy', 'Tajín', 'Miguelito'],\r\n        'Tostada': ['Crema', 'Queso', 'Aguacate'],\r\n        'Litro Ceviche': ['Aguacate', 'Salsa Picante', 'Limón'],\r\n        'Chilidog': ['Qili', 'Queso', 'Jalapeños', 'Cebolla'],\r\n        // ... Agrega aquí cualquier otro producto que tengas en tu menú con sus ingredientes\r\n    };\r\n\r\n    // Lista de todos los productos disponibles (para el dropdown principal)\r\n    // Se añade un valor vacío para la opción \"Elige un producto\"\r\n    const productosDisponibles = ['', ...Object.keys(productosConfig).filter(key => key !== '')];\r\n\r\n    // Estado para los datos del formulario\r\n    const [formData, setFormData] = useState({\r\n        nombre: '',\r\n        telefono: '',\r\n        producto: '', // Inicializado a vacío para la opción de selección\r\n        ingredientes: [],\r\n        cantidad: 1,\r\n        notas: '',\r\n        metodoEntrega: 'recoger', // 'recoger' o 'domicilio'\r\n        direccion: '', // Solo relevante si es a domicilio\r\n    });\r\n\r\n    // Estado para controlar errores de validación\r\n    const [errors, setErrors] = useState({});\r\n\r\n    // Estado para el ingrediente actualmente seleccionado en el input de añadir\r\n    const [currentIngredienteInput, setCurrentIngredienteInput] = useState('');\r\n\r\n    // Obtener los ingredientes disponibles para el producto seleccionado\r\n    const ingredientesParaProductoActual = productosConfig[formData.producto] || [];\r\n\r\n    // Manejador genérico para cambios en los inputs del formulario\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n\r\n        // Limpia errores relacionados con el campo que se está modificando\r\n        setErrors(prev => ({ ...prev, [name]: '' }));\r\n\r\n        // Lógica específica cuando el producto cambia:\r\n        if (name === 'producto') {\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                ingredientes: [] // Limpiar ingredientes si el producto cambia\r\n            }));\r\n            setCurrentIngredienteInput(''); // Limpiar el input de ingredientes al cambiar de producto\r\n        }\r\n    };\r\n\r\n    // Manejador para añadir un ingrediente a la lista\r\n    const handleAddIngrediente = () => {\r\n        const ingredienteToAdd = currentIngredienteInput.trim();\r\n\r\n        if (!ingredienteToAdd) {\r\n            alert('Por favor, escribe un ingrediente para añadir.');\r\n            return;\r\n        }\r\n\r\n        // Validar que el ingrediente es válido para el producto seleccionado y no está ya añadido\r\n        if (!ingredientesParaProductoActual.includes(ingredienteToAdd)) {\r\n            alert(`\"${ingredienteToAdd}\" no es un ingrediente válido para \"${formData.producto}\". Por favor, elige uno de la lista o verifica la escritura.`);\r\n            return;\r\n        }\r\n\r\n        if (formData.ingredientes.includes(ingredienteToAdd)) {\r\n            alert(`\"${ingredienteToAdd}\" ya ha sido añadido.`);\r\n            return;\r\n        }\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            ingredientes: [...prev.ingredientes, ingredienteToAdd]\r\n        }));\r\n        setCurrentIngredienteInput(''); // Limpia el input después de añadir\r\n        setErrors(prev => ({ ...prev, ingredientes: '' })); // Limpia error si existía\r\n    };\r\n\r\n    // Manejador para eliminar un ingrediente\r\n    const handleRemoveIngrediente = (ingredienteToRemove) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            ingredientes: prev.ingredientes.filter(ing => ing !== ingredienteToRemove)\r\n        }));\r\n    };\r\n\r\n    // Función de validación del formulario\r\n    const validateForm = () => {\r\n        let newErrors = {};\r\n        let isValid = true;\r\n\r\n        if (!formData.nombre.trim()) {\r\n            newErrors.nombre = 'El nombre es requerido.';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.telefono.trim()) {\r\n            newErrors.telefono = 'El teléfono es requerido.';\r\n            isValid = false;\r\n        } else if (!/^\\d{10}$/.test(formData.telefono.trim())) { // Asume un teléfono de 10 dígitos (ajusta si es necesario)\r\n            newErrors.telefono = 'El teléfono debe tener 10 dígitos.';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.producto) {\r\n            newErrors.producto = 'Selecciona un producto.';\r\n            isValid = false;\r\n        }\r\n\r\n        // Cantidad siempre debe ser al menos 1\r\n        if (formData.cantidad < 1) {\r\n            newErrors.cantidad = 'La cantidad debe ser al menos 1.';\r\n            isValid = false;\r\n        }\r\n\r\n        if (formData.metodoEntrega === 'domicilio' && !formData.direccion.trim()) {\r\n            newErrors.direccion = 'La dirección es requerida para el servicio a domicilio.';\r\n            isValid = false;\r\n        }\r\n\r\n        // Se usa `setErrors` para que los mensajes se muestren en el UI.\r\n        // Pero para el `isSubmitDisabled`, solo necesitamos el valor de `isValid`\r\n        // sin que `setErrors` cause un ciclo infinito.\r\n        // La validación en el useEffect ya usa `setErrors`.\r\n        // Aquí solo la usamos para la lógica del botón de submit.\r\n        // No llamamos `setErrors` aquí directamente, solo la retornamos.\r\n        // setErrors(newErrors); // NO HACER ESTO AQUÍ O CAUSARÁ UN BUCLE INFINITO CON EL useEffect\r\n        return isValid;\r\n    };\r\n\r\n    // Lógica para deshabilitar el botón de añadir ingrediente\r\n    const isAddIngredienteDisabled = !currentIngredienteInput.trim() ||\r\n                                     !ingredientesParaProductoActual.includes(currentIngredienteInput.trim()) ||\r\n                                     formData.ingredientes.includes(currentIngredienteInput.trim());\r\n\r\n    // Lógica para deshabilitar el botón de enviar pedido\r\n    const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\r\n\r\n    // Este useEffect recalcula si el formulario es válido cada vez que formData cambia\r\n    useEffect(() => {\r\n        const isValid = validateForm(); // Llama a la función de validación\r\n        setIsSubmitDisabled(!isValid);\r\n        // NOTA: Para que los mensajes de error se muestren al usuario,\r\n        // la validación completa con `setErrors` debe ocurrir en `handleSubmit`.\r\n        // Este `useEffect` es principalmente para habilitar/deshabilitar el botón de submit.\r\n    }, [formData]); // Re-evaluar cuando formData cambie (y, por lo tanto, cuando los campos cambien)\r\n\r\n    return (\r\n        <div className=\"seccion-realizar-pedido\">\r\n            <h1 className=\"titulo-principal\">Haz tu Pedido</h1>\r\n            <hr className=\"linea-debajo-titulo\" />\r\n            <p className=\"subtitulo-principal\">Personaliza tu antojo y disfruta de los mejores snacks de Kayak Snack</p>\r\n\r\n            <form onSubmit={handleSubmit} className=\"formulario-contenedor\">\r\n                {/* Campo Producto */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"producto\" className=\"etiqueta-campo\">\r\n                        Selecciona tu antojo <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <select\r\n                        id=\"producto\"\r\n                        name=\"producto\"\r\n                        value={formData.producto}\r\n                        onChange={handleChange}\r\n                        className={`input-select ${errors.producto ? 'input-error' : ''}`}\r\n                        aria-invalid={errors.producto ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-producto\"\r\n                    >\r\n                        <option value=\"\">-- Elige un producto --</option>\r\n                        {productosDisponibles.filter(p => p !== '').map(producto => ( // Filtramos el vacío aquí\r\n                            <option key={producto} value={producto}>{producto}</option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.producto && <p id=\"error-producto\" className=\"mensaje-error\">{errors.producto}</p>}\r\n                </div>\r\n\r\n                {/* Sección de añadir ingredientes (mostrar solo si el producto tiene ingredientes definidos) */}\r\n                {formData.producto && ingredientesParaProductoActual.length > 0 && ( // Solo mostrar si un producto está seleccionado Y tiene ingredientes\r\n                    <div className=\"campo-grupo\">\r\n                        <IngredienteInputs // Usando el nuevo componente IngredienteInputs\r\n                            label=\"Añadir ingredientes (opcional)\"\r\n                            placeholder=\"Ingrediente a añadir\"\r\n                            suggestions={ingredientesParaProductoActual} // Le pasamos la lista de sugerencias para el producto actual\r\n                            currentValue={currentIngredienteInput}\r\n                            onValueChange={setCurrentIngredienteInput} // Función para actualizar el valor del input\r\n                            onAddClick={handleAddIngrediente} // Función para añadir el ingrediente\r\n                            isDisabled={isAddIngredienteDisabled}\r\n                            // Puedes pasar un errorMessage si tuvieras una validación específica para el input de ingredientes\r\n                            // errorMessage={errors.ingredientes}\r\n                        />\r\n\r\n                        {/* Mostrar ingredientes ya añadidos */}\r\n                        {formData.ingredientes.length > 0 && (\r\n                            <div className=\"ingredientes-agregados\">\r\n                                <p className=\"titulo-agregados\">Agregados:</p>\r\n                                <ul className=\"lista-agregados\">\r\n                                    {formData.ingredientes.map(ingrediente => (\r\n                                        <li key={ingrediente}>\r\n                                            {ingrediente}\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => handleRemoveIngrediente(ingrediente)}\r\n                                                className=\"boton-eliminar-ingrediente\"\r\n                                                title=\"Eliminar ingrediente\"\r\n                                            >\r\n                                                &times; {/* Símbolo de cruz para eliminar */}\r\n                                            </button>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Campo Nombre */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"nombre\" className=\"etiqueta-campo\">\r\n                        Tu Nombre: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"nombre\"\r\n                        name=\"nombre\"\r\n                        value={formData.nombre}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.nombre ? 'input-error' : ''}`}\r\n                        placeholder=\"Escribe tu nombre\"\r\n                        aria-invalid={errors.nombre ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-nombre\"\r\n                    />\r\n                    {errors.nombre && <p id=\"error-nombre\" className=\"mensaje-error\">{errors.nombre}</p>}\r\n                </div>\r\n\r\n                {/* Campo Teléfono */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"telefono\" className=\"etiqueta-campo\">\r\n                        Número de Teléfono: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"tel\" // 'tel' para números de teléfono\r\n                        id=\"telefono\"\r\n                        name=\"telefono\"\r\n                        value={formData.telefono}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.telefono ? 'input-error' : ''}`}\r\n                        placeholder=\"Ej: 8112345678\"\r\n                        aria-invalid={errors.telefono ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-telefono\"\r\n                    />\r\n                    {errors.telefono && <p id=\"error-telefono\" className=\"mensaje-error\">{errors.telefono}</p>}\r\n                </div>\r\n\r\n                {/* Campo Cantidad */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"cantidad\" className=\"etiqueta-campo\">\r\n                        Cantidad: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"cantidad\"\r\n                        name=\"cantidad\"\r\n                        value={formData.cantidad}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.cantidad ? 'input-error' : ''}`}\r\n                        min=\"1\"\r\n                        aria-invalid={errors.cantidad ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-cantidad\"\r\n                    />\r\n                     {errors.cantidad && <p id=\"error-cantidad\" className=\"mensaje-error\">{errors.cantidad}</p>}\r\n                </div>\r\n\r\n                {/* Campo Notas Adicionales */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"notas\" className=\"etiqueta-campo\">Notas adicionales (opcional):</label>\r\n                    <textarea\r\n                        id=\"notas\"\r\n                        name=\"notas\"\r\n                        value={formData.notas}\r\n                        onChange={handleChange}\r\n                        className=\"input-text\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Ej: sin picante, con mucha crema, etc.\"\r\n                    ></textarea>\r\n                </div>\r\n\r\n                {/* Campo Método de Entrega */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"metodoEntrega\" className=\"etiqueta-campo\">\r\n                        Método de entrega: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <select\r\n                        id=\"metodoEntrega\"\r\n                        name=\"metodoEntrega\"\r\n                        value={formData.metodoEntrega}\r\n                        onChange={handleChange}\r\n                        className=\"input-select\"\r\n                    >\r\n                        <option value=\"recoger\">Recoger en local</option>\r\n                        <option value=\"domicilio\">Servicio a domicilio</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* Campo Dirección (solo si el método de entrega es \"domicilio\") */}\r\n                {formData.metodoEntrega === 'domicilio' && (\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"direccion\" className=\"etiqueta-campo\">\r\n                            Dirección de entrega: <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"direccion\"\r\n                            name=\"direccion\"\r\n                            value={formData.direccion}\r\n                            onChange={handleChange}\r\n                            className={`input-text ${errors.direccion ? 'input-error' : ''}`}\r\n                            placeholder=\"Calle, número, colonia, código postal\"\r\n                            aria-invalid={errors.direccion ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-direccion\"\r\n                        />\r\n                        {errors.direccion && <p id=\"error-direccion\" className=\"mensaje-error\">{errors.direccion}</p>}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Botón para completar el pedido */}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"boton-completar-pedido\"\r\n                    disabled={isSubmitDisabled} // El botón se deshabilita si el formulario no es válido\r\n                >\r\n                    Completar Pedido\r\n                </button>\r\n            </form>\r\n\r\n            <p className=\"info-telefono\">\r\n                Si prefieres, también puedes hacer tu pedido llamando al: <strong>81 1234 5678</strong>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RealizarPedido;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}