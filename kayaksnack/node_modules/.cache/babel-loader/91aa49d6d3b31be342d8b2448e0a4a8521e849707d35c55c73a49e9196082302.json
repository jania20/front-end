{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\980020889\\\\Documents\\\\GitHub\\\\Front-end\\\\kayaksnack\\\\src\\\\components\\\\RealizarPedido.js\",\n  _s = $RefreshSig$();\n// src/components/RealizarPedido.js\nimport React, { useState, useEffect } from 'react';\nimport './RealizarPedido.css';\n// Si tienes un componente para un modal de confirmación, impórtalo aquí\n// import ConfirmacionPedidoModal from './ConfirmacionPedidoModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealizarPedido() {\n  _s();\n  // Estado para los datos del formulario\n  const [formData, setFormData] = useState({\n    nombre: '',\n    telefono: '',\n    producto: '',\n    ingredientes: [],\n    // Para guardar los ingredientes extras del elote\n    cantidad: 1,\n    notas: '',\n    metodoEntrega: 'recoger',\n    // 'recoger' o 'domicilio'\n    direccion: '' // Solo relevante si es a domicilio\n  });\n\n  // Estado para controlar errores de validación\n  const [errors, setErrors] = useState({});\n\n  // Opciones de productos disponibles (pueden venir de una API o lista más grande)\n  const productosDisponibles = ['Russa', 'Fruta', 'Elote en vaso', 'Tosticeviche', 'Tostielote', 'Boyas', 'Tostada', 'Litro Ceviche', 'Chilidog'];\n\n  // Opciones de ingredientes extra para elote (ejemplo)\n  const ingredientesElote = ['Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Limón', 'Crema', 'Mantequilla'];\n\n  // Estado para el ingrediente actualmente seleccionado en el dropdown\n  const [selectedIngrediente, setSelectedIngrediente] = useState('');\n\n  // Manejador genérico para cambios en los inputs del formulario\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Limpia errores relacionados con el campo que se está modificando\n    setErrors(prev => ({\n      ...prev,\n      [name]: ''\n    }));\n\n    // Si el producto cambia y no es \"Elote en vaso\", limpia los ingredientes\n    if (name === 'producto' && value !== 'Elote en vaso') {\n      setFormData(prev => ({\n        ...prev,\n        ingredientes: []\n      }));\n      setSelectedIngrediente(''); // También limpia el selector de ingredientes\n    }\n  };\n\n  // Manejador para añadir un ingrediente al elote\n  const handleAddIngrediente = () => {\n    if (selectedIngrediente && !formData.ingredientes.includes(selectedIngrediente)) {\n      setFormData(prev => ({\n        ...prev,\n        ingredientes: [...prev.ingredientes, selectedIngrediente]\n      }));\n      setSelectedIngrediente(''); // Limpia el selector después de añadir\n      setErrors(prev => ({\n        ...prev,\n        ingredientes: ''\n      })); // Limpia error si existía\n    } else if (selectedIngrediente && formData.ingredientes.includes(selectedIngrediente)) {\n      // Feedback si el ingrediente ya fue añadido\n      alert(`\"${selectedIngrediente}\" ya ha sido añadido a tu elote.`);\n    }\n  };\n\n  // Manejador para eliminar un ingrediente del elote\n  const handleRemoveIngrediente = ingredienteToRemove => {\n    setFormData(prev => ({\n      ...prev,\n      ingredientes: prev.ingredientes.filter(ing => ing !== ingredienteToRemove)\n    }));\n  };\n\n  // Función de validación del formulario\n  const validateForm = () => {\n    let newErrors = {};\n    let isValid = true;\n    if (!formData.nombre.trim()) {\n      newErrors.nombre = 'El nombre es requerido.';\n      isValid = false;\n    }\n    if (!formData.telefono.trim()) {\n      newErrors.telefono = 'El teléfono es requerido.';\n      isValid = false;\n    } else if (!/^\\d{10}$/.test(formData.telefono.trim())) {\n      // Asume un teléfono de 10 dígitos (ajusta si es necesario)\n      newErrors.telefono = 'El teléfono debe tener 10 dígitos.';\n      isValid = false;\n    }\n    if (!formData.producto) {\n      newErrors.producto = 'Selecciona un producto.';\n      isValid = false;\n    }\n\n    // Cantidad siempre debe ser al menos 1\n    if (formData.cantidad < 1) {\n      newErrors.cantidad = 'La cantidad debe ser al menos 1.';\n      isValid = false;\n    }\n    if (formData.metodoEntrega === 'domicilio' && !formData.direccion.trim()) {\n      newErrors.direccion = 'La dirección es requerida para el servicio a domicilio.';\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  // Manejador para enviar el formulario\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      // Aquí iría la lógica para enviar el pedido a un backend o servicio.\n      // Por ahora, solo lo mostraremos en consola y un alert.\n      console.log(\"Pedido Enviado:\", formData);\n      alert('¡Tu pedido ha sido enviado con éxito! Nos pondremos en contacto contigo pronto.');\n\n      // Opcional: Reiniciar el formulario después de un envío exitoso\n      setFormData({\n        nombre: '',\n        telefono: '',\n        producto: '',\n        ingredientes: [],\n        cantidad: 1,\n        notas: '',\n        metodoEntrega: 'recoger',\n        direccion: ''\n      });\n      setErrors({}); // Limpiar errores\n      setSelectedIngrediente(''); // Limpiar selector de ingrediente\n    } else {\n      // Si hay errores, el validateForm ya los estableció en el estado 'errors'\n      alert('Por favor, completa todos los campos requeridos y corrige los errores.');\n      // Opcional: enfocar el primer campo con error para mejorar la UX\n      const firstErrorField = Object.keys(errors)[0];\n      if (firstErrorField) {\n        var _document$getElementB;\n        (_document$getElementB = document.getElementById(firstErrorField)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n      }\n    }\n  };\n\n  // Lógica para deshabilitar el botón de añadir ingrediente\n  const isAddIngredienteDisabled = !selectedIngrediente || formData.producto !== 'Elote en vaso';\n\n  // Lógica para deshabilitar el botón de enviar pedido\n  // Este useEffect asegura que el estado de 'disabled' del botón se actualice con cada cambio de formData.\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\n  useEffect(() => {\n    setIsSubmitDisabled(!validateForm());\n  }, [formData]); // Re-evaluar cuando formData cambie\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"seccion-realizar-pedido\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo-pedido\",\n      children: \"Realiza tu Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitulo-pedido\",\n      children: \"\\xA1Es f\\xE1cil y r\\xE1pido! Cu\\xE9ntanos qu\\xE9 se te antoja de Kayak Snack. Si tienes dudas o necesitas un pedido m\\xE1s complejo, cont\\xE1ctanos directamente.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"linea-decorativa-amarilla\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"contenedor-formulario-pedido\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          className: \"etiqueta-campo\",\n          children: [\"Tu Nombre: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          name: \"nombre\",\n          value: formData.nombre,\n          onChange: handleChange,\n          className: `input-text ${errors.nombre ? 'input-error' : ''}`,\n          placeholder: \"Escribe tu nombre\",\n          \"aria-invalid\": errors.nombre ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), errors.nombre && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-nombre\",\n          className: \"mensaje-error\",\n          children: errors.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"telefono\",\n          className: \"etiqueta-campo\",\n          children: [\"N\\xFAmero de Tel\\xE9fono: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\" // 'tel' para números de teléfono\n          ,\n          id: \"telefono\",\n          name: \"telefono\",\n          value: formData.telefono,\n          onChange: handleChange,\n          className: `input-text ${errors.telefono ? 'input-error' : ''}`,\n          placeholder: \"Ej: 8112345678\",\n          \"aria-invalid\": errors.telefono ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-telefono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), errors.telefono && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-telefono\",\n          className: \"mensaje-error\",\n          children: errors.telefono\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"producto\",\n          className: \"etiqueta-campo\",\n          children: [\"Selecciona tu antojo: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"producto\",\n          name: \"producto\",\n          value: formData.producto,\n          onChange: handleChange,\n          className: `input-select ${errors.producto ? 'input-error' : ''}`,\n          \"aria-invalid\": errors.producto ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-producto\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Elige un producto --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), productosDisponibles.map(producto => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: producto,\n            children: producto\n          }, producto, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), errors.producto && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-producto\",\n          className: \"mensaje-error\",\n          children: errors.producto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), formData.producto === 'Elote en vaso' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ingredienteExtra\",\n          className: \"etiqueta-campo\",\n          children: \"Ingredientes Extra para tu Elote:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-con-boton\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"ingredienteExtra\",\n            name: \"ingredienteExtra\",\n            value: selectedIngrediente,\n            onChange: e => setSelectedIngrediente(e.target.value),\n            className: \"input-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Selecciona un ingrediente --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this), ingredientesElote.map(ingrediente => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ingrediente,\n              disabled: formData.ingredientes.includes(ingrediente),\n              children: ingrediente\n            }, ingrediente, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddIngrediente,\n            className: \"boton-a\\xF1adir\",\n            disabled: isAddIngredienteDisabled,\n            children: \"A\\xF1adir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), formData.ingredientes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredientes-agregados\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"titulo-agregados\",\n            children: \"Agregados:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"lista-agregados\",\n            children: formData.ingredientes.map(ingrediente => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [ingrediente, /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleRemoveIngrediente(ingrediente),\n                className: \"boton-eliminar-ingrediente\",\n                title: \"Eliminar ingrediente\",\n                children: \"\\xD7 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 45\n              }, this)]\n            }, ingrediente, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cantidad\",\n          className: \"etiqueta-campo\",\n          children: [\"Cantidad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"cantidad\",\n          name: \"cantidad\",\n          value: formData.cantidad,\n          onChange: handleChange,\n          className: `input-text ${errors.cantidad ? 'input-error' : ''}`,\n          min: \"1\",\n          \"aria-invalid\": errors.cantidad ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-cantidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), errors.cantidad && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-cantidad\",\n          className: \"mensaje-error\",\n          children: errors.cantidad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notas\",\n          className: \"etiqueta-campo\",\n          children: \"Notas adicionales (opcional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"notas\",\n          name: \"notas\",\n          value: formData.notas,\n          onChange: handleChange,\n          className: \"input-text\",\n          rows: \"4\",\n          placeholder: \"Ej: sin picante, con mucha crema, etc.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"metodoEntrega\",\n          className: \"etiqueta-campo\",\n          children: [\"M\\xE9todo de entrega: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"metodoEntrega\",\n          name: \"metodoEntrega\",\n          value: formData.metodoEntrega,\n          onChange: handleChange,\n          className: \"input-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"recoger\",\n            children: \"Recoger en local\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"domicilio\",\n            children: \"Servicio a domicilio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), formData.metodoEntrega === 'domicilio' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-grupo\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"direccion\",\n          className: \"etiqueta-campo\",\n          children: [\"Direcci\\xF3n de entrega: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required-asterisk\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"direccion\",\n          name: \"direccion\",\n          value: formData.direccion,\n          onChange: handleChange,\n          className: `input-text ${errors.direccion ? 'input-error' : ''}`,\n          placeholder: \"Calle, n\\xFAmero, colonia, c\\xF3digo postal\",\n          \"aria-invalid\": errors.direccion ? \"true\" : \"false\",\n          \"aria-describedby\": \"error-direccion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }, this), errors.direccion && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-direccion\",\n          className: \"mensaje-error\",\n          children: errors.direccion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"boton-completar-pedido\",\n        disabled: isSubmitDisabled,\n        children: \"Enviar Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-telefono\",\n      children: [\"Si prefieres, tambi\\xE9n puedes hacer tu pedido llamando al: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"81 1234 5678\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 75\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n_s(RealizarPedido, \"al8pyqmV9E9vBbnvbDJ2LVESM7E=\");\n_c = RealizarPedido;\nexport default RealizarPedido;\nvar _c;\n$RefreshReg$(_c, \"RealizarPedido\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RealizarPedido","_s","formData","setFormData","nombre","telefono","producto","ingredientes","cantidad","notas","metodoEntrega","direccion","errors","setErrors","productosDisponibles","ingredientesElote","selectedIngrediente","setSelectedIngrediente","handleChange","e","name","value","target","prev","handleAddIngrediente","includes","alert","handleRemoveIngrediente","ingredienteToRemove","filter","ing","validateForm","newErrors","isValid","trim","test","handleSubmit","preventDefault","console","log","firstErrorField","Object","keys","_document$getElementB","document","getElementById","focus","isAddIngredienteDisabled","isSubmitDisabled","setIsSubmitDisabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","map","ingrediente","disabled","onClick","length","title","min","rows","_c","$RefreshReg$"],"sources":["C:/Users/980020889/Documents/GitHub/Front-end/kayaksnack/src/components/RealizarPedido.js"],"sourcesContent":["// src/components/RealizarPedido.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './RealizarPedido.css';\r\n// Si tienes un componente para un modal de confirmación, impórtalo aquí\r\n// import ConfirmacionPedidoModal from './ConfirmacionPedidoModal';\r\n\r\nfunction RealizarPedido() {\r\n    // Estado para los datos del formulario\r\n    const [formData, setFormData] = useState({\r\n        nombre: '',\r\n        telefono: '',\r\n        producto: '',\r\n        ingredientes: [], // Para guardar los ingredientes extras del elote\r\n        cantidad: 1,\r\n        notas: '',\r\n        metodoEntrega: 'recoger', // 'recoger' o 'domicilio'\r\n        direccion: '', // Solo relevante si es a domicilio\r\n    });\r\n\r\n    // Estado para controlar errores de validación\r\n    const [errors, setErrors] = useState({});\r\n\r\n    // Opciones de productos disponibles (pueden venir de una API o lista más grande)\r\n    const productosDisponibles = [\r\n        'Russa', 'Fruta', 'Elote en vaso', 'Tosticeviche', 'Tostielote', 'Boyas',\r\n        'Tostada', 'Litro Ceviche', 'Chilidog'\r\n    ];\r\n\r\n    // Opciones de ingredientes extra para elote (ejemplo)\r\n    const ingredientesElote = [\r\n        'Queso Cotija', 'Mayonesa', 'Chili en polvo', 'Limón', 'Crema', 'Mantequilla'\r\n    ];\r\n\r\n    // Estado para el ingrediente actualmente seleccionado en el dropdown\r\n    const [selectedIngrediente, setSelectedIngrediente] = useState('');\r\n\r\n    // Manejador genérico para cambios en los inputs del formulario\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n\r\n        // Limpia errores relacionados con el campo que se está modificando\r\n        setErrors(prev => ({ ...prev, [name]: '' }));\r\n\r\n        // Si el producto cambia y no es \"Elote en vaso\", limpia los ingredientes\r\n        if (name === 'producto' && value !== 'Elote en vaso') {\r\n            setFormData(prev => ({ ...prev, ingredientes: [] }));\r\n            setSelectedIngrediente(''); // También limpia el selector de ingredientes\r\n        }\r\n    };\r\n\r\n    // Manejador para añadir un ingrediente al elote\r\n    const handleAddIngrediente = () => {\r\n        if (selectedIngrediente && !formData.ingredientes.includes(selectedIngrediente)) {\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                ingredientes: [...prev.ingredientes, selectedIngrediente]\r\n            }));\r\n            setSelectedIngrediente(''); // Limpia el selector después de añadir\r\n            setErrors(prev => ({ ...prev, ingredientes: '' })); // Limpia error si existía\r\n        } else if (selectedIngrediente && formData.ingredientes.includes(selectedIngrediente)) {\r\n            // Feedback si el ingrediente ya fue añadido\r\n            alert(`\"${selectedIngrediente}\" ya ha sido añadido a tu elote.`);\r\n        }\r\n    };\r\n\r\n    // Manejador para eliminar un ingrediente del elote\r\n    const handleRemoveIngrediente = (ingredienteToRemove) => {\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            ingredientes: prev.ingredientes.filter(ing => ing !== ingredienteToRemove)\r\n        }));\r\n    };\r\n\r\n    // Función de validación del formulario\r\n    const validateForm = () => {\r\n        let newErrors = {};\r\n        let isValid = true;\r\n\r\n        if (!formData.nombre.trim()) {\r\n            newErrors.nombre = 'El nombre es requerido.';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.telefono.trim()) {\r\n            newErrors.telefono = 'El teléfono es requerido.';\r\n            isValid = false;\r\n        } else if (!/^\\d{10}$/.test(formData.telefono.trim())) { // Asume un teléfono de 10 dígitos (ajusta si es necesario)\r\n            newErrors.telefono = 'El teléfono debe tener 10 dígitos.';\r\n            isValid = false;\r\n        }\r\n\r\n        if (!formData.producto) {\r\n            newErrors.producto = 'Selecciona un producto.';\r\n            isValid = false;\r\n        }\r\n\r\n        // Cantidad siempre debe ser al menos 1\r\n        if (formData.cantidad < 1) {\r\n            newErrors.cantidad = 'La cantidad debe ser al menos 1.';\r\n            isValid = false;\r\n        }\r\n\r\n\r\n        if (formData.metodoEntrega === 'domicilio' && !formData.direccion.trim()) {\r\n            newErrors.direccion = 'La dirección es requerida para el servicio a domicilio.';\r\n            isValid = false;\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return isValid;\r\n    };\r\n\r\n    // Manejador para enviar el formulario\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (validateForm()) {\r\n            // Aquí iría la lógica para enviar el pedido a un backend o servicio.\r\n            // Por ahora, solo lo mostraremos en consola y un alert.\r\n            console.log(\"Pedido Enviado:\", formData);\r\n            alert('¡Tu pedido ha sido enviado con éxito! Nos pondremos en contacto contigo pronto.');\r\n\r\n            // Opcional: Reiniciar el formulario después de un envío exitoso\r\n            setFormData({\r\n                nombre: '',\r\n                telefono: '',\r\n                producto: '',\r\n                ingredientes: [],\r\n                cantidad: 1,\r\n                notas: '',\r\n                metodoEntrega: 'recoger',\r\n                direccion: '',\r\n            });\r\n            setErrors({}); // Limpiar errores\r\n            setSelectedIngrediente(''); // Limpiar selector de ingrediente\r\n        } else {\r\n            // Si hay errores, el validateForm ya los estableció en el estado 'errors'\r\n            alert('Por favor, completa todos los campos requeridos y corrige los errores.');\r\n            // Opcional: enfocar el primer campo con error para mejorar la UX\r\n            const firstErrorField = Object.keys(errors)[0];\r\n            if (firstErrorField) {\r\n                document.getElementById(firstErrorField)?.focus();\r\n            }\r\n        }\r\n    };\r\n\r\n    // Lógica para deshabilitar el botón de añadir ingrediente\r\n    const isAddIngredienteDisabled = !selectedIngrediente || formData.producto !== 'Elote en vaso';\r\n\r\n    // Lógica para deshabilitar el botón de enviar pedido\r\n    // Este useEffect asegura que el estado de 'disabled' del botón se actualice con cada cambio de formData.\r\n    const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setIsSubmitDisabled(!validateForm());\r\n    }, [formData]); // Re-evaluar cuando formData cambie\r\n\r\n    return (\r\n        <div className=\"seccion-realizar-pedido\">\r\n            <h1 className=\"titulo-pedido\">Realiza tu Pedido</h1>\r\n            <p className=\"subtitulo-pedido\">\r\n                ¡Es fácil y rápido! Cuéntanos qué se te antoja de Kayak Snack.\r\n                Si tienes dudas o necesitas un pedido más complejo, contáctanos directamente.\r\n            </p>\r\n            {/* Línea decorativa amarilla similar a las otras secciones */}\r\n            <hr className=\"linea-decorativa-amarilla\" />\r\n\r\n            <form onSubmit={handleSubmit} className=\"contenedor-formulario-pedido\">\r\n                {/* Campo Nombre */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"nombre\" className=\"etiqueta-campo\">\r\n                        Tu Nombre: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"nombre\"\r\n                        name=\"nombre\"\r\n                        value={formData.nombre}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.nombre ? 'input-error' : ''}`}\r\n                        placeholder=\"Escribe tu nombre\"\r\n                        aria-invalid={errors.nombre ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-nombre\"\r\n                    />\r\n                    {errors.nombre && <p id=\"error-nombre\" className=\"mensaje-error\">{errors.nombre}</p>}\r\n                </div>\r\n\r\n                {/* Campo Teléfono */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"telefono\" className=\"etiqueta-campo\">\r\n                        Número de Teléfono: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"tel\" // 'tel' para números de teléfono\r\n                        id=\"telefono\"\r\n                        name=\"telefono\"\r\n                        value={formData.telefono}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.telefono ? 'input-error' : ''}`}\r\n                        placeholder=\"Ej: 8112345678\"\r\n                        aria-invalid={errors.telefono ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-telefono\"\r\n                    />\r\n                    {errors.telefono && <p id=\"error-telefono\" className=\"mensaje-error\">{errors.telefono}</p>}\r\n                </div>\r\n\r\n                {/* Campo Producto */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"producto\" className=\"etiqueta-campo\">\r\n                        Selecciona tu antojo: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <select\r\n                        id=\"producto\"\r\n                        name=\"producto\"\r\n                        value={formData.producto}\r\n                        onChange={handleChange}\r\n                        className={`input-select ${errors.producto ? 'input-error' : ''}`}\r\n                        aria-invalid={errors.producto ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-producto\"\r\n                    >\r\n                        <option value=\"\">-- Elige un producto --</option>\r\n                        {productosDisponibles.map(producto => (\r\n                            <option key={producto} value={producto}>{producto}</option>\r\n                        ))}\r\n                    </select>\r\n                    {errors.producto && <p id=\"error-producto\" className=\"mensaje-error\">{errors.producto}</p>}\r\n                </div>\r\n\r\n                {/* Campo Ingredientes Extra (solo si el producto es \"Elote en vaso\") */}\r\n                {formData.producto === 'Elote en vaso' && (\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"ingredienteExtra\" className=\"etiqueta-campo\">Ingredientes Extra para tu Elote:</label>\r\n                        <div className=\"input-con-boton\">\r\n                            <select\r\n                                id=\"ingredienteExtra\"\r\n                                name=\"ingredienteExtra\"\r\n                                value={selectedIngrediente}\r\n                                onChange={(e) => setSelectedIngrediente(e.target.value)}\r\n                                className=\"input-select\"\r\n                            >\r\n                                <option value=\"\">-- Selecciona un ingrediente --</option>\r\n                                {ingredientesElote.map(ingrediente => (\r\n                                    <option\r\n                                        key={ingrediente}\r\n                                        value={ingrediente}\r\n                                        disabled={formData.ingredientes.includes(ingrediente)}\r\n                                    >\r\n                                        {ingrediente}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={handleAddIngrediente}\r\n                                className=\"boton-añadir\"\r\n                                disabled={isAddIngredienteDisabled}\r\n                            >\r\n                                Añadir\r\n                            </button>\r\n                        </div>\r\n                        {formData.ingredientes.length > 0 && (\r\n                            <div className=\"ingredientes-agregados\">\r\n                                <p className=\"titulo-agregados\">Agregados:</p>\r\n                                <ul className=\"lista-agregados\">\r\n                                    {formData.ingredientes.map(ingrediente => (\r\n                                        <li key={ingrediente}>\r\n                                            {ingrediente}\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => handleRemoveIngrediente(ingrediente)}\r\n                                                className=\"boton-eliminar-ingrediente\"\r\n                                                title=\"Eliminar ingrediente\"\r\n                                            >\r\n                                                &times; {/* Símbolo de cruz para eliminar */}\r\n                                            </button>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Campo Cantidad */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"cantidad\" className=\"etiqueta-campo\">\r\n                        Cantidad: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"cantidad\"\r\n                        name=\"cantidad\"\r\n                        value={formData.cantidad}\r\n                        onChange={handleChange}\r\n                        className={`input-text ${errors.cantidad ? 'input-error' : ''}`}\r\n                        min=\"1\"\r\n                        aria-invalid={errors.cantidad ? \"true\" : \"false\"}\r\n                        aria-describedby=\"error-cantidad\"\r\n                    />\r\n                     {errors.cantidad && <p id=\"error-cantidad\" className=\"mensaje-error\">{errors.cantidad}</p>}\r\n                </div>\r\n\r\n                {/* Campo Notas Adicionales */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"notas\" className=\"etiqueta-campo\">Notas adicionales (opcional):</label>\r\n                    <textarea\r\n                        id=\"notas\"\r\n                        name=\"notas\"\r\n                        value={formData.notas}\r\n                        onChange={handleChange}\r\n                        className=\"input-text\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Ej: sin picante, con mucha crema, etc.\"\r\n                    ></textarea>\r\n                </div>\r\n\r\n                {/* Campo Método de Entrega */}\r\n                <div className=\"campo-grupo\">\r\n                    <label htmlFor=\"metodoEntrega\" className=\"etiqueta-campo\">\r\n                        Método de entrega: <span className=\"required-asterisk\">*</span>\r\n                    </label>\r\n                    <select\r\n                        id=\"metodoEntrega\"\r\n                        name=\"metodoEntrega\"\r\n                        value={formData.metodoEntrega}\r\n                        onChange={handleChange}\r\n                        className=\"input-select\"\r\n                    >\r\n                        <option value=\"recoger\">Recoger en local</option>\r\n                        <option value=\"domicilio\">Servicio a domicilio</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* Campo Dirección (solo si el método de entrega es \"domicilio\") */}\r\n                {formData.metodoEntrega === 'domicilio' && (\r\n                    <div className=\"campo-grupo\">\r\n                        <label htmlFor=\"direccion\" className=\"etiqueta-campo\">\r\n                            Dirección de entrega: <span className=\"required-asterisk\">*</span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"direccion\"\r\n                            name=\"direccion\"\r\n                            value={formData.direccion}\r\n                            onChange={handleChange}\r\n                            className={`input-text ${errors.direccion ? 'input-error' : ''}`}\r\n                            placeholder=\"Calle, número, colonia, código postal\"\r\n                            aria-invalid={errors.direccion ? \"true\" : \"false\"}\r\n                            aria-describedby=\"error-direccion\"\r\n                        />\r\n                        {errors.direccion && <p id=\"error-direccion\" className=\"mensaje-error\">{errors.direccion}</p>}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Botón para completar el pedido */}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"boton-completar-pedido\"\r\n                    disabled={isSubmitDisabled}\r\n                >\r\n                    Enviar Pedido\r\n                </button>\r\n            </form>\r\n\r\n            <p className=\"info-telefono\">\r\n                Si prefieres, también puedes hacer tu pedido llamando al: <strong>81 1234 5678</strong>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RealizarPedido;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAC7B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACrCQ,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAAE;IAClBC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,SAAS;IAAE;IAC1BC,SAAS,EAAE,EAAE,CAAE;EACnB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMkB,oBAAoB,GAAG,CACzB,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,YAAY,EAAE,OAAO,EACxE,SAAS,EAAE,eAAe,EAAE,UAAU,CACzC;;EAED;EACA,MAAMC,iBAAiB,GAAG,CACtB,cAAc,EAAE,UAAU,EAAE,gBAAgB,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,CAChF;;EAED;EACA,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAElE;EACA,MAAMsB,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCnB,WAAW,CAACoB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;;IAEjD;IACAR,SAAS,CAACU,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAG;IAAG,CAAC,CAAC,CAAC;;IAE5C;IACA,IAAIA,IAAI,KAAK,UAAU,IAAIC,KAAK,KAAK,eAAe,EAAE;MAClDlB,WAAW,CAACoB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEhB,YAAY,EAAE;MAAG,CAAC,CAAC,CAAC;MACpDU,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC;EACJ,CAAC;;EAED;EACA,MAAMO,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,IAAIR,mBAAmB,IAAI,CAACd,QAAQ,CAACK,YAAY,CAACkB,QAAQ,CAACT,mBAAmB,CAAC,EAAE;MAC7Eb,WAAW,CAACoB,IAAI,KAAK;QACjB,GAAGA,IAAI;QACPhB,YAAY,EAAE,CAAC,GAAGgB,IAAI,CAAChB,YAAY,EAAES,mBAAmB;MAC5D,CAAC,CAAC,CAAC;MACHC,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5BJ,SAAS,CAACU,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEhB,YAAY,EAAE;MAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,MAAM,IAAIS,mBAAmB,IAAId,QAAQ,CAACK,YAAY,CAACkB,QAAQ,CAACT,mBAAmB,CAAC,EAAE;MACnF;MACAU,KAAK,CAAC,IAAIV,mBAAmB,kCAAkC,CAAC;IACpE;EACJ,CAAC;;EAED;EACA,MAAMW,uBAAuB,GAAIC,mBAAmB,IAAK;IACrDzB,WAAW,CAACoB,IAAI,KAAK;MACjB,GAAGA,IAAI;MACPhB,YAAY,EAAEgB,IAAI,CAAChB,YAAY,CAACsB,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAKF,mBAAmB;IAC7E,CAAC,CAAC,CAAC;EACP,CAAC;;EAED;EACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIC,SAAS,GAAG,CAAC,CAAC;IAClB,IAAIC,OAAO,GAAG,IAAI;IAElB,IAAI,CAAC/B,QAAQ,CAACE,MAAM,CAAC8B,IAAI,CAAC,CAAC,EAAE;MACzBF,SAAS,CAAC5B,MAAM,GAAG,yBAAyB;MAC5C6B,OAAO,GAAG,KAAK;IACnB;IAEA,IAAI,CAAC/B,QAAQ,CAACG,QAAQ,CAAC6B,IAAI,CAAC,CAAC,EAAE;MAC3BF,SAAS,CAAC3B,QAAQ,GAAG,2BAA2B;MAChD4B,OAAO,GAAG,KAAK;IACnB,CAAC,MAAM,IAAI,CAAC,UAAU,CAACE,IAAI,CAACjC,QAAQ,CAACG,QAAQ,CAAC6B,IAAI,CAAC,CAAC,CAAC,EAAE;MAAE;MACrDF,SAAS,CAAC3B,QAAQ,GAAG,oCAAoC;MACzD4B,OAAO,GAAG,KAAK;IACnB;IAEA,IAAI,CAAC/B,QAAQ,CAACI,QAAQ,EAAE;MACpB0B,SAAS,CAAC1B,QAAQ,GAAG,yBAAyB;MAC9C2B,OAAO,GAAG,KAAK;IACnB;;IAEA;IACA,IAAI/B,QAAQ,CAACM,QAAQ,GAAG,CAAC,EAAE;MACvBwB,SAAS,CAACxB,QAAQ,GAAG,kCAAkC;MACvDyB,OAAO,GAAG,KAAK;IACnB;IAGA,IAAI/B,QAAQ,CAACQ,aAAa,KAAK,WAAW,IAAI,CAACR,QAAQ,CAACS,SAAS,CAACuB,IAAI,CAAC,CAAC,EAAE;MACtEF,SAAS,CAACrB,SAAS,GAAG,yDAAyD;MAC/EsB,OAAO,GAAG,KAAK;IACnB;IAEApB,SAAS,CAACmB,SAAS,CAAC;IACpB,OAAOC,OAAO;EAClB,CAAC;;EAED;EACA,MAAMG,YAAY,GAAIjB,CAAC,IAAK;IACxBA,CAAC,CAACkB,cAAc,CAAC,CAAC;IAElB,IAAIN,YAAY,CAAC,CAAC,EAAE;MAChB;MACA;MACAO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAErC,QAAQ,CAAC;MACxCwB,KAAK,CAAC,iFAAiF,CAAC;;MAExF;MACAvB,WAAW,CAAC;QACRC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,YAAY,EAAE,EAAE;QAChBC,QAAQ,EAAE,CAAC;QACXC,KAAK,EAAE,EAAE;QACTC,aAAa,EAAE,SAAS;QACxBC,SAAS,EAAE;MACf,CAAC,CAAC;MACFE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACfI,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC,MAAM;MACH;MACAS,KAAK,CAAC,wEAAwE,CAAC;MAC/E;MACA,MAAMc,eAAe,GAAGC,MAAM,CAACC,IAAI,CAAC9B,MAAM,CAAC,CAAC,CAAC,CAAC;MAC9C,IAAI4B,eAAe,EAAE;QAAA,IAAAG,qBAAA;QACjB,CAAAA,qBAAA,GAAAC,QAAQ,CAACC,cAAc,CAACL,eAAe,CAAC,cAAAG,qBAAA,uBAAxCA,qBAAA,CAA0CG,KAAK,CAAC,CAAC;MACrD;IACJ;EACJ,CAAC;;EAED;EACA,MAAMC,wBAAwB,GAAG,CAAC/B,mBAAmB,IAAId,QAAQ,CAACI,QAAQ,KAAK,eAAe;;EAE9F;EACA;EACA,MAAM,CAAC0C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACZoD,mBAAmB,CAAC,CAAClB,YAAY,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAAC7B,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACIH,OAAA;IAAKmD,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACpCpD,OAAA;MAAImD,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDxD,OAAA;MAAGmD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAGhC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEJxD,OAAA;MAAImD,SAAS,EAAC;IAA2B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5CxD,OAAA;MAAMyD,QAAQ,EAAEpB,YAAa;MAACc,SAAS,EAAC,8BAA8B;MAAAC,QAAA,gBAElEpD,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBpD,OAAA;UAAO0D,OAAO,EAAC,QAAQ;UAACP,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,aACpC,eAAApD,OAAA;YAAMmD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACRxD,OAAA;UACI2D,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,QAAQ;UACXvC,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEnB,QAAQ,CAACE,MAAO;UACvBwD,QAAQ,EAAE1C,YAAa;UACvBgC,SAAS,EAAE,cAActC,MAAM,CAACR,MAAM,GAAG,aAAa,GAAG,EAAE,EAAG;UAC9DyD,WAAW,EAAC,mBAAmB;UAC/B,gBAAcjD,MAAM,CAACR,MAAM,GAAG,MAAM,GAAG,OAAQ;UAC/C,oBAAiB;QAAc;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,EACD3C,MAAM,CAACR,MAAM,iBAAIL,OAAA;UAAG4D,EAAE,EAAC,cAAc;UAACT,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEvC,MAAM,CAACR;QAAM;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC,eAGNxD,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBpD,OAAA;UAAO0D,OAAO,EAAC,UAAU;UAACP,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,4BAC7B,eAAApD,OAAA;YAAMmD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,eACRxD,OAAA;UACI2D,IAAI,EAAC,KAAK,CAAC;UAAA;UACXC,EAAE,EAAC,UAAU;UACbvC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEnB,QAAQ,CAACG,QAAS;UACzBuD,QAAQ,EAAE1C,YAAa;UACvBgC,SAAS,EAAE,cAActC,MAAM,CAACP,QAAQ,GAAG,aAAa,GAAG,EAAE,EAAG;UAChEwD,WAAW,EAAC,gBAAgB;UAC5B,gBAAcjD,MAAM,CAACP,QAAQ,GAAG,MAAM,GAAG,OAAQ;UACjD,oBAAiB;QAAgB;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,EACD3C,MAAM,CAACP,QAAQ,iBAAIN,OAAA;UAAG4D,EAAE,EAAC,gBAAgB;UAACT,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEvC,MAAM,CAACP;QAAQ;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzF,CAAC,eAGNxD,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBpD,OAAA;UAAO0D,OAAO,EAAC,UAAU;UAACP,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,wBAC3B,eAAApD,OAAA;YAAMmD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eACRxD,OAAA;UACI4D,EAAE,EAAC,UAAU;UACbvC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEnB,QAAQ,CAACI,QAAS;UACzBsD,QAAQ,EAAE1C,YAAa;UACvBgC,SAAS,EAAE,gBAAgBtC,MAAM,CAACN,QAAQ,GAAG,aAAa,GAAG,EAAE,EAAG;UAClE,gBAAcM,MAAM,CAACN,QAAQ,GAAG,MAAM,GAAG,OAAQ;UACjD,oBAAiB,gBAAgB;UAAA6C,QAAA,gBAEjCpD,OAAA;YAAQsB,KAAK,EAAC,EAAE;YAAA8B,QAAA,EAAC;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAChDzC,oBAAoB,CAACgD,GAAG,CAACxD,QAAQ,iBAC9BP,OAAA;YAAuBsB,KAAK,EAAEf,QAAS;YAAA6C,QAAA,EAAE7C;UAAQ,GAApCA,QAAQ;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqC,CAC7D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EACR3C,MAAM,CAACN,QAAQ,iBAAIP,OAAA;UAAG4D,EAAE,EAAC,gBAAgB;UAACT,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEvC,MAAM,CAACN;QAAQ;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzF,CAAC,EAGLrD,QAAQ,CAACI,QAAQ,KAAK,eAAe,iBAClCP,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBpD,OAAA;UAAO0D,OAAO,EAAC,kBAAkB;UAACP,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAiC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtGxD,OAAA;UAAKmD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5BpD,OAAA;YACI4D,EAAE,EAAC,kBAAkB;YACrBvC,IAAI,EAAC,kBAAkB;YACvBC,KAAK,EAAEL,mBAAoB;YAC3B4C,QAAQ,EAAGzC,CAAC,IAAKF,sBAAsB,CAACE,CAAC,CAACG,MAAM,CAACD,KAAK,CAAE;YACxD6B,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAExBpD,OAAA;cAAQsB,KAAK,EAAC,EAAE;cAAA8B,QAAA,EAAC;YAA+B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACxDxC,iBAAiB,CAAC+C,GAAG,CAACC,WAAW,iBAC9BhE,OAAA;cAEIsB,KAAK,EAAE0C,WAAY;cACnBC,QAAQ,EAAE9D,QAAQ,CAACK,YAAY,CAACkB,QAAQ,CAACsC,WAAW,CAAE;cAAAZ,QAAA,EAErDY;YAAW,GAJPA,WAAW;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKZ,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACTxD,OAAA;YACI2D,IAAI,EAAC,QAAQ;YACbO,OAAO,EAAEzC,oBAAqB;YAC9B0B,SAAS,EAAC,iBAAc;YACxBc,QAAQ,EAAEjB,wBAAyB;YAAAI,QAAA,EACtC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,EACLrD,QAAQ,CAACK,YAAY,CAAC2D,MAAM,GAAG,CAAC,iBAC7BnE,OAAA;UAAKmD,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACnCpD,OAAA;YAAGmD,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC9CxD,OAAA;YAAImD,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC1BjD,QAAQ,CAACK,YAAY,CAACuD,GAAG,CAACC,WAAW,iBAClChE,OAAA;cAAAoD,QAAA,GACKY,WAAW,eACZhE,OAAA;gBACI2D,IAAI,EAAC,QAAQ;gBACbO,OAAO,EAAEA,CAAA,KAAMtC,uBAAuB,CAACoC,WAAW,CAAE;gBACpDb,SAAS,EAAC,4BAA4B;gBACtCiB,KAAK,EAAC,sBAAsB;gBAAAhB,QAAA,EAC/B;cACW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA,GATJQ,WAAW;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUhB,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACR,eAGDxD,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBpD,OAAA;UAAO0D,OAAO,EAAC,UAAU;UAACP,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,YACvC,eAAApD,OAAA;YAAMmD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACRxD,OAAA;UACI2D,IAAI,EAAC,QAAQ;UACbC,EAAE,EAAC,UAAU;UACbvC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEnB,QAAQ,CAACM,QAAS;UACzBoD,QAAQ,EAAE1C,YAAa;UACvBgC,SAAS,EAAE,cAActC,MAAM,CAACJ,QAAQ,GAAG,aAAa,GAAG,EAAE,EAAG;UAChE4D,GAAG,EAAC,GAAG;UACP,gBAAcxD,MAAM,CAACJ,QAAQ,GAAG,MAAM,GAAG,OAAQ;UACjD,oBAAiB;QAAgB;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,EACA3C,MAAM,CAACJ,QAAQ,iBAAIT,OAAA;UAAG4D,EAAE,EAAC,gBAAgB;UAACT,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEvC,MAAM,CAACJ;QAAQ;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1F,CAAC,eAGNxD,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBpD,OAAA;UAAO0D,OAAO,EAAC,OAAO;UAACP,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvFxD,OAAA;UACI4D,EAAE,EAAC,OAAO;UACVvC,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEnB,QAAQ,CAACO,KAAM;UACtBmD,QAAQ,EAAE1C,YAAa;UACvBgC,SAAS,EAAC,YAAY;UACtBmB,IAAI,EAAC,GAAG;UACRR,WAAW,EAAC;QAAwC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAGNxD,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBpD,OAAA;UAAO0D,OAAO,EAAC,eAAe;UAACP,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,wBACnC,eAAApD,OAAA;YAAMmD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,eACRxD,OAAA;UACI4D,EAAE,EAAC,eAAe;UAClBvC,IAAI,EAAC,eAAe;UACpBC,KAAK,EAAEnB,QAAQ,CAACQ,aAAc;UAC9BkD,QAAQ,EAAE1C,YAAa;UACvBgC,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAExBpD,OAAA;YAAQsB,KAAK,EAAC,SAAS;YAAA8B,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjDxD,OAAA;YAAQsB,KAAK,EAAC,WAAW;YAAA8B,QAAA,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EAGLrD,QAAQ,CAACQ,aAAa,KAAK,WAAW,iBACnCX,OAAA;QAAKmD,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBpD,OAAA;UAAO0D,OAAO,EAAC,WAAW;UAACP,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,2BAC5B,eAAApD,OAAA;YAAMmD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eACRxD,OAAA;UACI2D,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,WAAW;UACdvC,IAAI,EAAC,WAAW;UAChBC,KAAK,EAAEnB,QAAQ,CAACS,SAAU;UAC1BiD,QAAQ,EAAE1C,YAAa;UACvBgC,SAAS,EAAE,cAActC,MAAM,CAACD,SAAS,GAAG,aAAa,GAAG,EAAE,EAAG;UACjEkD,WAAW,EAAC,6CAAuC;UACnD,gBAAcjD,MAAM,CAACD,SAAS,GAAG,MAAM,GAAG,OAAQ;UAClD,oBAAiB;QAAiB;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,EACD3C,MAAM,CAACD,SAAS,iBAAIZ,OAAA;UAAG4D,EAAE,EAAC,iBAAiB;UAACT,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEvC,MAAM,CAACD;QAAS;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5F,CACR,eAGDxD,OAAA;QACI2D,IAAI,EAAC,QAAQ;QACbR,SAAS,EAAC,wBAAwB;QAClCc,QAAQ,EAAEhB,gBAAiB;QAAAG,QAAA,EAC9B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAEPxD,OAAA;MAAGmD,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,+DACiC,eAAApD,OAAA;QAAAoD,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACtD,EAAA,CA5WQD,cAAc;AAAAsE,EAAA,GAAdtE,cAAc;AA8WvB,eAAeA,cAAc;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}